

$(document).ready(function(){




  //Safety Form
  var arrVeiculoSafe = [];
  var arrVeiculoSafeName = [];
  var arrPeopleSafe = [];
  var arrPeopleSafeName = [];
  var arrRedHat = [];
  var arrRedHatName = [];
  var arrfallArrestDevices = [];
  var arrfallArrestDevicesName = [];

  //EDBoard Form
  var arrConnection = [];
  var arrConnectionName = [];
  var arrEnergyMeter = [];
  var arrEnergyMeterName = [];
  var arrSwitchingMec = [];
  var arrSwitchingMecName = [];
  var arrDBoardSleeves = [];
  var arrDBoardSleevesName = [];
  var arrLightSwitch = [];
  var arrLightSwitchName = [];
  var arrPaintworkSiteLight = [];
  var arrPaintworkSiteLightName = [];
  var arrAcSupplierDefects = [];
  var arrAcSupplierDefectsName = [];

  //Container Form
  var arrContainerLight = [];
  var arrContainerLightName = [];
  var arrCircuitBreaker = [];
  var arrCircuitBreakerName = [];
  var arrEarthConnections = [];
  var arrEarthConnectionsName = [];
  var arrConditions = [];
  var arrConditionsName = [];
  var arrRoofWater = [];
  var arrRoofWaterName = [];
  var arrPaintwork = [];
  var arrPaintworkName = [];
  var arrJointsCablesHoles = [];
  var arrJointsCablesHolesName = [];
  var arrTransmissionRadioCF = [];
  var arrTransmissionRadioCFName = [];

  //Roof Top
  var arrMountingPoles = [];
  var arrMountingPolesName = [];
  var arrPolesCorrosions = [];
  var arrPolesCorrosionsName = [];
  var arrPolesEarthed = [];
  var arrPolesEarthedName = [];
  var arrCabinetDamage = [];
  var arrCabinetDamageName = [];
  var arrTransmissionRadioRF = [];
  var arrTransmissionRadioRFName = [];

  //Mast
  var arrAwLight = [];
  var arrAwLightName = [];
  var arrAwLightDbFitting = [];
  var arrAwLightDbFittingName = [];
  var arrTowerInspection = [];
  var arrTowerInspectionName = [];
  var arrPaintTower = [];
  var arrPaintTowerName = [];
  var arrVisualInpectionTransRadio = [];
  var arrVisualInpectionTransRadioName = [];
  var arrTowerSpecification = [];
  var arrTowerSpecificationName = [];

  //Air Conditioners
  var arrFanBlade = [];
  var arrFanBladeName = [];
  var arrNoiseVibration = [];
  var arrNoiseVibrationName = [];
  var arrRefrigerantLine = [];
  var arrRefrigerantLineName = [];
  var arrCasingSealed = [];
  var arrCasingSealedName = [];
  var arrRustACF = [];
  var arrRustACFName = [];

  //Site General
  var arrFenceGateLocksHinges = [];
  var arrFenceGateLocksHingesName = [];
  var arrSignage = [];
  var arrSignageName = [];
  var arrWaterDamage = [];
  var arrWaterDamageName = [];
  var arrCrushedStone = [];
  var arrCrushedStoneName = [];
  var arrSiteClean = [];
  var arrSiteCleanName = [];
  var arrWeedsGrass = [];
  var arrWeedsGrassName = [];
  var arrDefectAccessRoad = [];
  var arrDefectAccessRoadName = [];
  var arrRubish = [];
  var arrRubishName = [];

   //Alarms
  var arrIntruder = [];
  var arrIntruderName = [];
  var arrMovement = [];
  var arrMovementName = [];
  var arrHighTemp = [];
  var arrHighTempName = [];
  var arrRectifierSystem = [];
  var arrRectifierSystemName = [];
  var arrRectifierModule = [];
  var arrRectifierModuleName = [];
  var arrAircon1 = [];
  var arrAircon1Name = [];
  var arrAircon2 = [];
  var arrAircon2Name = [];
  var arrGeneratorFuel = [];
  var arrGeneratorFuelName = [];
  var arrGeneratorAbnormal = [];
  var arrGeneratorAbnormalName = [];
  var arrAircraftWarning = [];
  var arrAircraftWarningName = [];
  var arrSmoke = [];
  var arrSmokeName = [];
  var arrAcMainsFailure = [];
  var arrAcMainsFailureName = [];
  var arrBatteryLow = [];
  var arrBatteryLowName = [];
  var arrGeneratorRunning = [];
  var arrGeneratorRunningName = [];

  //Generator
  var arrEngineOil = [];
  var arrEngineOilName = [];
  var arrOilLeak = [];
  var arrOilLeakName = [];
  var arrRadiatorHoses = [];
  var arrRadiatorHosesName = [];
  var arrAirFilter = [];
  var arrAirFilterName = [];
  var arrCoolantLeaks = [];
  var arrCoolantLeaksName = [];
  var arrVBelt = [];
  var arrVBeltName = [];
  var arrFuelLeaks = [];
  var arrFuelLeaksName = [];
  var arrElectrolyteConnectionCond = [];
  var arrElectrolyteConnectionCondName = [];
  var arrSwitcherBreaker = [];
  var arrSwitcherBreakerName = [];
  var arrControlPanelRecordLevel = [];
  var arrControlPanelRecordLevelName = [];
  var arrAbnormalVibrations = [];
  var arrAbnormalVibrationsName = [];
  var arrRustGF = [];
  var arrRustGFName = [];
  var arrMoutingsBrackets = [];
  var arrMoutingsBracketsName = [];
  var arrOveralCond = [];
  var arrOveralCondName = [];

  //Petty cash Control System
  var arrPettycash_imagem = [];
  var arrPettycash_imagemName = [];


  // Image of Preventative Maintenance
  var arrJobcard_photoMaint = [];
  var arrJobcard_photoMaintName = [];




  if(window.File && window.FileList && window.FileReader) {

    $("#jobcardphotoinfo").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      $('#loading').fadeIn().delay(10000).fadeOut();
      console.log("Teste");
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {
        
        var f = files[i];
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;
        // console.log(teste[i].name);
        //adiconar os ficheiros carregados no array
        arrJobcard_photoMaint.push(teste[i]);
        arrJobcard_photoMaintName.push(teste[i].name.split(".")[0]);

        // mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("mostrarpicturesmaint_imagem");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }

      for(let i = 0, j = files.length; i<j;i++){
        //compressing the target image
        var imageFile = files[i];
        console.log('Img Original', imageFile instanceof Blob);
        console.log("Size original " + imageFile.size / 1024 / 1024 +" MB");

        var options = {
          maxSizeMb: 1,
          maxWidthOrHeight: 1920,
          useWebWorker: true
        }

        imageCompression(imageFile, options)
          .then(function (compressedFile) {
            console.log("Compressed", compressedFile instanceof Blob);
            console.log("Compressed size" + compressedFile.size /1024 / 1024 + "MB");
            //console.log(compressedFile);
            arrJobcard_photoMaint[i] = compressedFile;
            return compressedFile;
        }).then((compressedFile)=>{
          console.log("Sucesso!")
          console.log(arrJobcard_photoMaintName);
          console.log(arrJobcard_photoMaint);
          console.log(compressedFile);
        })
        .catch(function (error) {
          console.log("Deu algum erro aqui   " + error);
        });
        
      }
    });

    // $("#jobcardphotoinfo").on("change",function(e) {
    //   //pega os ficheiros
    //   var files = e.target.files,
    //   filesLength = files.length;
      
    //   //percorre o numero de ficheiros carregados
    //   for (var i = 0; i < filesLength; i++) {

    //     var f = files[i];
    //     var fileReader = new FileReader();
    //     var teste=$(this).get(0).files;
    //     // console.log(teste[i].name);
    //     //adiconar os ficheiros carregados no array
    //     arrJobcard_photoMaint.push(teste[i]);
    //     arrJobcard_photoMaintName.push(teste[i].name.split(".")[0]);

    //     // mostrar os ficheiros na tela
    //     var fileName = teste[i].name.split(".")[0];
    //     var tt = document.getElementById("mostrarpicturesmaint_imagem");
    //     tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
    //     fileReader.readAsText(f);
    //   }
    //   console.log(arrJobcard_photoMaintName);
    // });

    $(".mostrarpicturesmaint_imagem").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      // console.log(arrVeiculoSafeName);
      arrJobcard_photoMaintName.splice(posicao, 1);
      arrJobcard_photoMaint.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      console.log(arrJobcard_photoMaintName);
  });

    $("#pettycash_imagem").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i];
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;
        // console.log(teste[i].name);
        //adiconar os ficheiros carregados no array
        arrPettycash_imagem.push(teste[i]);
        arrPettycash_imagemName.push(teste[i].name.split(".")[0]);

        // mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("mostrarpettycash_imagem");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      console.log(arrPettycash_imagemName);
    });

    $(".mostrarpettycash_imagem").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      // console.log(arrVeiculoSafeName);
      arrPettycash_imagemName.splice(posicao, 1);
      arrPettycash_imagem.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      console.log(arrPettycash_imagemName);
  });

    $("#veiculo_safe_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i];
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;
        console.log(teste[i].name);
        //adiconar os ficheiros carregados no array
        arrVeiculoSafe.push(teste[i]);
        arrVeiculoSafeName.push(teste[i].name.split(".")[0]);

        // mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("safety1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrVeiculoSafeName);
    });

    $(".safety1").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      // console.log(arrVeiculoSafeName);
      arrVeiculoSafeName.splice(posicao, 1);
      arrVeiculoSafe.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrVeiculoSafe);
  });

    $("#People_safe_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrPeopleSafe.push(teste[i]);
        arrPeopleSafeName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("safety2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrPeopleSafe);
    });

    $(".safety2").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrPeopleSafeName.splice(posicao, 1);
      arrPeopleSafe.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrPeopleSafe);
  });

    $("#red_hat_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRedHat.push(teste[i]);
        arrRedHatName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("safety3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRedHat);
    });

    $(".safety3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRedHatName.splice(posicao, 1);
      arrRedHat.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRedHat);
  });

    $("#fall_Arrest_devices_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrfallArrestDevices.push(teste[i]);
        arrfallArrestDevicesName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("safety4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrfallArrestDevices);
    });

    $(".safety4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrfallArrestDevicesName.splice(posicao, 1);
      arrfallArrestDevices.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrfallArrestDevices);
  });

    //EDBOARD FORM

    $("#Connection_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrConnection.push(teste[i]);
        arrConnectionName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("edBoardOb1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrConnection);
    });

    $(".edBoardOb1").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrConnectionName.splice(posicao, 1);
      arrConnection.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrConnection);
  });

    $("#energy_meter_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrEnergyMeter.push(teste[i]);
        arrEnergyMeterName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("edBoardOb2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrEnergyMeter);
    });

    $(".edBoardOb2").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrEnergyMeterName.splice(posicao, 1);
      arrEnergyMeter.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrEnergyMeter);
  });

    $("#switching_mec_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrSwitchingMec.push(teste[i]);
        arrSwitchingMecName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("edBoardOb3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrSwitchingMec);
    });

    $(".edBoardOb3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrSwitchingMecName.splice(posicao, 1);
      arrSwitchingMec.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrSwitchingMec);
  });

    $("#d_board_sleeves_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrDBoardSleeves.push(teste[i]);
        arrDBoardSleevesName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("edBoardOb4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrDBoardSleeves);
    });

    $(".edBoardOb4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrDBoardSleevesName.splice(posicao, 1);
      arrDBoardSleeves.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrDBoardSleeves);
  });


    $("#light_switch_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrLightSwitch.push(teste[i]);
        arrLightSwitchName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("edBoardOb5");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrLightSwitch);
    });

    $(".edBoardOb5").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrLightSwitchName.splice(posicao, 1);
      arrLightSwitch.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrLightSwitch);
  });

    $("#paintwork_sitelight_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrPaintworkSiteLight.push(teste[i]);
        arrPaintworkSiteLightName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("edBoardOb6");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrPaintworkSiteLight);
    });

    $(".edBoardOb6").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrPaintworkSiteLightName.splice(posicao, 1);
      arrPaintworkSiteLight.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrPaintworkSiteLight);
  });

    $("#ac_supplier_defects_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAcSupplierDefects.push(teste[i]);
        arrAcSupplierDefectsName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("edBoardOb7");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      console.log(arrAcSupplierDefects);
    });

    $(".edBoardOb7").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAcSupplierDefectsName.splice(posicao, 1);
      arrAcSupplierDefects.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      console.log(arrAcSupplierDefects);
  });

    //CONTAINER FORM

    $("#container_light_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrContainerLight.push(teste[i]);
        arrContainerLightName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("container1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrContainerLight);
    });

    $(".container1").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrContainerLightName.splice(posicao, 1);
      arrContainerLight.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrContainerLight);
  });

    $("#circuit_breaker_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrCircuitBreaker.push(teste[i]);
        arrCircuitBreakerName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("container2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrCircuitBreaker);
    });

    $(".container2").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrCircuitBreakerName.splice(posicao, 1);
      arrCircuitBreaker.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrCircuitBreaker);
  });

    $("#earth_connections_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrEarthConnections.push(teste[i]);
        arrEarthConnectionsName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("container3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrEarthConnections);
    });

    $(".container3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrEarthConnectionsName.splice(posicao, 1);
      arrEarthConnections.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrEarthConnections);
  });

    $("#conditions_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrConditions.push(teste[i]);
        arrConditionsName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("container4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrConditions);
    });

    $(".container4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrConditionsName.splice(posicao, 1);
      arrConditions.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrConditions);
  });

    $("#roof_water_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRoofWater.push(teste[i]);
        arrRoofWaterName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("container5");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRoofWater);
    });

    $(".container5").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRoofWaterName.splice(posicao, 1);
      arrRoofWater.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRoofWater);
  });

    $("#paintwork_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrPaintwork.push(teste[i]);
        arrPaintworkName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("container6");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrPaintwork);
    });

    $(".container6").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrPaintworkName.splice(posicao, 1);
      arrPaintwork.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrPaintwork);
  });

    $("#joints_cables_holes_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrJointsCablesHoles.push(teste[i]);
        arrJointsCablesHolesName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("container7");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrJointsCablesHoles);
    });

    $(".container7").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrJointsCablesHolesName.splice(posicao, 1);
      arrJointsCablesHoles.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrJointsCablesHoles);
  });

    $("#transmission_radio_imageCF").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrTransmissionRadioCF.push(teste[i]);
        arrTransmissionRadioCFName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("container8");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrTransmissionRadioCF);
    });

    $(".container8").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrTransmissionRadioCFName.splice(posicao, 1);
      arrTransmissionRadioCF.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrTransmissionRadioCF);
  });

    //ROOF TOP FORM
    $("#mounting_poles_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrMountingPoles.push(teste[i]);
        arrMountingPolesName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("roofTop1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrMountingPoles);
    });

    $(".roofTop1").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrMountingPolesName.splice(posicao, 1);
      arrMountingPoles.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrMountingPoles);
  });

    $("#poles_corrosions_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrPolesCorrosions.push(teste[i]);
        arrPolesCorrosionsName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("roofTop2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrPolesCorrosions);
    });

     $(".roofTop2").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrPolesCorrosionsName.splice(posicao, 1);
      arrPolesCorrosions.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrPolesCorrosions);
  });

    $("#poles_earthed_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrPolesEarthed.push(teste[i]);
        arrPolesEarthedName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("roofTop3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrPolesEarthed);
    });

    $(".roofTop3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrPolesEarthedName.splice(posicao, 1);
      arrPolesEarthed.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrPolesEarthed);
  });

    $("#cabinet_damage_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrCabinetDamage.push(teste[i]);
        arrCabinetDamageName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("roofTop4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrCabinetDamage);
    });

    $(".roofTop4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrCabinetDamageName.splice(posicao, 1);
      arrCabinetDamage.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrCabinetDamage);
  });

    $("#transmission_radio_imageRF").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrTransmissionRadioRF.push(teste[i]);
        arrTransmissionRadioRFName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("roofTop5");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrTransmissionRadioRF);
    });

    $(".roofTop5").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrTransmissionRadioRFName.splice(posicao, 1);
      arrTransmissionRadioRF.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrTransmissionRadioRF);
  });

    //MAST FORM
    $("#aw_light_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAwLight.push(teste[i]);
        arrAwLightName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
         var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("mast1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrAwLight);
    });

    $(".mast1").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAwLightName.splice(posicao, 1);
      arrAwLight.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrAwLight);
  });

    $("#aw_light_db_fitting_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAwLightDbFitting.push(teste[i]);
        arrAwLightDbFittingName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("mast2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrAwLightDbFitting);
    });

    $(".mast2").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAwLightDbFittingName.splice(posicao, 1);
      arrAwLightDbFitting.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrAwLightDbFitting);
  });

    $("#tower_inspection_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrTowerInspection.push(teste[i]);
        arrTowerInspectionName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("mast3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrTowerInspection);
    });

    $(".mast3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrTowerInspectionName.splice(posicao, 1);
      arrTowerInspection.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrTowerInspection);
  });


    $("#paint_tower_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrPaintTower.push(teste[i]);
        arrPaintTowerName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("mast4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrPaintTower);
    });

    $(".mast4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrPaintTowerName.splice(posicao, 1);
      arrPaintTower.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrPaintTower);
  });


    $("#visual_inpection_trans_radio_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrVisualInpectionTransRadio.push(teste[i]);
        arrVisualInpectionTransRadioName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("mast5");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrVisualInpectionTransRadio);
    });

    $(".mast5").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrVisualInpectionTransRadioName.splice(posicao, 1);
      arrVisualInpectionTransRadio.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrVisualInpectionTransRadio);
  });

    $("#tower_specification_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrTowerSpecification.push(teste[i]);
        arrTowerSpecificationName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("mast6");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrTowerSpecification);
    });

    $(".mast6").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrTowerSpecificationName.splice(posicao, 1);
      arrTowerSpecification.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrTowerSpecification);
  });


    //AIR CONDITIONERS FORM
    $("#fan_blade_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrFanBlade.push(teste[i]);
        arrFanBladeName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("airCond1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrFanBlade);
    });

    $(".airCond1").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrFanBladeName.splice(posicao, 1);
      arrFanBlade.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrFanBlade);
  });

    $("#noise_vibration_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrNoiseVibration.push(teste[i]);
        arrNoiseVibrationName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("airCond2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrNoiseVibration);
    });

    $(".airCond2").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrNoiseVibrationName.splice(posicao, 1);
      arrNoiseVibration.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrNoiseVibration);
  });

    $("#refrigerant_line_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRefrigerantLine.push(teste[i]);
        arrRefrigerantLineName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("airCond3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRefrigerantLine);
    });

    $(".airCond3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRefrigerantLineName.splice(posicao, 1);
      arrRefrigerantLine.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRefrigerantLine);
  });

    $("#casing_sealed_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrCasingSealed.push(teste[i]);
        arrCasingSealedName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("airCond4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrCasingSealed);
    });

    $(".airCond4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrCasingSealedName.splice(posicao, 1);
      arrCasingSealed.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrCasingSealed);
  });

    $("#rust_imageACF").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRustACF.push(teste[i]);
        arrRustACFName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("airCond5");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRustACF);
    });

    $(".airCond5").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRustACFName.splice(posicao, 1);
      arrRustACF.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRustACF);
  });

    //SITE GENERAL FORM

    $("#fence_gate_locks_hinges_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrFenceGateLocksHinges.push(teste[i]);
        arrFenceGateLocksHingesName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("site_general1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrFenceGateLocksHinges);
    });

    $(".site_general1").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrFenceGateLocksHingesName.splice(posicao, 1);
      arrFenceGateLocksHinges.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrFenceGateLocksHinges);
  });

    $("#signage_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrSignage.push(teste[i]);
        arrSignageName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("site_general2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrSignage);
    });

    $(".site_general2").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrSignageName.splice(posicao, 1);
      arrSignage.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrSignage);
  });

    $("#water_damage_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrWaterDamage.push(teste[i]);
        arrWaterDamageName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("site_general3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrWaterDamage);
    });

    $(".site_general3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrWaterDamageName.splice(posicao, 1);
      arrWaterDamage.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrWaterDamage);
  });

    $("#crushed_stone_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrCrushedStone.push(teste[i]);
        arrCrushedStoneName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("site_general4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrCrushedStone);
    });

    $(".site_general4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrCrushedStoneName.splice(posicao, 1);
      arrCrushedStone.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrCrushedStone);
  });

    $("#site_clean_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrSiteClean.push(teste[i]);
        arrSiteCleanName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("site_general5");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrSiteClean);
    });

    $(".site_general5").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrSiteCleanName.splice(posicao, 1);
      arrSiteClean.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrSiteClean);
  });

    $("#weeds_grass_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrWeedsGrass.push(teste[i]);
        arrWeedsGrassName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("site_general6");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrWeedsGrass);
    });

    $(".site_general6").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrWeedsGrassName.splice(posicao, 1);
      arrWeedsGrass.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrWeedsGrass);
  });

    $("#defect_access_road_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrDefectAccessRoad.push(teste[i]);
        arrDefectAccessRoadName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("site_general7");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrDefectAccessRoad);
    });

    $(".site_general7").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrDefectAccessRoadName.splice(posicao, 1);
      arrDefectAccessRoad.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrDefectAccessRoad);
  });

    $("#rubish_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRubish.push(teste[i]);
        arrRubishName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("site_general8");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRubish);
    });

    $(".site_general8").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRubishName.splice(posicao, 1);
      arrRubish.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRubish);
  });

    //ALARMS FORM
    $("#intruder_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrIntruder.push(teste[i]);
        arrIntruderName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrIntruder);
    });

    $(".alarm1").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrIntruderName.splice(posicao, 1);
      arrIntruder.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrIntruder);
  });

    $("#movement_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrMovement.push(teste[i]);
        arrMovementName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrMovement);
    });

    $(".alarm2").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrMovementName.splice(posicao, 1);
      arrMovement.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrMovement);
  });

    $("#high_temp_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrHighTemp.push(teste[i]);
        arrHighTempName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrHighTemp);
    });

    $(".alarm3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrHighTempName.splice(posicao, 1);
      arrHighTemp.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrHighTemp);
  });

    $("#rectifier_system_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRectifierSystem.push(teste[i]);
        arrRectifierSystemName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRectifierSystem);
    });

    $(".alarm4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRectifierSystemName.splice(posicao, 1);
      arrRectifierSystem.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRectifierSystem);
  });


    $("#rectifier_module_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRectifierModule.push(teste[i]);
        arrRectifierModuleName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm5");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRectifierModule);
    });

    $(".alarm5").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRectifierModuleName.splice(posicao, 1);
      arrRectifierModule.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRectifierModule);
  });

    $("#aircon1_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAircon1.push(teste[i]);
        arrAircon1Name.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm6");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrAircon1);
    });

    $(".alarm6").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAircon1Name.splice(posicao, 1);
      arrAircon1.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrAircon1);
  });

    $("#aircon2_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAircon2.push(teste[i]);
        arrAircon2Name.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm7");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrAircon2);
    });

    $(".alarm7").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAircon2Name.splice(posicao, 1);
      arrAircon2.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrAircon2);
    });

    $("#generator_fuel_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrGeneratorFuel.push(teste[i]);
        arrGeneratorFuelName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm8");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrGeneratorFuel);
    });

    $(".alarm8").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrGeneratorFuelName.splice(posicao, 1);
      arrGeneratorFuel.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrGeneratorFuel);
    });

    $("#generator_abnormal_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrGeneratorAbnormal.push(teste[i]);
        arrGeneratorAbnormalName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm9");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrGeneratorAbnormal);
    });

    $(".alarm9").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrGeneratorAbnormalName.splice(posicao, 1);
      arrGeneratorAbnormal.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrGeneratorAbnormal);
    });

    $("#aircraft_warning_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAircraftWarning.push(teste[i]);
        arrAircraftWarningName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm10");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrAircraftWarning);
    });

    $(".alarm10").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAircraftWarningName.splice(posicao, 1);
      arrAircraftWarning.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrAircraftWarning);
    });


    $("#smoke_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrSmoke.push(teste[i]);
        arrSmokeName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm11");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrSmoke);
    });

    $(".alarm11").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrSmokeName.splice(posicao, 1);
      arrSmoke.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrSmoke);
    });

    $("#ac_mains_failure_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAcMainsFailure.push(teste[i]);
        arrAcMainsFailureName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm12");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrAcMainsFailure);
    });

    $(".alarm12").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAcMainsFailureName.splice(posicao, 1);
      arrAcMainsFailure.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrAcMainsFailure);
    });

    $("#battery_low_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrBatteryLow.push(teste[i]);
        arrBatteryLowName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm13");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrBatteryLow);
    });

    $(".alarm13").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrBatteryLowName.splice(posicao, 1);
      arrBatteryLow.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrBatteryLow);
    });

    $("#generator_running_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrGeneratorRunning.push(teste[i]);
        arrGeneratorRunningName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("alarm14");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrGeneratorRunning);
    });

    $(".alarm14").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrGeneratorRunningName.splice(posicao, 1);
      arrGeneratorRunning.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrGeneratorRunning);
    });

    //GENERATOR FORM
    $("#engine_oil_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrEngineOil.push(teste[i]);
        arrEngineOilName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator1");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrEngineOil);
    });

    $(".generator1").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrEngineOilName.splice(posicao, 1);
      arrEngineOil.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrEngineOil);
    });

    $("#oil_leak_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrOilLeak.push(teste[i]);
        arrOilLeakName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator2");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrOilLeak);
    });

    $(".generator2").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrOilLeakName.splice(posicao, 1);
      arrOilLeak.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrOilLeak);
    });

    $("#radiator_hoses_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRadiatorHoses.push(teste[i]);
        arrRadiatorHosesName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator3");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRadiatorHoses);
    });

    $(".generator3").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRadiatorHosesName.splice(posicao, 1);
      arrRadiatorHoses.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRadiatorHoses);
    });

    $("#air_filter_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAirFilter.push(teste[i]);
        arrAirFilterName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator4");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrAirFilter);
    });

    $(".generator4").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAirFilterName.splice(posicao, 1);
      arrAirFilter.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrAirFilter);
    });

    $("#coolant_leaks_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrCoolantLeaks.push(teste[i]);
        arrCoolantLeaksName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator5");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrCoolantLeaks);
    });

    $(".generator5").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrCoolantLeaksName.splice(posicao, 1);
      arrCoolantLeaks.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrCoolantLeaks);
    });

    $("#v_belt_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrVBelt.push(teste[i]);
        arrVBeltName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator6");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrVBelt);
    });

    $(".generator6").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrVBeltName.splice(posicao, 1);
      arrVBelt.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrVBelt);
    });

    $("#fuel_leaks_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrFuelLeaks.push(teste[i]);
        arrFuelLeaksName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator7");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrFuelLeaks);
    });

    $(".generator7").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrFuelLeaksName.splice(posicao, 1);
      arrFuelLeaks.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrFuelLeaks);
    });

    $("#electrolyte_connection_cond_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrElectrolyteConnectionCond.push(teste[i]);
        arrElectrolyteConnectionCondName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator8");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrElectrolyteConnectionCond);
    });

    $(".generator8").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrElectrolyteConnectionCondName.splice(posicao, 1);
      arrElectrolyteConnectionCond.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrElectrolyteConnectionCond);
    });

    $("#switcher_breaker_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrSwitcherBreaker.push(teste[i]);
        arrSwitcherBreakerName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator9");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrSwitcherBreaker);
    });

    $(".generator9").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrSwitcherBreakerName.splice(posicao, 1);
      arrSwitcherBreaker.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrSwitcherBreaker);
    });

    $("#control_panel_record_level_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrControlPanelRecordLevel.push(teste[i]);
        arrControlPanelRecordLevelName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator10");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrControlPanelRecordLevel);
    });

    $(".generator10").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrControlPanelRecordLevelName.splice(posicao, 1);
      arrControlPanelRecordLevel.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrControlPanelRecordLevel);
    });

    $("#abnormal_vibrations_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrAbnormalVibrations.push(teste[i]);
        arrAbnormalVibrationsName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator11");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrAbnormalVibrations);
    });

    

    $(".generator11").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrAbnormalVibrationsName.splice(posicao, 1);
      arrAbnormalVibrations.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrAbnormalVibrations);
    });

    $("#rust_imageGF").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrRustGF.push(teste[i]);
        arrRustGFName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator12");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrRustGF);
    });

    $(".generator12").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrRustGFName.splice(posicao, 1);
      arrRustGF.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrRustGF);
    });

    $("#moutings_brackets_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrMoutingsBrackets.push(teste[i]);
        arrMoutingsBracketsName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator13");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      // console.log(arrMoutingsBrackets);
    });

    $(".generator13").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrMoutingsBracketsName.splice(posicao, 1);
      arrMoutingsBrackets.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      // console.log(arrMoutingsBrackets);
    });

    $("#overal_cond_image").on("change",function(e) {
      //pega os ficheiros
      var files = e.target.files,
      filesLength = files.length;
      
      //percorre o numero de ficheiros carregados
      for (var i = 0; i < filesLength; i++) {

        var f = files[i]
        var fileReader = new FileReader();
        var teste=$(this).get(0).files;

        //adiconar os ficheiros carregados no array
        arrOveralCond.push(teste[i]);
        arrOveralCondName.push(teste[i].name.split(".")[0]);

        //mostrar os ficheiros na tela
        var fileName = teste[i].name.split(".")[0];
        var tt = document.getElementById("generator14");
        tt.innerHTML += '<tr><td>' + fileName + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">clear</i></a></td></tr>';
        fileReader.readAsText(f);
      }
      console.log(arrOveralCond);
    });

    $(".generator14").on("click",".eliminar", function(e){ //user click on remove text
      
      var posicao = $(this).parent('td').parent('tr')[0].rowIndex;
      arrOveralCondName.splice(posicao, 1);
      arrOveralCond.splice(posicao,1);
      $(this).parent('td').parent('tr').remove();
      console.log(arrOveralCond);
    });

  } else {
    alert("Your browser doesn't support to File API")
  }


  var contactosArray = [];
  var editarContactosArray = [];

  var travelinfoArray = [];
  var travelsiteinfoArray = [];
  var generatorJobcardArray = [];
  var equipamentoArray = [];
  var sparesArray = [];

  //Arrays de Site info
  var generatorArray = [];
  var gsmcabArray = [];
  var internaldbArray = [];
  var additionaltransformersArray = [];
  var externaldbArray = [];
  var distributionrackArray = [];
  var transmissioncabArray = [];
  var acArray = [];
  var rectcabArray = [];
  var securityArray = [];

  //shake button
  const controle_modalclientesupp = document.querySelector("button#clientesuppopt_yes_btn_modal");
  const controle_modalpettycashreport = document.querySelector("button#pettycashreport_yes_btn_modal");
  const controle_modalcreatettnumber = document.querySelector("button#createttnumber_yes_btn_modal");


( function(){
  $('.portug').removeClass('hide');
})()

$('#english').click(function(){
  $('.portug').addClass('hide');
  $('.ingls').removeClass('hide');
});

$('#portuguese').click(function(){
  $('.portug').removeClass('hide');
  $('.ingls').addClass('hide');
});


$('.tabs').tabs();

//  $('#tipo_cliente').click(function(){
//    $('.codcliente').removeClass('hide');
//    $('.codfornecedor').addClass('hide');
//    $('#cliente_cod').addClass('preencher');
//    $('#fornecedor_cod').removeClass('preencher');
//  });

// $('#tipo_fornecedor').click(function(){
//    $('.codcliente').addClass('hide');
//    $('.codfornecedor').removeClass('hide');
//    $('#cliente_cod').removeClass('preencher');
//    $('#fornecedor_cod').addClass('preencher');
//  });

$('#verTabelaClientes').click(function(){
   window.location.href="/cliente/clientesupplier/client_home";
});

$('#verTabelaClienteshvac').click(function(){
    console.log("aaaaasasdasasdasds");
    window.location.href="/cliente/clienteshvac";
});

$('#verTabelaFornecedores').click(function(){
  window.location.href="/cliente/clientesupplier/supplier_home";
});

$('#verBalance').click(function(){
   window.location.href="/pettycash/accountbalance_home";
});


$('#verControl').click(function(){
  window.location.href="/pettycash/accountcontrol_home";
});




$('#travelinfo_viagem').click(function(){
  $('.mostrarPartida').removeClass('hide');
  $('.mostrarChegadaSite').addClass('hide');
  $('.mostrarTrabalhoFeito').addClass('hide');
  $('.mostrarPartidaSite').addClass('hide');
  $('.mostrarProximoDestino').removeClass('hide');
  // $('.mostrartabela1').removeClass('hide');
});

$('#travelinfo_visitsite').click(function(){
  $('.mostrarPartida').removeClass('hide');
  $('.mostrarChegadaSite').removeClass('hide');
  $('.mostrarTrabalhoFeito').removeClass('hide');
  $('.mostrarPartidaSite').removeClass('hide');
  $('.mostrarProximoDestino').removeClass('hide');
  // $('.mostrartabela1').removeClass('hide');
});

$('#siteinfo_generatoryes').click(function(){

    $('.mostrarSiteInfoGeneratorInfo').removeClass('hide');
    if(generatorArray.length != 0){
      $('.mostrartabelaGeradores').removeClass('hide');
    }
  
});

$('#siteinfo_generatorno').click(function(){
  
  $('.mostrarSiteInfoGeneratorInfo').addClass('hide');
  $('.mostrartabelaGeradores').addClass('hide');

});


// GSM CABINET
  $("#siteinfo_gsmCabinetInstalledyes").click(function(){
    $(".mostrarSiteInfoGsmCabInfo").removeClass("hide");
  });

  $("#siteinfo_gsmCabinetInstalledno").click(function(){
    $(".mostrarSiteInfoGsmCabInfo").addClass("hide");
  });


  // INTERNAL DB
  $("#siteinfo_internaldbyes").click(function(){
    $(".mostrarSiteInfoInternaldbInfo").removeClass("hide");
  });

  $("#siteinfo_internaldbno").click(function(){
    $(".mostrarSiteInfoInternaldbInfo").addClass("hide");
  });

  // EXTERNAL DB
  $("#siteinfo_externaldbyes").click(function(){
    $(".mostrarSiteInfoExternaldbInfo").removeClass("hide");
  });

  $("#siteinfo_externaldbno").click(function(){
    $(".mostrarSiteInfoExternaldbInfo").addClass("hide");
  });

  // ADDITIONAL TRANSFORMERS
  $("#siteinfo_additionaltransformersyes").click(function(){
    $(".mostrarSiteInfoAdditionalTransformersInfo").removeClass("hide");
  });

  $("#siteinfo_additionaltransformersno").click(function(){
    $(".mostrarSiteInfoAdditionalTransformersInfo").addClass("hide");
  });

  // DISTRIBUTION RACK
  $("#siteinfo_distributionRackInstalledyes").click(function(){
    $(".mostrarSiteInfoDistributionRackInfo").removeClass("hide");
  });

  $("#siteinfo_distributionRackInstalledno").click(function(){
    $(".mostrarSiteInfoDistributionRackInfo").addClass("hide");
  });

   // TRANSMISSION CABINET
   $("#siteinfo_transmissioncabyes").click(function(){
    $(".mostrarSiteInfoTransmissionCabInfo").removeClass("hide");
  });

  $("#siteinfo_transmissioncabno").click(function(){
    $(".mostrarSiteInfoTransmissionCabInfo").addClass("hide");
  });





$('.mostrarSiteInfoGeneratorInfo').click(function(){

    $("#siteinfo_generatortype").val("");

    $("#siteinfo_generatoroutputkw").val("");
    $("#siteinfo_generatoroutputkw").siblings('label').removeClass('active');

    $("#siteinfo_generatormodelno").val("");
    $("#siteinfo_generatormodelno").siblings('label').removeClass('active');

    $("#siteinfo_generatorengineserialnumber").val("");
    $("#siteinfo_generatorengineserialnumber").siblings('label').removeClass('active');

    $("#siteinfo_generatorenginecapacity").val("");
    $("#siteinfo_generatorstartertype").val("");

    $("#siteinfo_generatorfuelconsumption").val("");
    $("#siteinfo_generatorfuelconsumption").siblings('label').removeClass('active');

    $('#siteinfogeneratorinfo_yes_btn_modal').removeClass('hide');
    $('#siteinfogeneratorinfo_update_btn_modal').addClass('hide');
    $('#siteinfogeneratorinfo_modal').openModal({dismissible:false});

});

//GSM 2
  $(".mostrarSiteInfoGsmCabInfo").click(function() {
    $("#siteinfogsmcabinfo_modal").openModal({dismissible:false});
  });

  //INTERNALDB
  $(".mostrarSiteInfoInternaldbInfo").click(function() {
    $("#siteinfointernaldbinfo_modal").openModal({dismissible:false});
  });

   //EXTERNALDB
   $(".mostrarSiteInfoExternaldbInfo").click(function() {
    $("#siteinfoexternaldbinfo_modal").openModal({dismissible:false});
  });

  //ADDITIONAL TRANSFORMERS
  $(".mostrarSiteInfoAdditionalTransformersInfo").click(function() {
    $("#siteinfoadditionaltransformersinfo_modal").openModal({dismissible:false});
  });

  //DISTRIBUTION RACK
  $(".mostrarSiteInfoDistributionRackInfo").click(function() {
    $("#siteinfodistributionrackinfo_modal").openModal({dismissible:false});
  });

  //TRANSMISSION CABINET
  $(".mostrarSiteInfoTransmissionCabInfo").click(function() {
    $("#siteinfotransmissioncabinfo_modal").openModal({dismissible:false});
  });

$('#siteinfo_acyes').click(function(){

  $('.mostrarSiteInfoACInfo').removeClass('hide');
    if(acArray.length != 0){
      $('.mostrartabelaAC').removeClass('hide');
    }

});

$('#siteinfo_acno').click(function(){

  $('.mostrarSiteInfoACInfo').addClass('hide');
  $('.mostrartabelaAC').addClass('hide');
  
});

$('.mostrarSiteInfoACInfo').click(function(){

    $("#siteinfo_acmanufacturer").val("");
    $("#siteinfo_actype").val("");

    $("#siteinfo_acmodel").val("");
    $("#siteinfo_acmodel").siblings('label').removeClass('active');

    $("#siteinfo_acnumber").val("");
    $("#siteinfo_acnumber").siblings('label').removeClass('active');

    $("#siteinfo_acserialnumber").val("");
    $("#siteinfo_acserialnumber").siblings('label').removeClass('active');

    $("#siteinfo_acbtu").val("");
    $("#siteinfo_acbtu").siblings('label').removeClass('active');

    $("#siteinfo_accageinstalled").val("");
    $("#siteinfo_acsleeveinstalled").val("");
    $("#siteinfo_acunitcontrolltype").val("");

    $("#siteinfo_accontrollermodel").val("");
    $("#siteinfo_accontrollermodel").siblings('label').removeClass('active');

    

    $('#siteinfoacinfo_yes_btn_modal').removeClass('hide');
    $('#siteinfoacinfo_update_btn_modal').addClass('hide');
    $('#siteinfoacinfo_modal').openModal({dismissible:false});

});

$('#siteinfo_guardsiteyes').click(function(){
  $('#mostrarDetalhesSecurity').removeClass('hide');
  $('#addsecurity').removeClass('hide');
  
});

$('#siteinfo_guardsiteno').click(function(){
  $('#mostrarDetalhesSecurity').addClass('hide');
  $('#addsecurity').addClass('hide');
  
});

  $('#siteinfo_elecpayment').change(function(){
  var pagamento = $("#siteinfo_elecpayment").val();

  if(pagamento == "EDM Prepaid/Credelec"){
    $('#inputcredelec').removeClass('hide');
  }else{
    $('#inputcredelec').addClass('hide');
  }

});


$('#siteinfo_rectifiercabinnetyes').click(function(){

  $('.mostrarSiteInfoRectifierInfo').removeClass('hide');
  if(rectcabArray.length != 0){
    $('.mostrartabelaRectCab').removeClass('hide');
  }
  
});

$('#siteinfo_rectifiercabinnetno').click(function(){
  $('.mostrarSiteInfoRectifierInfo').addClass('hide');
  $('.mostrartabelaRectCab').addClass('hide');
});

$('.mostrarSiteInfoRectifierInfo').click(function(){

    $("#siteinfo_rectcabcabinetmodelno").val("");
    $("#siteinfo_rectcabcabinetmodelno").siblings('label').removeClass('active');

    $("#siteinfo_rectcabcabinetnumber").val("");
    $("#siteinfo_rectcabtype").val("");
    $("#siteinfo_rectcabinputtype").val("");

    $("#siteinfo_rectcabnobatteries").val("");
    $("#siteinfo_rectcabnobatteries").siblings('label').removeClass('active');

    $("#siteinfo_rectcabbatterycapac").val("");
    $("#siteinfo_rectcabbatterycapac").siblings('label').removeClass('active');


    $('#siteinforectifierinfo_yes_btn_modal').removeClass('hide');
    $('#siteinforectifierinfo_update_btn_modal').addClass('hide');
    $('#siteinforectifierinfo_modal').openModal({dismissible:false});

});

$('#siteinfo_guardsiteyes').click(function(){
  $('.mostrarSiteInfoGuardaInfo').removeClass('hide');
  if(securityArray.length != 0){
    $('.mostrartabelaSeguranca').removeClass('hide');
  }
  
});

$('#siteinfo_guardsiteno').click(function(){
  $('.mostrarSiteInfoGuardaInfo').addClass('hide');
  $('.mostrartabelaSeguranca').addClass('hide');
  
});


$('.mostrarSiteInfoGuardaInfo').click(function(){

    $("#siteinfo_secguardname").val("");
    $("#siteinfo_secguardname").siblings('label').removeClass('active');

    $("#siteinfo_secbinumber").val("");
    $("#siteinfo_secbinumber").siblings('label').removeClass('active');

    $("#siteinfo_secnib").val("");
    $("#siteinfo_secnib").siblings('label').removeClass('active');

    $("#siteinfo_secvalue").val("");
    $("#siteinfo_secvalue").siblings('label').removeClass('active');


    $('#siteinfoguardainfo_yes_btn_modal').removeClass('hide');
    $('#siteinfoguardainfo_update_btn_modal').addClass('hide');
    $('#siteinfoguardainfo_modal').openModal({dismissible:false});

});



$('#siteinfo_elecpayment').change(function(){
  var pagamento = $("#siteinfo_elecpayment").val();

  if(pagamento == "EDM Prepaid/Credelec"){
    $('#inputcredelec').removeClass('hide');
  }else{
    $('#inputcredelec').addClass('hide');
  }

});

// $('#optanual').click(function(){
//     $('#mostrarAno').removeClass('hide');
//     $('#mostrarMes').addClass('hide');
//     $('#mostrarColaborador').removeClass('hide');
// });

// $('#optmensal').click(function(){
//     $('#mostrarAno').removeClass('hide');
//     $('#mostrarMes').removeClass('hide');
//     $('#mostrarColaborador').removeClass('hide');
// });

$('#carregarContacto').click(function(){

  $("#tabelaContactoCliente tr").each(function(){
    var currentRow=$(this);

    var col1_value=currentRow.find("td:eq(0)").text();
    var col2_value=currentRow.find("td:eq(1)").text();
        var col3_value=currentRow.find("td:eq(2)").text();
        var col4_value=currentRow.find("td:eq(3)").text();

        var editarContactosObject = {};

        editarContactosObject.contacto_nome=col1_value;
        editarContactosObject.contacto_cargo=col2_value;
        editarContactosObject.contacto_email=col3_value;
        editarContactosObject.contacto_telefone=col4_value;

        editarContactosArray.push(editarContactosObject);
        
  });
  console.log(editarContactosArray);
});


$('#adicionarmaiscontacto1').click(function(){
  var contactosObject = {};

    var cn = $("#contacto_nome").val();
    contactosObject.contacto_nome = cn;

    var cc = $("#contacto_cargo").val();
    contactosObject.contacto_cargo = cc;

    var ce = $("#contacto_email").val();
    contactosObject.contacto_email = ce;

    var ct = $("#contacto_telefone").val();
    contactosObject.contacto_telefone = ct;

    var mt = document.getElementById("tabelaContactoCliente");

    // document.getElementById("mostrar").innerHTML = " Nome:" + n;
     // $("<a href=\"#\">"+ n +"</a>").insertAfter("#mostrar");
     mt.innerHTML += '<tr><td>'+ cn +'</td><td>'+ cc +'</td><td>'+ce+'</td><td>'+ct+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr>';
     editarContactosArray.push(contactosObject);
     console.log(editarContactosArray);

     //limpar os campos
     $("#contacto_nome").val("");
     $("#contacto_nome").siblings('label').removeClass('active');
     $("#contacto_cargo").val("");
     $("#contacto_cargo").siblings('label').removeClass('active');
     $("#contacto_email").val("");
     $("#contacto_email").siblings('label').removeClass('active');
     $("#contacto_telefone").val("");
     $("#contacto_telefone").siblings('label').removeClass('active');


});

$(".mostrarTabela1").on("click",".eliminar", function(e){ //user click on remove text
        // console.log($(this).parent('td'));
        //console.log($(this).parent('td').parent('tr')[0].firstChild.innerText)
        $(this).parent('td').parent('tr').remove();

        for(var i = 0; i < editarContactosArray.length; i++){
          if(editarContactosArray[i].contacto_nome == $(this).parent('td').parent('tr')[0].firstChild.innerText){
            // var testenome = editarContactosArray[i].contacto_nome;
            //   var posicaocontacto = editarContactosArray.findIndex(x => x.contacto_nome === testenome);
              editarContactosArray.splice(i, 1)
              console.log(editarContactosArray);
          }
        }
    });

$(".mostrarTabela1").on("click",".editar", function(e){ //user click on remove text
      //console.log($(this).parent('td').parent('tr'));
      var contactosfilhos = $(this).parent('td').parent('tr')[0].childNodes;
    $("#contacto_nome").val(contactosfilhos[0].innerText);
    $("#contacto_nome").siblings('label').addClass('active');
     $("#contacto_cargo").val(contactosfilhos[1].innerText);
     $("#contacto_cargo").siblings('label').addClass('active');
     $("#contacto_email").val(contactosfilhos[2].innerText);
     $("#contacto_email").siblings('label').addClass('active');
     $("#contacto_telefone").val(contactosfilhos[3].innerText);
     $("#contacto_telefone").siblings('label').addClass('active');

     $(this).parent('td').parent('tr').remove();

     for(var i = 0; i < editarContactosArray.length; i++){
        if(editarContactosArray[i].contacto_nome == $(this).parent('td').parent('tr')[0].firstChild.innerText){
          var testenome = editarContactosArray[i].contacto_nome;
            var posicaocontacto = editarContactosArray.findIndex(x => x.contacto_nome === testenome);
            editarContactosArray.splice(posicaocontacto, 1);
            console.log(editarContactosArray);
        }
      }


  });


  $('.adicionarmaiscontacto').click(function(){
  var contactosObject = {};

    var cn = $("#contacto_nome").val();
    contactosObject.contacto_nome = cn;

    var cc = $("#contacto_cargo").val();
    contactosObject.contacto_cargo = cc;

    var ce = $("#contacto_email").val();
    contactosObject.contacto_email = ce;

    var ct = $("#contacto_telefone").val();
    contactosObject.contacto_telefone = ct;

    $('#tabelaAddContact').removeClass('hide');
    var mt = document.getElementById("mostrarTabela");

    // document.getElementById("mostrar").innerHTML = " Nome:" + n;
     // $("<a href=\"#\">"+ n +"</a>").insertAfter("#mostrar");
     mt.innerHTML += '<tr><td>'+ cn +'</td><td>'+ cc +'</td><td>'+ce+'</td><td>'+ct+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr>';
     contactosArray.push(contactosObject);
     console.log(contactosArray);

     //limpar os campos
     $("#contacto_nome").val("");
     $("#contacto_nome").siblings('label').removeClass('active');
     $("#contacto_cargo").val("");
     $("#contacto_cargo").siblings('label').removeClass('active');
     $("#contacto_email").val("");
     $("#contacto_email").siblings('label').removeClass('active');
     $("#contacto_telefone").val("");
     $("#contacto_telefone").siblings('label').removeClass('active');


});


  $(".mostrarTabela").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      //console.log($(this).parent('td').parent('tr')[0].firstChild.innerText)
      $(this).parent('td').parent('tr').remove();

      for(var i = 0; i < contactosArray.length; i++){
        if(contactosArray[i].contacto_nome == $(this).parent('td').parent('tr')[0].firstChild.innerText){
          var testenome = contactosArray[i].contacto_nome;
            var posicaocontacto = contactosArray.findIndex(x => x.contacto_nome === testenome);
            contactosArray.splice(posicaocontacto, 1)
            console.log(contactosArray);
        }
      }

      if(contactosArray.length == 0){
        $('#tabelaAddContact').addClass('hide');

      }
  });


  $(".mostrarTabela").on("click",".editar", function(e){ //user click on remove text
      //console.log($(this).parent('td').parent('tr'));
      var contactosfilhos = $(this).parent('td').parent('tr')[0].childNodes;
    $("#contacto_nome").siblings('label').addClass('active');
    $("#contacto_nome").val(contactosfilhos[0].innerText);
    $("#contacto_cargo").siblings('label').addClass('active');
    $("#contacto_cargo").val(contactosfilhos[1].innerText);
    $("#contacto_email").siblings('label').addClass('active');
    $("#contacto_email").val(contactosfilhos[2].innerText);
    $("#contacto_telefone").siblings('label').addClass('active');
    $("#contacto_telefone").val(contactosfilhos[3].innerText);

     $(this).parent('td').parent('tr').remove();

     for(var i = 0; i < contactosArray.length; i++){
        if(contactosArray[i].contacto_nome == $(this).parent('td').parent('tr')[0].firstChild.innerText){
          var testenome = contactosArray[i].contacto_nome;
            var posicaocontacto = contactosArray.findIndex(x => x.contacto_nome === testenome);
            contactosArray.splice(posicaocontacto, 1);
            //console.log(b);
        }
      }


  });


  $('.adicionarTravel').click(function(){
    $('.mostrartabela1').removeClass('hide');
  var travelinfoObject = {};

var controle = $("input[name='travelinfo_proposito']:checked").val();

  var site = $("#jobcard_site").val();
  // travelinfoObject.jobcard_site = $("#jobcard_site").val();
  //travelinfoObject.travelinfo_proposito=$("input[name='travelinfo_proposito']:checked").val();
  var from = $("#jobcard_departureplace").val();
    travelinfoObject.jobcard_departureplace = $("#jobcard_departureplace").val();
    travelinfoObject.jobcard_kmreading = $("#jobcard_kmreading").val();
    travelinfoObject.jobcard_departuredate = $("#jobcard_departuredate").val();
    travelinfoObject.jobcard_departuretime = $("#jobcard_departuretime").val();
    travelinfoObject.jobcard_sitearrivaldate = $("#jobcard_sitearrivaldate").val();
    travelinfoObject.jobcard_sitearrivaltime = $("#jobcard_sitearrivaltime").val();
    var accaocorrretiva = $("#jobcard_remedialaction").val();
    travelinfoObject.jobcard_remedialaction = $("#jobcard_remedialaction").val();
    travelinfoObject.jobcard_healthsafety = $("#jobcard_healthsafety").val();
    travelinfoObject.jobcard_sitedeparturedate = $("#jobcard_sitedeparturedate").val();
    travelinfoObject.jobcard_sitedeparturetime = $("#jobcard_sitedeparturetime").val();
    travelinfoObject.jobcard_kmsite = $("#jobcard_kmsite").val();
    travelinfoObject.jobcard_destinationdate = $("#jobcard_destinationdate").val();
    travelinfoObject.jobcard_destinationtime = $("#jobcard_destinationtime").val();
    var to = $("#jobcard_destinationplace").val();
    travelinfoObject.jobcard_destinationplace = $("#jobcard_destinationplace").val();
    travelinfoObject.jobcard_kmdestination = $("#jobcard_kmdestination").val();

    var dataIda;
    var dataVolta;
    var horaIda = $("#jobcard_departuretime").val() + ' - ' + $("#jobcard_destinationtime").val();
    var horaIda1 = $("#jobcard_departuretime").val() + ' - ' + $("#jobcard_sitearrivaltime").val();
    var horaVolta = $("#jobcard_sitedeparturetime").val() + ' - ' + $("#jobcard_destinationtime").val();

    

    var mtt = document.getElementById("mostrarTabelaTravel");

    // document.getElementById("mostrar").innerHTML = " Nome:" + n;
     // $("<a href=\"#\">"+ n +"</a>").insertAfter("#mostrar");
     //mtt.innerHTML += '<tr><td>'+ $("#jobcard_departuredate").val() +'</td><td>'+ +'</td><td>'+ $("#jobcard_remedialaction").val() +'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr>';
     travelinfoArray.push(travelinfoObject);
     console.log(travelinfoObject);

     if(controle == "viagem"){
    if(($("#jobcard_departuredate").val()) == ($("#jobcard_destinationdate").val())){

      dataIda = $("#jobcard_departuredate").val();

    }else{

      dataIda = $("#jobcard_departuredate").val() + ' - ' + $("#jobcard_destinationdate").val();
    }

        mtt.innerHTML += '<tr><td>' + from + '<i class="material-icons prefix center" style="display: inline-flex; vertical-align: top;">trending_flat</i>' + to + '</td><td>' + dataIda +  '</td><td>' + horaIda + '</td><td>' + ' - ' + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr>' ;
     }else{
        if(($("#jobcard_departuredate").val()) == ($("#jobcard_sitearrivaldate").val())){

          dataIda = $("#jobcard_departuredate").val();

        } else{

          dataIda = $("#jobcard_departuredate").val() + ' - ' + $("#jobcard_sitearrivaldate").val();

        }

        if(($("#jobcard_sitedeparturedate").val()) == ($("#jobcard_destinationdate").val())){

          dataVolta = $("#jobcard_sitedeparturedate").val();

        } else{

          dataVolta = $("#jobcard_sitedeparturedate").val() + ' - ' + $("#jobcard_destinationdate").val();

        }

        mtt.innerHTML += '<tr><td>' + from + '<i class="material-icons prefix center" style="display: inline-flex; vertical-align: top;">trending_flat</i>' + site + '</td><td>' + dataIda +  '</td><td>' + horaIda1 + '</td><td>' + accaocorrretiva + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr><tr><td>' + site + '<i class="material-icons prefix center" style="display: inline-flex; vertical-align: top;">trending_flat</i>' + to + '</td><td>' + dataVolta + '</td><td>' + horaVolta + '</td><td>' + accaocorrretiva + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr>' ;
     }


     //limpar os campos
    $("#jobcard_departureplace").val("");
    $("#jobcard_kmreading").val("");
    $("#jobcard_departuredate").val("");
    $("#jobcard_departuretime").val("");
    $("#jobcard_sitearrivaldate").val("");
    $("#jobcard_sitearrivaltime").val("");
    $("#jobcard_remedialaction").val("");
    $("#jobcard_healthsafety").val("");
    $("#jobcard_sitedeparturedate").val("");
    $("#jobcard_sitedeparturetime").val("");
    // $("#jobcard_sleeping").val("");
    // $("#jobcard_totalsleep").val("");
    $("#jobcard_kmsite").val("");
    $("#jobcard_destinationdate").val("");
    $("#jobcard_destinationtime").val("");
    $("#jobcard_destinationplace").val("");
    $("#jobcard_kmdestination").val("");


    $('#addtravel').addClass('hide');

});

  
  $(".mostrarTabelaTravel").on("click",".eliminar", function(e){ //user click on remove text
  $(this).parent('td').parent('tr').parent('tbody').empty();

  //limpar o array
  travelinfoArray = [];
  //$('#adicionarTravel').removeClass('hide');
    $('#updatetravel').removeClass('hide');
  });



  $(".mostrarTabelaTravel").on("click",".editar", function(e){ //user click on edit text
      console.log($(this).parent('td').parent('tr').parent('tbody')[0].rows.length);

      if(($(this).parent('td').parent('tr').parent('tbody')[0].rows.length) == 1 ){
        $("#jobcard_departureplace").val(travelinfoArray[0].jobcard_departureplace);
        $("#jobcard_kmreading").val(travelinfoArray[0].jobcard_kmreading);
        $("#jobcard_departuredate").val(travelinfoArray[0].jobcard_departuredate);
        $("#jobcard_departuretime").val(travelinfoArray[0].jobcard_departuretime);
        $("#jobcard_destinationdate").val(travelinfoArray[0].jobcard_destinationdate);
        $("#jobcard_destinationtime").val(travelinfoArray[0].jobcard_destinationtime);
        $("#jobcard_destinationplace").val(travelinfoArray[0].jobcard_destinationplace);
        $("#jobcard_kmdestination").val(travelinfoArray[0].jobcard_kmdestination);
      }else{
          $("#jobcard_departureplace").val(travelinfoArray[0].jobcard_departureplace);
        $("#jobcard_kmreading").val(travelinfoArray[0].jobcard_kmreading);
        $("#jobcard_departuredate").val(travelinfoArray[0].jobcard_departuredate);
        $("#jobcard_departuretime").val(travelinfoArray[0].jobcard_departuretime);
        $("#jobcard_sitearrivaldate").val(travelinfoArray[0].jobcard_sitearrivaldate);
        $("#jobcard_sitearrivaltime").val(travelinfoArray[0].jobcard_sitearrivaltime);
        $("#jobcard_remedialaction").val(travelinfoArray[0].jobcard_remedialaction);
        $("#jobcard_healthsafety").val(travelinfoArray[0].jobcard_healthsafety);
        $("#jobcard_sitedeparturedate").val(travelinfoArray[0].jobcard_sitedeparturedate);
        $("#jobcard_sitedeparturetime").val(travelinfoArray[0].jobcard_sitedeparturetime);
        // $("#jobcard_sleeping").val("");
        // $("#jobcard_totalsleep").val("");
        $("#jobcard_kmsite").val(travelinfoArray[0].jobcard_kmsite);
        $("#jobcard_destinationdate").val(travelinfoArray[0].jobcard_destinationdate);
        $("#jobcard_destinationtime").val(travelinfoArray[0].jobcard_destinationtime);
        $("#jobcard_destinationplace").val(travelinfoArray[0].jobcard_destinationplace);
        $("#jobcard_kmdestination").val(travelinfoArray[0].jobcard_kmdestination);
      }

      $(this).parent('td').parent('tr').parent('tbody').empty();
      travelinfoArray = [];
      //$('#adicionarTravel').removeClass('hide');
      $('#updatetravel').removeClass('hide');
  });


  $('#adicionarEquipamento').click(function(){
  var equipamentoObject = {};
  $('.mostrartabela2').removeClass('hide');

    var equip = $("#jobcard_equiptype").val();
    equipamentoObject.jobcard_equiptype = $("#jobcard_equiptype").val();
    var manuftr = $("#jobcard_manufacturer").val();
    equipamentoObject.jobcard_manufacturer = $("#jobcard_manufacturer").val();
    var mdl = $("#jobcard_model").val();
    equipamentoObject.jobcard_model = $("#jobcard_model").val();
    var srlnum = $("#jobcard_serialnumber").val();
    equipamentoObject.jobcard_serialnumber = $("#jobcard_serialnumber").val();
    equipamentoObject.jobcard_capcity = $("#jobcard_capcity").val();
    equipamentoObject.jobcard_type = $("#jobcard_type").val();

    

    var mt = document.getElementById("mostrarTabelaEquipamento");

    // document.getElementById("mostrar").innerHTML = " Nome:" + n;
     // $("<a href=\"#\">"+ n +"</a>").insertAfter("#mostrar");
     mt.innerHTML += '<tr><td>' + equip + '</td><td>' + manuftr + '</td><td>' + mdl + '</td><td>' + srlnum + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr>';
     equipamentoArray.push(equipamentoObject);
     console.log(equipamentoArray);

     //limpar os campos
     $("#jobcard_equiptype").val("");
    $("#jobcard_manufacturer").val("");
     $("#jobcard_model").val("");
     $("#jobcard_serialnumber").val("");
     $("#jobcard_capcity").val("");
     $("#jobcard_type").val("");


});

  $(".mostrarTabelaEquipamento").on("click",".eliminar", function(e){ //user click on remove text
  //console.log($(this).parent('td').parent('tr'));
      
  $(this).parent('td').parent('tr').remove();

      for(var i = 0; i < equipamentoArray.length; i++){
        if(equipamentoArray[i].jobcard_serialnumber == $(this).parent('td').parent('tr')[0].childNodes[3].innerText){
          var testenome = equipamentoArray[i].jobcard_serialnumber;
            var posicaocontacto = equipamentoArray.findIndex(x => x.jobcard_serialnumber === testenome);
            equipamentoArray.splice(posicaocontacto, 1)
            console.log(equipamentoArray);
        }
      }

      
  });

  $(".mostrarTabelaEquipamento").on("click",".editar", function(e){ //user click on remove text
      //console.log($(this).parent('td').parent('tr'));
      var filhos = $(this).parent('td').parent('tr')[0].childNodes;
      // console.log(filhos);

     $(this).parent('td').parent('tr').remove();

     for(var i = 0; i < equipamentoArray.length; i++){
        if(equipamentoArray[i].jobcard_serialnumber == $(this).parent('td').parent('tr')[0].childNodes[3].innerText){
          var testenome = equipamentoArray[i].jobcard_serialnumber;
          var posicaocontacto = equipamentoArray.findIndex(x => x.jobcard_serialnumber === testenome);

              $("#jobcard_equiptype").val(equipamentoArray[i].jobcard_equiptype);
          $("#jobcard_manufacturer").val(equipamentoArray[i].jobcard_manufacturer);
          $("#jobcard_model").val(equipamentoArray[i].jobcard_model);
          $("#jobcard_serialnumber").val(equipamentoArray[i].jobcard_serialnumber);
          $("#jobcard_capcity").val(equipamentoArray[i].jobcard_capcity);
          $("#jobcard_type").val(equipamentoArray[i].jobcard_type);


            equipamentoArray.splice(posicaocontacto, 1);
            //console.log(b);
            console.log(equipamentoArray);
        }
      }


  });


  $('#adicionarSpares').click(function(){
  var sparesObject = {};
  $('.mostrartabela3').removeClass('hide');

    // var store = $("#jobcard_fromstore").val();
    // sparesObject.jobcard_fromstore = $("#jobcard_fromstore").val();
    // sparesObject.jobcard_maintenanceofficer = $("#jobcard_maintenanceofficer").val();
    var itm = $("#jobcard_item").val();
    sparesObject.jobcard_item = $("#jobcard_item").val();
    var rmg = $("#jobcard_remaining").val();
    sparesObject.jobcard_remaining = $("#jobcard_remaining").val();
    var usd = $("#jobcard_quantity").val();
    sparesObject.jobcard_quantity = $("#jobcard_quantity").val();
    var dtusd = $("#jobcard_datauso").val();
    sparesObject.jobcard_datauso = $("#jobcard_datauso").val();

    

    var mt = document.getElementById("mostrarTabelaSpares");

    // document.getElementById("mostrar").innerHTML = " Nome:" + n;
     // $("<a href=\"#\">"+ n +"</a>").insertAfter("#mostrar");
     mt.innerHTML += '<tr><td>' + itm + '</td><td>' + usd + '</td><td>' + rmg + '</td><td>' + dtusd + '</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr>';
    sparesArray.push(sparesObject);
     console.log(sparesArray);

     //limpar os campos
     // $("#jobcard_fromstore").val("");
     // $("#jobcard_maintenanceofficer").val("");
     $("#jobcard_item").val("");
     $("#jobcard_remaining").val("");
     $("#jobcard_quantity").val("");
     $("#jobcard_datauso").val("");


});

  $(".mostrarTabelaSpares").on("click",".eliminar", function(e){ //user click on remove text
  //console.log($(this).parent('td').parent('tr')[0].childNodes);
      
  $(this).parent('td').parent('tr').remove();

      for(var i = 0; i < sparesArray.length; i++){

        if((sparesArray[i].jobcard_item == $(this).parent('td').parent('tr')[0].childNodes[0].innerText) && (sparesArray[i].jobcard_quantity == $(this).parent('td').parent('tr')[0].childNodes[1].innerText) && (sparesArray[i].jobcard_remaining == $(this).parent('td').parent('tr')[0].childNodes[2].innerText) && (sparesArray[i].jobcard_datauso == $(this).parent('td').parent('tr')[0].childNodes[3].innerText) ){
          sparesArray.splice(i, 1)
          console.log(sparesArray);
        }
      }

      
  });

  $(".mostrarTabelaSpares").on("click",".editar", function(e){ //user click on remove text
  //console.log($(this).parent('td').parent('tr')[0].childNodes);
      
  $(this).parent('td').parent('tr').remove();

      for(var i = 0; i < sparesArray.length; i++){

        if((sparesArray[i].jobcard_item == $(this).parent('td').parent('tr')[0].childNodes[0].innerText) && (sparesArray[i].jobcard_quantity == $(this).parent('td').parent('tr')[0].childNodes[1].innerText) && (sparesArray[i].jobcard_remaining == $(this).parent('td').parent('tr')[0].childNodes[2].innerText) && (sparesArray[i].jobcard_datauso == $(this).parent('td').parent('tr')[0].childNodes[3].innerText) ){
          
        //  $("#jobcard_fromstore").val(sparesArray[i].jobcard_fromstore);
         // $("#jobcard_maintenanceofficer").val(sparesArray[i].jobcard_maintenanceofficer);
         $("#jobcard_item").val(sparesArray[i].jobcard_item);
         $("#jobcard_remaining").val(sparesArray[i].jobcard_remaining);
         $("#jobcard_quantity").val(sparesArray[i].jobcard_quantity);
         $("#jobcard_datauso").val(sparesArray[i].jobcard_datauso);

          sparesArray.splice(i, 1)
          console.log(sparesArray);
        }
      }

      
  });

  $('#jobcard_tecniconome').change(function(){

    var nm = document.getElementById("jobcard_tecniconome").value;
    var dadostecnicos= JSON.parse($("#contain").attr("detalhestecnico"));

    var posicaonometecnico = dadostecnicos.findIndex(x => x.nome === nm);
    $("#jobcard_cell").val(dadostecnicos[posicaonometecnico].telefone_1);
    $("#jobcard_linemanager").val(dadostecnicos[posicaonometecnico].nome_supervisor);



  });

  $('#jobcard_clienteidprojects').change(function(){
    
    $(".jobcard_siteidview").addClass('hide');

    var nm = document.getElementById("jobcard_clienteidprojects").value;
    var dadosclientes= JSON.parse($("#recolherdados").attr("detalhesclientes"));
    var dadosclientessite= JSON.parse($("#recolherdados").attr("detalhesclientessite"));

    var posicaocliente = dadosclientes.findIndex(x => x._id === nm);
    if(posicaocliente != -1){
       $("#jobcard_clientebranch").val(dadosclientes[posicaocliente].cliente_filial);
       $("#jobcard_clientetelefone").val(dadosclientes[posicaocliente].cliente_telefone);
    }else{
       $("#jobcard_clientebranch").val("");
       $("#jobcard_clientetelefone").val("");
    }

    // console.log(dadosclientessite)
    // console.log(document.getElementsByClassName("select-wrapper")[1].childNodes)

    var posicaoclientesite = dadosclientessite.findIndex(x => x._id === nm);
   
    var jobcard_siteid = document.getElementById("jobcard_siteidselect");
    var jobcard_siteidul = document.getElementsByClassName("select-wrapper")[1].childNodes[2];
    // console.log(jobcard_siteid);
    while (jobcard_siteid.options.length > 0) { 
      jobcard_siteid.remove(0); 
    }

    var jobcard_siteidview = document.getElementById("jobcard_siteidview");
    if(jobcard_siteidview != null){
       while (jobcard_siteidview.options.length > 0) { 
          jobcard_siteidview.remove(0); 
       }
    }
    
    $("#jobcard_siteidview1").val("");

      var opt = document.createElement('option');
      var lii = document.createElement('li');
      var spann = document.createElement('span');
      var inputt = document.createElement('input');
      // var textt = document.createTextNode('label');


      opt.value = "Escolha a opção";
      opt.innerHTML = "Escolha a opção";
      opt.id = "segundo";
      jobcard_siteid.appendChild(opt);

      document.getElementById("segundo").selected = "true";
      document.getElementById("segundo").disabled = "true";

    if(posicaoclientesite != -1){
      $(".jobcard_siteidselect").removeClass('hide');
      $(".jobcard_siteidinput").addClass('hide');
      
      for(var j = 0; j < dadosclientessite[posicaoclientesite].sites.length; j++){

          var opt = document.createElement('option');
          var lii = document.createElement('li');
         var spann = document.createElement('span');
         var labell = document.createElement('label');
         var inputt = document.createElement('input');
          // lii.className = 

        opt.value = dadosclientessite[posicaoclientesite].sites[j].numero;
        opt.innerHTML = dadosclientessite[posicaoclientesite].sites[j].numero;
        jobcard_siteid.appendChild(opt);

        inputt.setAttribute("type", "checkbox");
        var textt = document.createTextNode(dadosclientessite[posicaoclientesite].sites[j].numero);
        spann.appendChild(inputt);
        spann.appendChild(labell);
        spann.appendChild(textt);

        lii.appendChild(spann);
        jobcard_siteidul.appendChild(lii);

        
      }
      $('select').material_select();
    }else{

       $(".jobcard_siteidselect").addClass('hide');
      $(".jobcard_siteidinput").removeClass('hide');
      $("#jobcard_siteidinput").val("");

    }


  });

 $('#jobcard_clienteid').change(function(){

    $(".jobcard_siteidview").addClass('hide');
    $(".jobcard_jobinfoview").addClass('hide');

    var nm = document.getElementById("jobcard_clienteid").value;
    var dadosclientes= JSON.parse($("#recolherdados").attr("detalhesclientes"));
    var dadosdepartamento= JSON.parse($("#recolherdados").attr("detalhesdepartamento"));
    var ttnr = $("#jobcard_ttnumber");

    var posicaocliente = dadosclientes.findIndex(x => x._id === nm);
    if(posicaocliente != -1){
       $("#jobcard_clientebranch").val(dadosclientes[posicaocliente].cliente_filial);
       $("#jobcard_clientetelefone").val(dadosclientes[posicaocliente].cliente_telefone);
    }else{
       $("#jobcard_clientebranch").val("");
       $("#jobcard_clientetelefone").val("");
    }
    
    if(nm != "5e71cba0ccff6e17448e12d4"){
      ttnr.addClass('hide')
    }else{
      ttnr.removeClass('hide');
    }


    var dadosclientessite= JSON.parse($("#recolherdados").attr("detalhesclientessite"));
    var reasonsJobcardArray = ["AC Mains Failure", "Rectifier System", "Rectifier Module", "Generator Low Fuel", "Generator Abnormal", "Generator Running", "High Temperature", "Battery Low", "Door Switch Intruder", "Motion Detector", "FAN Stalled", "Smoke Detector", "Site Down", "RRU replacement", "RRU fiber", "Fly leads", "UBBP board", "WBBP board", "BBU board", "RTN905 RTN950", "RTN controller board", "RTN Fan unit", "OSN fan unit", "ODU replacement", "Patch Cords", "Outdoor cabinet cooling system"];
    
    var posicaoclientesite = dadosclientessite.findIndex(x => x._id === nm);
   
    var jobcard_siteidview1 = document.getElementById("jobcard_siteidview1");
    if(jobcard_siteidview1 != null){
       while (jobcard_siteidview1.options.length > 0) { 
          jobcard_siteidview1.remove(0); 
       }
    }

    var jobcard_jobinfoview1 = document.getElementById("jobcard_jobinfoview1");
    if(jobcard_jobinfoview1 != null){
       while (jobcard_jobinfoview1.options.length > 0) { 
          jobcard_jobinfoview1.remove(0); 
       }
    }

    $("#jobcard_siteidview").val("");
       $("#jobcard_jobinfoview").val("");

    var jobcard_siteid = document.getElementById("jobcard_siteidselectttnumber");
    while (jobcard_siteid.options.length > 0) { 
      jobcard_siteid.remove(0); 
    }

    var jobcard_jobinfoselect = document.getElementById("jobcard_jobinfoselect");
    while (jobcard_jobinfoselect.options.length > 0) { 
      jobcard_jobinfoselect.remove(0); 
    }


    var jobcard_departamentottnumber = document.getElementById("jobcard_departamentottnumber");
    while (jobcard_departamentottnumber.options.length > 0) { 
      jobcard_departamentottnumber.remove(0); 
    }


    var jobcard_jobinfoselectul = document.getElementsByClassName("select-wrapper")[1].childNodes[2];

      var opt = document.createElement('option');
      opt.value = "Escolha a opção";
      opt.innerHTML = "Escolha a opção";
      opt.id = "segundo";
      jobcard_siteid.appendChild(opt);

      document.getElementById("segundo").selected = "true";
      document.getElementById("segundo").disabled = "true";

      var opt1 = document.createElement('option');
      opt1.value = "Escolha a opção";
      opt1.innerHTML = "Escolha a opção";
      opt1.id = "segundoopjobinfoselect";
      jobcard_jobinfoselect.appendChild(opt1);

      document.getElementById("segundoopjobinfoselect").selected = "true";
      document.getElementById("segundoopjobinfoselect").disabled = "true";

      var optdepart1 = document.createElement('option');
      optdepart1.value = "Escolha a opção";
      optdepart1.innerHTML = "Escolha a opção";
      optdepart1.id = "optdepart1select";
      jobcard_departamentottnumber.appendChild(optdepart1);

      document.getElementById("optdepart1select").selected = "true";
      document.getElementById("optdepart1select").disabled = "true";

       if(posicaoclientesite != -1){

          $(".jobcard_siteidselect").removeClass('hide');
          $(".jobcard_siteidinput").addClass('hide');
         
         for(var j = 0; j < dadosclientessite[posicaoclientesite].sites.length; j++){

           var opt = document.createElement('option');
           opt.value = dadosclientessite[posicaoclientesite].sites[j].ref;
           opt.innerHTML = dadosclientessite[posicaoclientesite].sites[j].numero;
           jobcard_siteid.appendChild(opt);
           
         }

         if(nm == "5e71cba0ccff6e17448e12d4"){

          $(".jobcard_jobinfoselect").removeClass('hide');
          $(".jobcard_jobinfoinput").addClass('hide');
          $("#jobcard_jobinfoinput").val("");

          for(var j = 0; j < reasonsJobcardArray.length; j++){

             var opt = document.createElement('option');
             var lii = document.createElement('li');
            var spann = document.createElement('span');
            var labell = document.createElement('label');
            var inputt = document.createElement('input');
             

              opt.value = reasonsJobcardArray[j];
              opt.innerHTML = reasonsJobcardArray[j];
              jobcard_jobinfoselect.appendChild(opt);

              inputt.setAttribute("type", "checkbox");
              var textt = document.createTextNode(reasonsJobcardArray[j]);
              spann.appendChild(inputt);
              spann.appendChild(labell);
              spann.appendChild(textt);

              lii.appendChild(spann);
              jobcard_jobinfoselectul.appendChild(lii);

        
          }
          $('select').material_select();


          // var optdepart2 = document.createElement('option');
          //  optdepart2.value = "Telco";
          //  optdepart2.innerHTML = "Telco";
          //  jobcard_departamentottnumber.appendChild(optdepart2);

          for(var j = 0; j < dadosdepartamento.length; j++){

            var opt = document.createElement('option');
            opt.value = dadosdepartamento[j];
            opt.innerHTML = dadosdepartamento[j];
            jobcard_departamentottnumber.appendChild(opt);
          }


         }else{

             $(".jobcard_jobinfoselect").addClass('hide');
             $(".jobcard_jobinfoinput").removeClass('hide');
             $("#jobcard_jobinfoinput").val("");

             for(var j = 0; j < dadosdepartamento.length; j++){

                 var opt = document.createElement('option');
                 opt.value = dadosdepartamento[j];
                 opt.innerHTML = dadosdepartamento[j];
                 jobcard_departamentottnumber.appendChild(opt);
                 
             }

         }

       }else{

          $(".jobcard_siteidselect").addClass('hide');
          $(".jobcard_siteidinput").removeClass('hide');
          $("#jobcard_siteidinput").val("");

          $(".jobcard_jobinfoselect").addClass('hide');
          $(".jobcard_jobinfoinput").removeClass('hide');
          $("#jobcard_jobinfoinput").val("");

          for(var j = 0; j < dadosdepartamento.length; j++){

              var opt = document.createElement('option');
              opt.value = dadosdepartamento[j];
              opt.innerHTML = dadosdepartamento[j];
              jobcard_departamentottnumber.appendChild(opt);
              
          }
       }

  });

  $('#jobcard_clienteid1').change(function(){
    
    var clienteid = document.getElementById("jobcard_clienteid1").value;
    var dadosclientessite= JSON.parse($("#approvalinfo").attr("detalhesclientessite"));
    var dadosclientes = JSON.parse($("#approvalinfo").attr("detalhesclientes"));
    var jobcard = JSON.parse($("#approvalinfo").attr("detalhesjobcard"));


    var posicaoclientesite = dadosclientessite.findIndex(x => x._id === clienteid);
    var jobcardclienteid=jobcard[0].jobcard_clienteid;
    var jobcardsiteid=jobcard[0].jobcard_siteid;
    
    var posicaocliente = dadosclientes.findIndex(x => x._id === clienteid);
    console.log(posicaocliente)

    if(posicaocliente != -1){

       $("#jobcard_clientebranch").val(dadosclientes[posicaocliente].cliente_filial);
       $("#jobcard_clientetelefone").val(dadosclientes[posicaocliente].cliente_telefone);

    }

    var jobcard_siteid = document.getElementById("jobcard_siteid1");
    while (jobcard_siteid.options.length > 0) { 
      jobcard_siteid.remove(0); 
    }

      var opt = document.createElement('option');
      opt.value = "Escolha a opção";
      opt.innerHTML = "Escolha a opção";
      opt.id = "segundo";
      jobcard_siteid.appendChild(opt);

      document.getElementById("segundo").selected = "true";
      document.getElementById("segundo").disabled = "true";

    if(posicaoclientesite != -1){

       if(jobcardclienteid == clienteid){

          for(var j = 0; j < dadosclientessite[posicaoclientesite].sites.length; j++){

              var opt = document.createElement('option');
              opt.value = dadosclientessite[posicaoclientesite].sites[j].ref;
              opt.innerHTML = dadosclientessite[posicaoclientesite].sites[j].numero;
              jobcard_siteid.appendChild(opt);
              
              if(dadosclientessite[posicaoclientesite].sites[j].ref == jobcardsiteid){
                $("#jobcard_siteid1").val(jobcardsiteid);
              }
          }

       }else{

          for(var j = 0; j < dadosclientessite[posicaoclientesite].sites.length; j++){

           var opt = document.createElement('option');
           opt.value = dadosclientessite[posicaoclientesite].sites[j].ref;
           opt.innerHTML = dadosclientessite[posicaoclientesite].sites[j].numero;
           jobcard_siteid.appendChild(opt);
           
         }

       }
      
      
    }



  });

  $('#siteNumber').change(function(){

    var nr = parseInt(document.getElementById("siteNumber").value);
    var dadossiteinfo= JSON.parse($("#ajuda1").attr("detalhesSiteInfo"));

    var posicaosite = dadossiteinfo.findIndex(x => x.siteinfo_sitenum === nr);
    console.log(posicaosite)
    
    $("#siteName").val(dadossiteinfo[posicaosite].siteinfo_sitename);
    $("#siteName").siblings('label').addClass('active');

    $("#siteType").val(dadossiteinfo[posicaosite].siteinfo_typesite);
    $("#siteType").siblings('label').addClass('active');

    $("#maintenanceofficer").val(dadossiteinfo[posicaosite].siteinfo_maintoff);
    $("#maintenanceofficer").siblings('label').addClass('active');

    $("#regiaoselmec").val(dadossiteinfo[posicaosite].siteinfo_regiaoselmec);
    $("#regiaoselmec").siblings('label').addClass('active');


  });

  $('#siteinfo_maintoffid').change(function(){

    var nm = document.getElementById("siteinfo_maintoffid").value;
    var dadostecnicos= JSON.parse($("#contain2").attr("detalhestecnico"));

    var posicaonometecnico = dadostecnicos.findIndex(x => x._id === nm);
    
    $("#siteinfo_techcontactnum").val(dadostecnicos[posicaonometecnico].telefone_1);
    $("#siteinfo_techcontactnum").siblings('label').addClass('active');


  });


  $('#jobcard_siteidselectttnumber').change(function(){

    var site = document.getElementById("jobcard_siteidselectttnumber").value;
    
    if($("#recolherdados").attr("detalhessiteinfo") != undefined){
      
       var dadossiteinfo= JSON.parse($("#recolherdados").attr("detalhessiteinfo"));
       console.log(dadossiteinfo)
       var posicaositenumber = dadossiteinfo.findIndex(x => x._id === site);
       
       $("#jobcard_tecnicoid").val(dadossiteinfo[posicaositenumber].siteinfo_maintoffid);
    }
    

  });

  $('#jobcard_holdaction').change(function(){

    var jobcard_holdaction = $("#jobcard_holdaction").val();

    if(jobcard_holdaction == "Em Espera"){

      $('#mostrartecnicosubst').addClass('hide');

    }else if(jobcard_holdaction == "Cancelar jobcard"){

      $('#mostrartecnicosubst').addClass('hide');

    }else{

      $('#mostrartecnicosubst').removeClass('hide');

    }
    
  });

  $('#reportsmaintenance_reporttype').change(function(){

    var reportsmaintenance_reporttype = $("#reportsmaintenance_reporttype").val();

    if(reportsmaintenance_reporttype != "Diesel Refuel"){
      $('#typ').removeClass('hide');
    }else{
      $('#typ').addClass('hide');
    }
  });

  $('#reportsmaintenance_region').change(function(){

    var reportsmaintenance_region = $("#reportsmaintenance_region").val();

    if(reportsmaintenance_region == "maputo"){

      $('#mostrartecnico').removeClass('hide');
      $('#mostrartecnico1').addClass('hide');
      $('#mostrartecnico2').addClass('hide');
      $('#mostrartecnico3').addClass('hide');
    }else if(reportsmaintenance_region == "sul"){

        $('#mostrartecnico').addClass ('hide');
        $('#mostrartecnico1').removeClass('hide');
        $('#mostrartecnico2').addClass('hide');
        $('#mostrartecnico3').addClass('hide');

    }else if(reportsmaintenance_region == "centro"){

        $('#mostrartecnico1').addClass('hide');
        $('#mostrartecnico2').removeClass('hide');
        $('#mostrartecnico').addClass('hide');
        $('#mostrartecnico3').addClass('hide');
 

    }else if(reportsmaintenance_region == "norte"){
        $('#mostrartecnico2').addClass('hide');
        $('#mostrartecnico').addClass('hide');
        $('#mostrartecnico3').removeClass('hide');
        $('#mostrartecnico1').addClass('hide');

        }else if(reportsmaintenance_region == ""){
        $('#mostrartecnico2').addClass('hide');
        $('#mostrartecnico').addClass('hide');
        $('#mostrartecnico3').addClass('hide');
        $('#mostrartecnico1').addClass('hide');
        }
  });

  $('#jobcard_tecnicoid2').change(function(){

    var tecnicoid = document.getElementById("jobcard_tecnicoid2").value;
    var dadostecnicos= JSON.parse($("#approvalinfo").attr("detalhesusers"));

    var posicaotecnico = dadostecnicos.findIndex(x => x._id === tecnicoid);
    
    $("#jobcard_regiao").val(dadostecnicos[posicaotecnico].regiao);
    $("#jobcard_cell").val(dadostecnicos[posicaotecnico].telefone_1);
    $("#jobcard_linemanager").val(dadostecnicos[posicaotecnico].nome_supervisor);

    var posicaolinemanager = dadostecnicos.findIndex(x => x.nome === dadostecnicos[posicaotecnico].nome_supervisor);
    $("#jobcard_linemanagercell").val(dadostecnicos[posicaolinemanager].telefone_1);

  });
  

  $('.adicionarGenerator').click(function(){

    var generatorObject = {};

      // var siteinfo_generator=$("input[name='siteinfo_generator']:checked").val();
      // generatorObject.siteinfo_generator = siteinfo_generator;

      var siteinfo_generatortype=$("#siteinfo_generatortype").val();
      generatorObject.siteinfo_generatortype = siteinfo_generatortype;

      var siteinfo_generatoroutputkw=$("#siteinfo_generatoroutputkw").val();
      generatorObject.siteinfo_generatoroutputkw = siteinfo_generatoroutputkw;

      var siteinfo_generatormodelno=$("#siteinfo_generatormodelno").val();
      generatorObject.siteinfo_generatormodelno = siteinfo_generatormodelno;

      var siteinfo_generatorengineserialnumber=$("#siteinfo_generatorengineserialnumber").val();
      generatorObject.siteinfo_generatorengineserialnumber = siteinfo_generatorengineserialnumber;

      var siteinfo_generatorenginecapacity=$("#siteinfo_generatorenginecapacity").val();
      generatorObject.siteinfo_generatorenginecapacity = siteinfo_generatorenginecapacity;

      var siteinfo_generatorstartertype=$("#siteinfo_generatorstartertype").val();
      generatorObject.siteinfo_generatorstartertype = siteinfo_generatorstartertype;

      var siteinfo_generatorfuelconsumption=$("#siteinfo_generatorfuelconsumption").val();
      generatorObject.siteinfo_generatorfuelconsumption = siteinfo_generatorfuelconsumption;

      //Os novos campos são adicionados a partir daqui
        var siteinfo_generatorinstallationDate=$("#siteinfo_generatorinstallationDate").val();
        generatorObject.siteinfo_generatorinstallationDate = siteinfo_generatorinstallationDate;

        var siteinfo_generatorManufacturer=$("#siteinfo_generatorManufacturer").val();
        generatorObject.siteinfo_generatorManufacturer = siteinfo_generatorManufacturer;

        var siteinfo_generatorSerialNo=$("#siteinfo_generatorSerialNo").val();
        generatorObject.siteinfo_generatorSerialNo = siteinfo_generatorSerialNo;

        var siteinfo_generatorModel=$("#siteinfo_generatorModel").val();
        generatorObject.siteinfo_generatorModel = siteinfo_generatorModel;

        var siteinfo_alternatoratorManufacturer=$("#siteinfo_alternatoratorManufacturer").val();
        generatorObject.siteinfo_alternatoratorManufacturer = siteinfo_alternatoratorManufacturer;

        var siteinfo_alternatoratorKvaRating=$("#siteinfo_alternatoratorKvaRating").val();
        generatorObject.siteinfo_alternatoratorKvaRating = siteinfo_alternatoratorKvaRating;

        var siteinfo_alternatoratorModelNo=$("#siteinfo_alternatoratorModelNo").val();
        generatorObject.siteinfo_alternatoratorModelNo = siteinfo_alternatoratorModelNo;

        var siteinfo_alternatoratorSerialNo=$("#siteinfo_alternatoratorSerialNo").val();
        generatorObject.siteinfo_alternatoratorSerialNo = siteinfo_alternatoratorSerialNo;

        var siteinfo_generalControlerType=$("#siteinfo_generalControlerType").val();
        generatorObject.siteinfo_generalControlerType = siteinfo_generalControlerType;

        var siteinfo_generalControlerSerialNo=$("#siteinfo_generalControlerSerialNo").val();
        generatorObject.siteinfo_generalControlerSerialNo = siteinfo_generalControlerSerialNo;

        var siteinfo_generalControlerModelNo=$("#siteinfo_generalControlerModelNo").val();
        generatorObject.siteinfo_generalControlerModelNo = siteinfo_generalControlerModelNo;

        var siteinfo_generalControlerSoftwareversion=$("#siteinfo_generalControlerSoftwareversion").val();
        generatorObject.siteinfo_generalControlerSoftwareversion = siteinfo_generalControlerSoftwareversion;

        var siteinfo_generalSurgeArrestors=$("#siteinfo_generalSurgeArrestors").val();
        generatorObject.siteinfo_generalSurgeArrestors = siteinfo_generalSurgeArrestors;

        var siteinfo_generalSurgeArrestorsType=$("#siteinfo_generalSurgeArrestorsType").val();
        generatorObject.siteinfo_generalSurgeArrestorsType = siteinfo_generalSurgeArrestorsType;

        var siteinfo_generatorAmpMetersinst=$("#siteinfo_generatorAmpMetersinst").val();
        generatorObject.siteinfo_generatorAmpMetersinst = siteinfo_generatorAmpMetersinst;

        var siteinfo_generatorAmpMetersinstType=$("#siteinfo_generatorAmpMetersinstType").val();
        generatorObject.siteinfo_generatorAmpMetersinstType = siteinfo_generatorAmpMetersinstType;

        var siteinfo_generatorVltMetersinst=$("#siteinfo_generatorVltMetersinst").val();
        generatorObject.siteinfo_generatorVltMetersinst = siteinfo_generatorVltMetersinst;

        var siteinfo_generatorVltMetersinstType=$("#siteinfo_generatorVltMetersinstType").val();
        generatorObject.siteinfo_generatorVltMetersinstType = siteinfo_generatorVltMetersinstType;

        var siteinfo_generatorFrqncyMetersinst=$("#siteinfo_generatorFrqncyMetersinst").val();
        generatorObject.siteinfo_generatorFrqncyMetersinst = siteinfo_generatorFrqncyMetersinst;

        var siteinfo_generatorFrqncyMetersinstType=$("#siteinfo_generatorFrqncyMetersinstType").val();
        generatorObject.siteinfo_generatorFrqncyMetersinstType = siteinfo_generatorFrqncyMetersinstType;

        var siteinfo_generatorAnalogueHourMetersinst=$("#siteinfo_generatorAnalogueHourMetersinst").val();
        generatorObject.siteinfo_generatorAnalogueHourMetersinst = siteinfo_generatorAnalogueHourMetersinst;

        var siteinfo_generatorAnalogueHourMetersinstType=$("#siteinfo_generatorAnalogueHourMetersinstType").val();
        generatorObject.siteinfo_generatorAnalogueHourMetersinstType = siteinfo_generatorAnalogueHourMetersinstType;

        var siteinfo_generatorKwhMetersinst=$("#siteinfo_generatorKwhMetersinst").val();
        generatorObject.siteinfo_generatorKwhMetersinst = siteinfo_generatorKwhMetersinst;

        var siteinfo_generatorKwhMetersinstType=$("#siteinfo_generatorKwhMetersinstType").val();
        generatorObject.siteinfo_generatorKwhMetersinstType = siteinfo_generatorKwhMetersinstType;

        var siteinfo_generatorDummyLoadMetersinst=$("#siteinfo_generatorDummyLoadMetersinst").val();
        generatorObject.siteinfo_generatorDummyLoadMetersinst = siteinfo_generatorDummyLoadMetersinst;

        var siteinfo_generatorDummyLoadMetersinstType=$("#siteinfo_generatorDummyLoadMetersinstType").val();
        generatorObject.siteinfo_generatorDummyLoadMetersinstType = siteinfo_generatorDummyLoadMetersinstType;

        var siteinfo_generatorBatteryinstType=$("#siteinfo_generatorBatteryinstType").val();
        generatorObject.siteinfo_generatorBatteryinstType = siteinfo_generatorBatteryinstType;

        var siteinfo_generatorBatterySize=$("#siteinfo_generatorBatterySize").val();
        generatorObject.siteinfo_generatorBatterySize = siteinfo_generatorBatterySize;

        var siteinfo_generatorFuelSensorType=$("#siteinfo_generatorFuelSensorType").val();
        generatorObject.siteinfo_generatorFuelSensorType = siteinfo_generatorFuelSensorType;

        var siteinfo_generatorhours=0;
        var siteinfo_generatorprevrefuelhours=0;
        generatorObject.siteinfo_generatorhours = siteinfo_generatorhours;
        generatorObject.siteinfo_generatorprevrefuelhours = siteinfo_generatorprevrefuelhours;

      $('.mostrartabelaGeradores').removeClass('hide');
      var mt = document.getElementById("mostrarTabelaGenerator");
      console.log(generatorArray);
      generatorArray.push(generatorObject);

      mt.innerHTML += '<tr><td>'+ siteinfo_generatortype +'</td><td>'+ siteinfo_generatormodelno +'</td><td>'+siteinfo_generatorenginecapacity+'</td><td>'+siteinfo_generatorfuelconsumption+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


     $('#siteinfogeneratorinfo_modal').closeModal();

  });


  $(".mostrarTabelaGenerator").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var posicaogerador = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      generatorArray.splice(posicaogerador, 1);
      $(this).parent('td').parent('tr').remove();
      //console.log(generatorArray);
      if(generatorArray.length == 0){
        $('.mostrartabelaGeradores').addClass('hide');
      }
  });

  $(".mostrarTabelaGenerator").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr')
      var posicaogerador = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      

      $("#siteinfo_generatortype").val(generatorArray[posicaogerador].siteinfo_generatortype);

      $("#siteinfo_generatoroutputkw").val(generatorArray[posicaogerador].siteinfo_generatoroutputkw);
      $("#siteinfo_generatoroutputkw").siblings('label').addClass('active');

      $("#siteinfo_generatormodelno").val(generatorArray[posicaogerador].siteinfo_generatormodelno);
      $("#siteinfo_generatormodelno").siblings('label').addClass('active');

      $("#siteinfo_generatorengineserialnumber").val(generatorArray[posicaogerador].siteinfo_generatorengineserialnumber);
      $("#siteinfo_generatorengineserialnumber").siblings('label').addClass('active');

      $("#siteinfo_generatorenginecapacity").val(generatorArray[posicaogerador].siteinfo_generatorenginecapacity);
      $("#siteinfo_generatorstartertype").val(generatorArray[posicaogerador].siteinfo_generatorstartertype);

      $("#siteinfo_generatorfuelconsumption").val(generatorArray[posicaogerador].siteinfo_generatorfuelconsumption);
      $("#siteinfo_generatorfuelconsumption").siblings('label').addClass('active');

      generatorArray.splice(posicaogerador, 1);
        linha.remove();

        console.log(generatorArray);
      $('#siteinfogeneratorinfo_yes_btn_modal').addClass('hide');
      $('#siteinfogeneratorinfo_update_btn_modal').removeClass('hide');
      $("#siteinfogeneratorinfo_modal").openModal({dismissible:false});
      $('#siteinfogeneratorinfo_update_btn_modal').click(function(e){
        e.stopPropagation();
          e.stopImmediatePropagation();
        

        var generatorObject = {};

        var siteinfo_generatortype=$("#siteinfo_generatortype").val();
        generatorObject.siteinfo_generatortype = siteinfo_generatortype;

        var siteinfo_generatoroutputkw=$("#siteinfo_generatoroutputkw").val();
        generatorObject.siteinfo_generatoroutputkw = siteinfo_generatoroutputkw;

        var siteinfo_generatormodelno=$("#siteinfo_generatormodelno").val();
        generatorObject.siteinfo_generatormodelno = siteinfo_generatormodelno;

        var siteinfo_generatorengineserialnumber=$("#siteinfo_generatorengineserialnumber").val();
        generatorObject.siteinfo_generatorengineserialnumber = siteinfo_generatorengineserialnumber;

        var siteinfo_generatorenginecapacity=$("#siteinfo_generatorenginecapacity").val();
        generatorObject.siteinfo_generatorenginecapacity = siteinfo_generatorenginecapacity;

        var siteinfo_generatorstartertype=$("#siteinfo_generatorstartertype").val();
        generatorObject.siteinfo_generatorstartertype = siteinfo_generatorstartertype;

        var siteinfo_generatorfuelconsumption=$("#siteinfo_generatorfuelconsumption").val();
        generatorObject.siteinfo_generatorfuelconsumption = siteinfo_generatorfuelconsumption;

        var siteinfo_generatorhours=0;
        generatorObject.siteinfo_generatorhours = siteinfo_generatorhours;
        $('.mostrartabelaGeradores').removeClass('hide');
        var mt = document.getElementById("mostrarTabelaGenerator");
        console.log(generatorArray);
        generatorArray.push(generatorObject);

        mt.innerHTML += '<tr><td>'+ siteinfo_generatortype +'</td><td>'+ siteinfo_generatormodelno +'</td><td>'+siteinfo_generatorenginecapacity+'</td><td>'+siteinfo_generatorfuelconsumption+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


       $('#siteinfogeneratorinfo_modal').closeModal();
                
      });
      

      // $('#addgenerator').addClass('hide');
      // $('#updategenerator').removeClass('hide');
  });

  
  //GSM
    $('.adicionargsmcabinet').click(function(){

      var gsmcabObject = {};

        var siteinfo_gsmcab=$("input[name='siteinfo_gsmCabinetInstalled']:checked").val();
        console.log(siteinfo_gsmcab);

        var siteinfo_gsmEquipmentType=$("#siteinfo_gsmEquipmentType").val();
        gsmcabObject.siteinfo_gsmEquipmentType = siteinfo_gsmEquipmentType;

        var siteinfo_gsmSiteConfig=$("#siteinfo_gsmSiteConfig").val();
        gsmcabObject.siteinfo_gsmSiteConfig = siteinfo_gsmSiteConfig;

        var siteinfo_gsm900AntennaType=$("#siteinfo_gsm900AntennaType").val();
        gsmcabObject.siteinfo_gsm900AntennaType = siteinfo_gsm900AntennaType;

        var siteinfo_gsm900AntennaQty=$("#siteinfo_gsm900AntennaQty").val();
        gsmcabObject.siteinfo_gsm900AntennaQty = siteinfo_gsm900AntennaQty;

        var siteinfo_gsm900TmaInstalled=$("#siteinfo_gsm900TmaInstalled").val();
        gsmcabObject.siteinfo_gsm900TmaInstalled = siteinfo_gsm900TmaInstalled;

        var siteinfo_gsm1800AntennaType=$("#siteinfo_gsm1800AntennaType").val();
        gsmcabObject.siteinfo_gsm1800AntennaType = siteinfo_gsm1800AntennaType;

        var siteinfo_gsm1800AntennaQty=$("#siteinfo_gsm1800AntennaQty").val();
        gsmcabObject.siteinfo_gsm1800AntennaQty = siteinfo_gsm1800AntennaQty;

        var siteinfo_gsm1800TmaInstalled=$("#siteinfo_gsm1800TmaInstalled").val();
        gsmcabObject.siteinfo_gsm1800TmaInstalled = siteinfo_gsm1800TmaInstalled;

        var siteinfo_gsm3gAntennaType=$("#siteinfo_gsm3gAntennaType").val();
        gsmcabObject.siteinfo_gsm3gAntennaType = siteinfo_gsm3gAntennaType;

        var siteinfo_gsm3gAntennaQty=$("#siteinfo_gsm3gAntennaQty").val();
        gsmcabObject.siteinfo_gsm3gAntennaQty = siteinfo_gsm3gAntennaQty;

        var siteinfo_gsm3gTmaInstalled=$("#siteinfo_gsm3gTmaInstalled").val();
        gsmcabObject.siteinfo_gsm3gTmaInstalled = siteinfo_gsm3gTmaInstalled;

        var siteinfo_gsm4gAntennaType=$("#siteinfo_gsm4gAntennaType").val();
        gsmcabObject.siteinfo_gsm4gAntennaType = siteinfo_gsm4gAntennaType;

        var siteinfo_gsm4gAntennaQty=$("#siteinfo_gsm4gAntennaQty").val();
        gsmcabObject.siteinfo_gsm4gAntennaQty = siteinfo_gsm4gAntennaQty;

        var siteinfo_gsm4gTmaInstalled=$("#siteinfo_gsm4gTmaInstalled").val();
        gsmcabObject.siteinfo_gsm4gTmaInstalled = siteinfo_gsm4gTmaInstalled;

        var siteinfo_gsm5gAntennaType=$("#siteinfo_gsm5gAntennaType").val();
        gsmcabObject.siteinfo_gsm5gAntennaType = siteinfo_gsm5gAntennaType;

        var siteinfo_gsm5gAntennaQty=$("#siteinfo_gsm5gAntennaQty").val();
        gsmcabObject.siteinfo_gsm5gAntennaQty = siteinfo_gsm5gAntennaQty;

        var siteinfo_gsmOmniAntennaType=$("#siteinfo_gsmOmniAntennaType").val();
        gsmcabObject.siteinfo_gsmOmniAntennaType = siteinfo_gsmOmniAntennaType;

        var siteinfo_gsmOmniAntennaQty=$("#siteinfo_gsmOmniAntennaQty").val();
        gsmcabObject.siteinfo_gsmOmniAntennaQty = siteinfo_gsmOmniAntennaQty;

        var siteinfo_gsmTmaAntennaType=$("#siteinfo_gsmTmaAntennaType").val();
        gsmcabObject.siteinfo_gsmTmaAntennaType = siteinfo_gsmTmaAntennaType;

        var siteinfo_gsmTmaAntennaQty=$("#siteinfo_gsmTmaAntennaQty").val();
        gsmcabObject.siteinfo_gsmTmaAntennaQty = siteinfo_gsmTmaAntennaQty;

        var siteinfo_gsmBscAntennaType=$("#siteinfo_gsmBscAntennaType").val();
        gsmcabObject.siteinfo_gsmBscAntennaType = siteinfo_gsmBscAntennaType;

        var siteinfo_gsmBscAntennaQty=$("#siteinfo_gsmBscAntennaQty").val();
        gsmcabObject.siteinfo_gsmBscAntennaQty = siteinfo_gsmBscAntennaQty;

        var siteinfo_gsmTrauAntennaType=$("#siteinfo_gsmTrauAntennaType").val();
        gsmcabObject.siteinfo_gsmTrauAntennaType = siteinfo_gsmTrauAntennaType;

        var siteinfo_gsmTrauAntennaQty=$("#siteinfo_gsmTrauAntennaQty").val();
        gsmcabObject.siteinfo_gsmTrauAntennaQty = siteinfo_gsmTrauAntennaQty;

        var siteinfo_gsmRepeater=$("#siteinfo_gsmRepeater").val();
        gsmcabObject.siteinfo_gsmRepeater = siteinfo_gsmRepeater;

        var siteinfo_gsmRepeaterQty=$("#siteinfo_gsmRepeaterQty").val();
        gsmcabObject.siteinfo_gsmRepeaterQty = siteinfo_gsmRepeaterQty;

        console.log(gsmcabObject);

        $('.mostrartabelaGsm').removeClass('hide');
        var mt = document.getElementById("mostrarTabelaGsmcab");
        // console.log(generatorArray);
        gsmcabArray.push(gsmcabObject);

        mt.innerHTML += '<tr><td>'+ siteinfo_gsmEquipmentType +'</td><td>'+ siteinfo_gsmSiteConfig +'</td><td>'+siteinfo_gsm900AntennaType+'</td><td>'+siteinfo_gsm1800AntennaType+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


       $('#siteinfogsmcabinfo_modal').closeModal();

    });

    $(".mostrarTabelaGsmcab").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      console.log(gsmcabArray);
      var posicaogsm = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      gsmcabArray.splice(posicaogsm, 1);
      $(this).parent('td').parent('tr').remove();
      //console.log(siteinfo_gsmcabArray);
      if(siteinfo_gsmcabArray.length == 0){
        $('.mostrartabelaGsm').addClass('hide');
      }
  });

  $(".mostrarTabelaGsmcab").on("click",".editar", function(e){ //user click on remove text
    // console.log($(this).parent('td'));
    // console.log($(this).parent('td').parent('tr'));
    var linha = $(this).parent('td').parent('tr');
    var posicaogsmcab = $(this).parent('td').parent('tr')[0].rowIndex - 1;

    $("#siteinfo_acmanufacturer").val(gsmcabArray[posicaogsmcab].siteinfo_acmanufacturer);
    $("#siteinfo_actype").val(gsmcabArray[posicaogsmcab].siteinfo_actype);

    $("#siteinfo_gsmEquipmentType").val(gsmcabArray[posicaogsmcab].siteinfo_gsmEquipmentType);

    $("#siteinfo_gsmSiteConfig").val(gsmcabArray[posicaogsmcab].siteinfo_gsmSiteConfig);

    $("#siteinfo_gsm900AntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsm900AntennaType);

    $("#siteinfo_gsm900AntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsm900AntennaQty);
    $("#siteinfo_gsm900AntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsm900TmaInstalled").val(gsmcabArray[posicaogsmcab].siteinfo_gsm900TmaInstalled);

    $("#siteinfo_gsm1800AntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsm1800AntennaType);

    $("#siteinfo_gsm1800AntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsm1800AntennaQty);
    $("#siteinfo_gsm1800AntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsm1800TmaInstalled").val(gsmcabArray[posicaogsmcab].siteinfo_gsm1800TmaInstalled);
    $("#siteinfo_gsm1800TmaInstalled").siblings('label').addClass('active');

    $("#siteinfo_gsm3gAntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsm3gAntennaType);

    $("#siteinfo_gsm3gAntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsm3gAntennaQty);
    $("#siteinfo_gsm3gAntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsm3gTmaInstalled").val(gsmcabArray[posicaogsmcab].siteinfo_gsm3gTmaInstalled);

    $("#siteinfo_gsm4gAntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsm4gAntennaType);

    $("#siteinfo_gsm4gAntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsm4gAntennaQty);
    $("#siteinfo_gsm4gAntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsm4gTmaInstalled").val(gsmcabArray[posicaogsmcab].siteinfo_gsm4gTmaInstalled);

    $("#siteinfo_gsm5gAntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsm5gAntennaType);

    $("#siteinfo_gsm5gAntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsm5gAntennaQty);
    $("#siteinfo_gsm5gAntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsm5gTmaInstalled").val(gsmcabArray[posicaogsmcab].siteinfo_gsm5gTmaInstalled);

    $("#siteinfo_gsmOmniAntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsmOmniAntennaType);

    $("#siteinfo_gsmOmniAntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsmOmniAntennaQty);
    $("#siteinfo_gsmOmniAntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsmTmaAntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsmTmaAntennaType);

    $("#siteinfo_gsmTmaAntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsmTmaAntennaQty);
    $("#siteinfo_gsmTmaAntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsmBscAntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsmBscAntennaType);
    $("#siteinfo_gsmBscAntennaType").siblings('label').addClass('active');

    $("#siteinfo_gsmBscAntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsmBscAntennaQty);
    $("#siteinfo_gsmBscAntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsmTrauAntennaType").val(gsmcabArray[posicaogsmcab].siteinfo_gsmTrauAntennaType);

    $("#siteinfo_gsmTrauAntennaQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsmTrauAntennaQty);
    $("#siteinfo_gsmTrauAntennaQty").siblings('label').addClass('active');

    $("#siteinfo_gsmRepeater").val(gsmcabArray[posicaogsmcab].siteinfo_gsmRepeater);

    $("#siteinfo_gsmRepeaterQty").val(gsmcabArray[posicaogsmcab].siteinfo_gsmRepeaterQty);
    $("#siteinfo_gsmRepeaterQty").siblings('label').addClass('active');
    
    gsmcabArray.splice(posicaogsmcab, 1);
    linha.remove();
    console.log(gsmcabArray);

    //GSM 3
    $('#siteinfogsmcabinfo_yes_btn_modal').addClass('hide');
    $('#siteinfogsmcabinfo_update_btn_modal').removeClass('hide');
    $("#siteinfogsmcabinfo_modal").openModal({dismissible:false});
    $('#siteinfogsmcabinfo_update_btn_modal').click(function(e){
        e.stopPropagation();
        e.stopImmediatePropagation();
        

        var gsmcabObject = {};

        var siteinfo_gsmEquipmentType=$("#siteinfo_gsmEquipmentType").val();
        gsmcabObject.siteinfo_gsmEquipmentType = siteinfo_gsmEquipmentType;

        var siteinfo_gsmSiteConfig=$("#siteinfo_gsmSiteConfig").val();
        gsmcabObject.siteinfo_gsmSiteConfig = siteinfo_gsmSiteConfig;

        var siteinfo_gsm900AntennaType=$("#siteinfo_gsm900AntennaType").val();
        gsmcabObject.siteinfo_gsm900AntennaType = siteinfo_gsm900AntennaType;

        var siteinfo_gsm900AntennaQty=$("#siteinfo_gsm900AntennaQty").val();
        gsmcabObject.siteinfo_gsm900AntennaQty = siteinfo_gsm900AntennaQty;

        var siteinfo_gsm900TmaInstalled=$("#siteinfo_gsm900TmaInstalled").val();
        gsmcabObject.siteinfo_gsm900TmaInstalled = siteinfo_gsm900TmaInstalled;

        var siteinfo_gsm1800AntennaType=$("#siteinfo_gsm1800AntennaType").val();
        gsmcabObject.siteinfo_gsm1800AntennaType = siteinfo_gsm1800AntennaType;

        var siteinfo_gsm1800AntennaQty=$("#siteinfo_gsm1800AntennaQty").val();
        gsmcabObject.siteinfo_gsm1800AntennaQty = siteinfo_gsm1800AntennaQty;

        var siteinfo_gsm1800TmaInstalled=$("#siteinfo_gsm1800TmaInstalled").val();
        gsmcabObject.siteinfo_gsm1800TmaInstalled = siteinfo_gsm1800TmaInstalled;

        var siteinfo_gsm3gAntennaType=$("#siteinfo_gsm3gAntennaType").val();
        gsmcabObject.siteinfo_gsm3gAntennaType = siteinfo_gsm3gAntennaType;

        var siteinfo_gsm3gAntennaQty=$("#siteinfo_gsm3gAntennaQty").val();
        gsmcabObject.siteinfo_gsm3gAntennaQty = siteinfo_gsm3gAntennaQty;

        var siteinfo_gsm3gTmaInstalled=$("#siteinfo_gsm3gTmaInstalled").val();
        gsmcabObject.siteinfo_gsm3gTmaInstalled = siteinfo_gsm3gTmaInstalled;

        var siteinfo_gsm4gAntennaType=$("#siteinfo_gsm4gAntennaType").val();
        gsmcabObject.siteinfo_gsm4gAntennaType = siteinfo_gsm4gAntennaType;

        var siteinfo_gsm4gAntennaQty=$("#siteinfo_gsm4gAntennaQty").val();
        gsmcabObject.siteinfo_gsm4gAntennaQty = siteinfo_gsm4gAntennaQty;

        var siteinfo_gsm4gTmaInstalled=$("#siteinfo_gsm4gTmaInstalled").val();
        gsmcabObject.siteinfo_gsm4gTmaInstalled = siteinfo_gsm4gTmaInstalled;

        var siteinfo_gsm5gAntennaType=$("#siteinfo_gsm5gAntennaType").val();
        gsmcabObject.siteinfo_gsm5gAntennaType = siteinfo_gsm5gAntennaType;

        var siteinfo_gsm5gAntennaQty=$("#siteinfo_gsm5gAntennaQty").val();
        gsmcabObject.siteinfo_gsm5gAntennaQty = siteinfo_gsm5gAntennaQty;

        var siteinfo_gsmOmniAntennaType=$("#siteinfo_gsmOmniAntennaType").val();
        gsmcabObject.siteinfo_gsmOmniAntennaType = siteinfo_gsmOmniAntennaType;

        var siteinfo_gsmOmniAntennaQty=$("#siteinfo_gsmOmniAntennaQty").val();
        gsmcabObject.siteinfo_gsmOmniAntennaQty = siteinfo_gsmOmniAntennaQty;

        var siteinfo_gsmTmaAntennaType=$("#siteinfo_gsmTmaAntennaType").val();
        gsmcabObject.siteinfo_gsmTmaAntennaType = siteinfo_gsmTmaAntennaType;

        var siteinfo_gsmTmaAntennaQty=$("#siteinfo_gsmTmaAntennaQty").val();
        gsmcabObject.siteinfo_gsmTmaAntennaQty = siteinfo_gsmTmaAntennaQty;

        var siteinfo_gsmBscAntennaType=$("#siteinfo_gsmBscAntennaType").val();
        gsmcabObject.siteinfo_gsmBscAntennaType = siteinfo_gsmBscAntennaType;

        var siteinfo_gsmBscAntennaQty=$("#siteinfo_gsmBscAntennaQty").val();
        gsmcabObject.siteinfo_gsmBscAntennaQty = siteinfo_gsmBscAntennaQty;

        var siteinfo_gsmTrauAntennaType=$("#siteinfo_gsmTrauAntennaType").val();
        gsmcabObject.siteinfo_gsmTrauAntennaType = siteinfo_gsmTrauAntennaType;

        var siteinfo_gsmTrauAntennaQty=$("#siteinfo_gsmTrauAntennaQty").val();
        gsmcabObject.siteinfo_gsmTrauAntennaQty = siteinfo_gsmTrauAntennaQty;

        var siteinfo_gsmRepeater=$("#siteinfo_gsmRepeater").val();
        gsmcabObject.siteinfo_gsmRepeater = siteinfo_gsmRepeater;

        var siteinfo_gsmRepeaterQty=$("#siteinfo_gsmRepeaterQty").val();
        gsmcabObject.siteinfo_gsmRepeaterQty = siteinfo_gsmRepeaterQty;

        console.log(gsmcabObject);

        $('.mostrartabelaGsm').removeClass('hide');
        var mt = document.getElementById("mostrarTabelaGsmcab");
        gsmcabArray.push(gsmcabObject);
        console.log(gsmcabArray);

        mt.innerHTML += '<tr><td>'+ siteinfo_gsmEquipmentType +'</td><td>'+ siteinfo_gsmSiteConfig +'</td><td>'+siteinfo_gsm900AntennaType+'</td><td>'+siteinfo_gsm1800AntennaType+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


       $('#siteinfogsmcabinfo_modal').closeModal();
                
    });

});

    //INTERNAL DB
    $('.adicionarinternaldb').click(function(){
      var internaldbObject = {};

      var siteinfo_internaldb=$("input[name='siteinfo_internaldb']:checked").val();
      console.log(siteinfo_internaldb);

      var siteinfo_internaldbtype =$('#siteinfo_internaldbtype').val();
      internaldbObject.siteinfo_internaldbtype = siteinfo_internaldbtype;

      var siteinfo_internaldbPhase =$('#siteinfo_internaldbPhase').val();
      internaldbObject.siteinfo_internaldbPhase = siteinfo_internaldbPhase;

      var siteinfo_internaldbmaincircuitbreaker =$('#siteinfo_internaldbmaincircuitbreaker').val();
      internaldbObject.siteinfo_internaldbmaincircuitbreaker = siteinfo_internaldbmaincircuitbreaker;

      var siteinfo_internaldbsurgeArrestorType =$('#siteinfo_internaldbsurgeArrestorType').val();
      internaldbObject.siteinfo_internaldbsurgeArrestorType = siteinfo_internaldbsurgeArrestorType;

      var siteinfo_internaldbsurgeArrestorQty =$('#siteinfo_internaldbsurgeArrestorQty').val();
      internaldbObject.siteinfo_internaldbsurgeArrestorQty = siteinfo_internaldbsurgeArrestorQty;

      var siteinfo_internaldbsurgeArrestorType2 =$('#siteinfo_internaldbsurgeArrestorType2').val();
      internaldbObject.siteinfo_internaldbsurgeArrestorType2 = siteinfo_internaldbsurgeArrestorType2;

      var siteinfo_internaldbsurgeArrestorQty2 =$('#siteinfo_internaldbsurgeArrestorQty2').val();
      internaldbObject.siteinfo_internaldbsurgeArrestorQty2 = siteinfo_internaldbsurgeArrestorQty2;

      var siteinfo_internaldbcurrentmonitorType =$('#siteinfo_internaldbcurrentmonitorType').val();
      internaldbObject.siteinfo_internaldbcurrentmonitorType = siteinfo_internaldbcurrentmonitorType;

      var siteinfo_internaldbCurrentMonitorQty =$('#siteinfo_internaldbCurrentMonitorQty').val();
      internaldbObject.siteinfo_internaldbCurrentMonitorQty = siteinfo_internaldbCurrentMonitorQty;

      var siteinfo_internaldbEarthLeakageDevice =$('#siteinfo_internaldbEarthLeakageDevice').val();
      internaldbObject.siteinfo_internaldbEarthLeakageDevice = siteinfo_internaldbEarthLeakageDevice;

      var siteinfo_internaldbEarthLeakageDeviceQty =$('#siteinfo_internaldbEarthLeakageDeviceQty').val();
      internaldbObject.siteinfo_internaldbEarthLeakageDeviceQty = siteinfo_internaldbEarthLeakageDeviceQty;

      var siteinfo_internaldbCircuitBreakerforRectifier =$('#siteinfo_internaldbCircuitBreakerforRectifier').val();
      internaldbObject.siteinfo_internaldbCircuitBreakerforRectifier = siteinfo_internaldbCircuitBreakerforRectifier;

      var siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty =$('#siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty').val();
      internaldbObject.siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty = siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty;

      var siteinfo_internaldbCircuitBreakerforAirconditioners =$('#siteinfo_internaldbCircuitBreakerforAirconditioners').val();
      internaldbObject.siteinfo_internaldbCircuitBreakerforAirconditioners = siteinfo_internaldbCircuitBreakerforAirconditioners;

      var siteinfo_internaldbCircuitBreakerforAirconditionersQty =$('#siteinfo_internaldbCircuitBreakerforAirconditionersQty').val();
      internaldbObject.siteinfo_internaldbCircuitBreakerforAirconditionersQty = siteinfo_internaldbCircuitBreakerforAirconditionersQty;

      var siteinfo_internaldbCircuitBreakerforPlugs =$('#siteinfo_internaldbCircuitBreakerforPlugs').val();
      internaldbObject.siteinfo_internaldbCircuitBreakerforPlugs = siteinfo_internaldbCircuitBreakerforPlugs;

      var siteinfo_internaldbCircuitBreakerforPlugsQty =$('#siteinfo_internaldbCircuitBreakerforPlugsQty').val();
      internaldbObject.siteinfo_internaldbCircuitBreakerforPlugsQty = siteinfo_internaldbCircuitBreakerforPlugsQty;

      var siteinfo_internaldbMastInternalLight =$('#siteinfo_internaldbMastInternalLight').val();
      internaldbObject.siteinfo_internaldbMastInternalLight = siteinfo_internaldbMastInternalLight;

      var siteinfo_internaldb_internaldbMastInternalLightQty =$('#siteinfo_internaldb_internaldbMastInternalLightQty').val();
      internaldbObject.siteinfo_internaldb_internaldbMastInternalLightQty = siteinfo_internaldb_internaldbMastInternalLightQty;

      var siteinfo_internaldbContainerLight =$('#siteinfo_internaldbContainerLight').val();
      internaldbObject.siteinfo_internaldbContainerLight = siteinfo_internaldbContainerLight;

      var siteinfo_internaldbContainerLightQty =$('#siteinfo_internaldbContainerLightQty').val();
      internaldbObject.siteinfo_internaldbContainerLightQty = siteinfo_internaldbContainerLightQty;

      var siteinfo_internaldbSiteLight =$('#siteinfo_internaldbSiteLight').val();
      internaldbObject.siteinfo_internaldbSiteLight = siteinfo_internaldbSiteLight;

      var siteinfo_internaldbSiteLightQty =$('#siteinfo_internaldbSiteLightQty').val();
      internaldbObject.siteinfo_internaldbSiteLightQty = siteinfo_internaldbSiteLightQty;

      var siteinfo_internaldbAircraftWarningLight =$('#siteinfo_internaldbAircraftWarningLight').val();
      internaldbObject.siteinfo_internaldbAircraftWarningLight = siteinfo_internaldbAircraftWarningLight;

      var siteinfo_internaldbAircraftWarningLightQty =$('#siteinfo_internaldbAircraftWarningLightQty').val();
      internaldbObject.siteinfo_internaldbAircraftWarningLightQty = siteinfo_internaldbAircraftWarningLightQty;

      var siteinfo_internaldbCircuitBreakerSpareType =$('#siteinfo_internaldbCircuitBreakerSpareType').val();
      internaldbObject.siteinfo_internaldbCircuitBreakerSpareType = siteinfo_internaldbCircuitBreakerSpareType;

      var siteinfo_internaldbCircuitBreakerSpareTypeQty =$('#siteinfo_internaldbCircuitBreakerSpareTypeQty').val();
      internaldbObject.siteinfo_internaldbCircuitBreakerSpareTypeQty = siteinfo_internaldbCircuitBreakerSpareTypeQty;

      console.log(internaldbObject);

      $('.mostrartabelaInternal').removeClass('hide');
      var mt = document.getElementById("mostrarTabelaInternaldb");
      // console.log(generatorArray);
      internaldbArray.push(internaldbObject);

      mt.innerHTML += '<tr><td>'+ siteinfo_internaldbtype +'</td><td>'+ siteinfo_internaldbPhase +'</td><td>'+siteinfo_internaldbmaincircuitbreaker+'</td><td>'+siteinfo_internaldbsurgeArrestorQty+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';
      console.log(internaldbArray);

     $('#siteinfointernaldbinfo_modal').closeModal();

    });

    $(".mostrarTabelaInternaldb").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      console.log(internaldbArray);
      var posicaointernal = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      internaldbArray.splice(posicaointernal, 1);
      $(this).parent('td').parent('tr').remove();
      //console.log(siteinfo_gsmcabArray);
      if(internaldbArray.length == 0){
        $('.mostrartabelaInternal').addClass('hide');
      }
    });


    $(".mostrarTabelaInternaldb").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr');
      var posicaointernal = $(this).parent('td').parent('tr')[0].rowIndex - 1;

      
      $("#siteinfo_internaldbtype").val(internaldbArray[posicaointernal].siteinfo_internaldbtype);

       $("#siteinfo_internaldbphase").val(internaldbArray[posicaointernal].siteinfo_internaldbPhase);

       $("#siteinfo_internaldbmaincircuitbreaker").val(internaldbArray[posicaointernal].siteinfo_internaldbmaincircuitbreaker);

       $("#siteinfo_internaldbsurgeArrestorType").val(internaldbArray[posicaointernal].siteinfo_internaldbsurgeArrestorType);

       $("#siteinfo_internaldbsurgeArrestorType2").val(internaldbArray[posicaointernal].siteinfo_internaldbsurgeArrestorType2);

       $("#siteinfo_internaldbcurrentmonitorType").val(internaldbArray[posicaointernal].siteinfo_internaldbcurrentmonitorType);

       $("#siteinfo_internaldbEarthLeakageDevice").val(internaldbArray[posicaointernal].siteinfo_internaldbEarthLeakageDevice);

       $("#siteinfo_internaldbCircuitBreakerforRectifier").val(internaldbArray[posicaointernal].siteinfo_internaldbCircuitBreakerforRectifier);

       $("#siteinfo_internaldbCircuitBreakerforAirconditioners").val(internaldbArray[posicaointernal].siteinfo_internaldbCircuitBreakerforAirconditioners);

       $("#siteinfo_internaldbCircuitBreakerforPlugs").val(internaldbArray[posicaointernal].siteinfo_internaldbCircuitBreakerforPlugs);

       $("#siteinfo_internaldbMastInternalLight").val(internaldbArray[posicaointernal].siteinfo_internaldbMastInternalLight);

       $("#siteinfo_internaldbContainerLight").val(internaldbArray[posicaointernal].siteinfo_internaldbContainerLight);

       $("#siteinfo_internaldbSiteLight").val(internaldbArray[posicaointernal].siteinfo_internaldbSiteLight);

       $("#siteinfo_internaldbAircraftWarningLight").val(internaldbArray[posicaointernal].siteinfo_internaldbAircraftWarningLight);

       $("#siteinfo_internaldbCircuitBreakerSpareType").val(internaldbArray[posicaointernal].siteinfo_internaldbCircuitBreakerSpareType);

       $("#siteinfo_internaldbsurgeArrestorQty2").val(internaldbArray[posicaointernal].siteinfo_internaldbsurgeArrestorQty2);
       $("#siteinfo_internaldbsurgeArrestorQty2").siblings('label').addClass('active');

       $("#siteinfo_internaldbCurrentMonitorQty").val(internaldbArray[posicaointernal].siteinfo_internaldbCurrentMonitorQty);
       $("#siteinfo_internaldbCurrentMonitorQty").siblings('label').addClass('active');

       $("#siteinfo_internaldbEarthLeakageDeviceQty").val(internaldbArray[posicaointernal].siteinfo_internaldbEarthLeakageDeviceQty);
       $("#siteinfo_internaldbEarthLeakageDeviceQty").siblings('label').addClass('active');

       $("#siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty").val(internaldbArray[posicaointernal].siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty);
       $("#siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty").siblings('label').addClass('active');

       $("#siteinfo_internaldbCircuitBreakerforAirconditionersQty").val(internaldbArray[posicaointernal].siteinfo_internaldbCircuitBreakerforAirconditionersQty);
       $("#siteinfo_internaldbCircuitBreakerforAirconditionersQty").siblings('label').addClass('active');

       $("#siteinfo_internaldbCircuitBreakerforPlugsQty").val(internaldbArray[posicaointernal].siteinfo_internaldbCircuitBreakerforPlugsQty);
       $("#siteinfo_internaldbCircuitBreakerforPlugsQty").siblings('label').addClass('active');

       $("#siteinfo_internaldb_internaldbMastInternalLightQty").val(internaldbArray[posicaointernal].siteinfo_internaldb_internaldbMastInternalLightQty);
       $("#siteinfo_internaldb_internaldbMastInternalLightQty").siblings('label').addClass('active');

       $("#siteinfo_internaldbContainerLightQty").val(internaldbArray[posicaointernal].siteinfo_internaldbContainerLightQty);
       $("#siteinfo_internaldbContainerLightQty").siblings('label').addClass('active');

       $("#siteinfo_internaldbSiteLightQty").val(internaldbArray[posicaointernal].siteinfo_internaldbSiteLightQty);
       $("#siteinfo_internaldbSiteLightQty").siblings('label').addClass('active');

       $("#siteinfo_internaldbAircraftWarningLightQty").val(internaldbArray[posicaointernal].siteinfo_internaldbAircraftWarningLightQty);
       $("#siteinfo_internaldbAircraftWarningLightQty").siblings('label').addClass('active');

       $("#siteinfo_internaldbCircuitBreakerSpareTypeQty").val(internaldbArray[posicaointernal].siteinfo_internaldbCircuitBreakerSpareTypeQty);
       $("#siteinfo_internaldbCircuitBreakerSpareTypeQty").siblings('label').addClass('active');
      
      internaldbArray.splice(posicaointernal, 1);
      linha.remove();
      console.log(internaldbArray);


      $('#siteinfointernaldbinfo_yes_btn_modal').addClass('hide');
      $('#siteinfointernaldbinfo_update_btn_modal').removeClass('hide');
      $("#siteinfointernaldbinfo_modal").openModal({dismissible:false});
      $('#siteinfointernaldbinfo_update_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();
          

          var internaldbObject = {};

          var siteinfo_internaldbtype =$('#siteinfo_internaldbtype').val();
          internaldbObject.siteinfo_internaldbtype = siteinfo_internaldbtype;

          var siteinfo_internaldbPhase =$('#siteinfo_internaldbPhase').val();
          internaldbObject.siteinfo_internaldbPhase = siteinfo_internaldbPhase;

          var siteinfo_internaldbmaincircuitbreaker =$('#siteinfo_internaldbmaincircuitbreaker').val();
          internaldbObject.siteinfo_internaldbmaincircuitbreaker = siteinfo_internaldbmaincircuitbreaker;

          var siteinfo_internaldbsurgeArrestorType =$('#siteinfo_internaldbsurgeArrestorType').val();
          internaldbObject.siteinfo_internaldbsurgeArrestorType = siteinfo_internaldbsurgeArrestorType;

          var siteinfo_internaldbsurgeArrestorQty =$('#siteinfo_internaldbsurgeArrestorQty').val();
          internaldbObject.siteinfo_internaldbsurgeArrestorQty = siteinfo_internaldbsurgeArrestorQty;

          var siteinfo_internaldbsurgeArrestorType2 =$('#siteinfo_internaldbsurgeArrestorType2').val();
          internaldbObject.siteinfo_internaldbsurgeArrestorType2 = siteinfo_internaldbsurgeArrestorType2;

          var siteinfo_internaldbsurgeArrestorQty2 =$('#siteinfo_internaldbsurgeArrestorQty2').val();
          internaldbObject.siteinfo_internaldbsurgeArrestorQty2 = siteinfo_internaldbsurgeArrestorQty2;

          var siteinfo_internaldbcurrentmonitorType =$('#siteinfo_internaldbcurrentmonitorType').val();
          internaldbObject.siteinfo_internaldbcurrentmonitorType = siteinfo_internaldbcurrentmonitorType;

          var siteinfo_internaldbCurrentMonitorQty =$('#siteinfo_internaldbCurrentMonitorQty').val();
          internaldbObject.siteinfo_internaldbCurrentMonitorQty = siteinfo_internaldbCurrentMonitorQty;

          var siteinfo_internaldbEarthLeakageDevice =$('#siteinfo_internaldbEarthLeakageDevice').val();
          internaldbObject.siteinfo_internaldbEarthLeakageDevice = siteinfo_internaldbEarthLeakageDevice;

          var siteinfo_internaldbEarthLeakageDeviceQty =$('#siteinfo_internaldbEarthLeakageDeviceQty').val();
          internaldbObject.siteinfo_internaldbEarthLeakageDeviceQty = siteinfo_internaldbEarthLeakageDeviceQty;

          var siteinfo_internaldbCircuitBreakerforRectifier =$('#siteinfo_internaldbCircuitBreakerforRectifier').val();
          internaldbObject.siteinfo_internaldbCircuitBreakerforRectifier = siteinfo_internaldbCircuitBreakerforRectifier;

          var siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty =$('#siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty').val();
          internaldbObject.siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty = siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty;

          var siteinfo_internaldbCircuitBreakerforAirconditioners =$('#siteinfo_internaldbCircuitBreakerforAirconditioners').val();
          internaldbObject.siteinfo_internaldbCircuitBreakerforAirconditioners = siteinfo_internaldbCircuitBreakerforAirconditioners;

          var siteinfo_internaldbCircuitBreakerforAirconditionersQty =$('#siteinfo_internaldbCircuitBreakerforAirconditionersQty').val();
          internaldbObject.siteinfo_internaldbCircuitBreakerforAirconditionersQty = siteinfo_internaldbCircuitBreakerforAirconditionersQty;

          var siteinfo_internaldbCircuitBreakerforPlugs =$('#siteinfo_internaldbCircuitBreakerforPlugs').val();
          internaldbObject.siteinfo_internaldbCircuitBreakerforPlugs = siteinfo_internaldbCircuitBreakerforPlugs;

          var siteinfo_internaldbCircuitBreakerforPlugsQty =$('#siteinfo_internaldbCircuitBreakerforPlugsQty').val();
          internaldbObject.siteinfo_internaldbCircuitBreakerforPlugsQty = siteinfo_internaldbCircuitBreakerforPlugsQty;

          var siteinfo_internaldbMastInternalLight =$('#siteinfo_internaldbMastInternalLight').val();
          internaldbObject.siteinfo_internaldbMastInternalLight = siteinfo_internaldbMastInternalLight;

          var siteinfo_internaldb_internaldbMastInternalLightQty =$('#siteinfo_internaldb_internaldbMastInternalLightQty').val();
          internaldbObject.siteinfo_internaldb_internaldbMastInternalLightQty = siteinfo_internaldb_internaldbMastInternalLightQty;

          var siteinfo_internaldbContainerLight =$('#siteinfo_internaldbContainerLight').val();
          internaldbObject.siteinfo_internaldbContainerLight = siteinfo_internaldbContainerLight;

          var siteinfo_internaldbContainerLightQty =$('#siteinfo_internaldbContainerLightQty').val();
          internaldbObject.siteinfo_internaldbContainerLightQty = siteinfo_internaldbContainerLightQty;

          var siteinfo_internaldbSiteLight =$('#siteinfo_internaldbSiteLight').val();
          internaldbObject.siteinfo_internaldbSiteLight = siteinfo_internaldbSiteLight;

          var siteinfo_internaldbSiteLightQty =$('#siteinfo_internaldbSiteLightQty').val();
          internaldbObject.siteinfo_internaldbSiteLightQty = siteinfo_internaldbSiteLightQty;

          var siteinfo_internaldbAircraftWarningLight =$('#siteinfo_internaldbAircraftWarningLight').val();
          internaldbObject.siteinfo_internaldbAircraftWarningLight = siteinfo_internaldbAircraftWarningLight;

          var siteinfo_internaldbAircraftWarningLightQty =$('#siteinfo_internaldbAircraftWarningLightQty').val();
          internaldbObject.siteinfo_internaldbAircraftWarningLightQty = siteinfo_internaldbAircraftWarningLightQty;

          var siteinfo_internaldbCircuitBreakerSpareType =$('#siteinfo_internaldbCircuitBreakerSpareType').val();
          internaldbObject.siteinfo_internaldbCircuitBreakerSpareType = siteinfo_internaldbCircuitBreakerSpareType;

          var siteinfo_internaldbCircuitBreakerSpareTypeQty =$('#siteinfo_internaldbCircuitBreakerSpareTypeQty').val();
          internaldbObject.siteinfo_internaldbCircuitBreakerSpareTypeQty = siteinfo_internaldbCircuitBreakerSpareTypeQty;

          console.log(internaldbObject);

          $('.mostrartabelaInternal').removeClass('hide');
          var mt = document.getElementById("mostrartabelaInternal");
          internaldbArray.push(internaldbObject);
          console.log(internaldbArray);

          mt.innerHTML += '<tr><td>'+ siteinfo_internaldbtype +'</td><td>'+ siteinfo_internaldbPhase +'</td><td>'+siteinfo_internaldbmaincircuitbreaker+'</td><td>'+siteinfo_internaldbsurgeArrestorQty+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


         $('#siteinfoacinfo_modal').closeModal();
                  
      });

  });


    //EXTERNAL DB
    $('.adicionarexternaldb').click(function(){

      var externaldbObject = {};

        var siteinfo_internaldb=$("input[name='siteinfo_externaldb']:checked").val();
        console.log(siteinfo_internaldb);

        var siteinfo_externaldbtype=$("#siteinfo_externaldbtype").val();
        externaldbObject.siteinfo_externaldbtype = siteinfo_externaldbtype;

        var siteinfo_externaldbSharing=$("#siteinfo_externaldbSharing").val();
        externaldbObject.siteinfo_externaldbSharing = siteinfo_externaldbSharing;

        var siteinfo_externaldbPhase=$("#siteinfo_externaldbPhase").val();
        externaldbObject.siteinfo_externaldbPhase = siteinfo_externaldbPhase;

        var siteinfo_externaldbGeneratorPlug=$("#siteinfo_externaldbGeneratorPlug").val();
        externaldbObject.siteinfo_externaldbGeneratorPlug = siteinfo_externaldbGeneratorPlug;

        var siteinfo_externaldbmainIncomingIsolator=$("#siteinfo_externaldbmainIncomingIsolator").val();
        externaldbObject.siteinfo_externaldbmainIncomingIsolator = siteinfo_externaldbmainIncomingIsolator;

        var siteinfo_externaldbneutralbarsqty=$("#siteinfo_externaldbneutralbarsqty").val();
        externaldbObject.siteinfo_externaldbneutralbarsqty = siteinfo_externaldbneutralbarsqty;

        var siteinfo_externalPowerMonitorRelay=$("#siteinfo_externalPowerMonitorRelay").val();
        externaldbObject.siteinfo_externalPowerMonitorRelay = siteinfo_externalPowerMonitorRelay;

        var siteinfo_externalPowerMonitorRelayType=$("#siteinfo_externalPowerMonitorRelayType").val();
        externaldbObject.siteinfo_externalPowerMonitorRelayType = siteinfo_externalPowerMonitorRelayType;

        var siteinfo_externaldbSurgeArrestors=$("#siteinfo_externaldbSurgeArrestors").val();
        externaldbObject.siteinfo_externaldbSurgeArrestors = siteinfo_externaldbSurgeArrestors;

        var siteinfo_externaldbSurgeArrestorsType=$("#siteinfo_externaldbSurgeArrestorsType").val();
        externaldbObject.siteinfo_externaldbSurgeArrestorsType = siteinfo_externaldbSurgeArrestorsType;

        var siteinfo_externaldbCbForSharingParty=$("#siteinfo_externaldbCbForSharingParty").val();
        externaldbObject.siteinfo_externaldbCbForSharingParty = siteinfo_externaldbCbForSharingParty;

        var siteinfo_externaldbCbForSharingPartyType=$("#siteinfo_externaldbCbForSharingPartyType").val();
        externaldbObject.siteinfo_externaldbCbForSharingPartyType = siteinfo_externaldbCbForSharingPartyType;

        var siteinfo_externaldbKwhmeterForSharingParty=$("#siteinfo_externaldbKwhmeterForSharingParty").val();
        externaldbObject.siteinfo_externaldbKwhmeterForSharingParty = siteinfo_externaldbKwhmeterForSharingParty;

        var siteinfo_externaldbKwhmeterForSharingPartyType=$("#siteinfo_externaldbKwhmeterForSharingPartyType").val();
        externaldbObject.siteinfo_externaldbKwhmeterForSharingPartyType = siteinfo_externaldbKwhmeterForSharingPartyType;

        var siteinfo_externaldbForConstructionParty=$("#siteinfo_externaldbForConstructionParty").val();
        externaldbObject.siteinfo_externaldbForConstructionParty = siteinfo_externaldbForConstructionParty;

        var siteinfo_externaldbForConstructionPartyType=$("#siteinfo_externaldbForConstructionPartyType").val();
        externaldbObject.siteinfo_externaldbForConstructionPartyType = siteinfo_externaldbForConstructionPartyType;

        var siteinfo_externaldbForVdcInternaldb=$("#siteinfo_externaldbForVdcInternaldb").val();
        externaldbObject.siteinfo_externaldbForVdcInternaldb = siteinfo_externaldbForVdcInternaldb;

        var siteinfo_externaldbForVdcInternaldbType=$("#siteinfo_externaldbForVdcInternaldbType").val();
        externaldbObject.siteinfo_externaldbForVdcInternaldbType = siteinfo_externaldbForVdcInternaldbType;

        var siteinfo_externaldbForSiteLight=$("#siteinfo_externaldbForSiteLight").val();
        externaldbObject.siteinfo_externaldbForSiteLight = siteinfo_externaldbForSiteLight;

        var siteinfo_externaldbForSiteLightType=$("#siteinfo_externaldbForSiteLightType").val();
        externaldbObject.siteinfo_externaldbForSiteLightType = siteinfo_externaldbForSiteLightType;

        var siteinfo_externaldbForAwLight=$("#siteinfo_externaldbForAwLight").val();
        externaldbObject.siteinfo_externaldbForAwLight = siteinfo_externaldbForAwLight;

        var siteinfo_externaldbForAwLightType=$("#siteinfo_externaldbForAwLightType").val();
        externaldbObject.siteinfo_externaldbForAwLightType = siteinfo_externaldbForAwLightType;

        var siteinfo_externaldbForMobileGen=$("#siteinfo_externaldbForMobileGen").val();
        externaldbObject.siteinfo_externaldbForMobileGen = siteinfo_externaldbForMobileGen;

        var siteinfo_externaldbForMobileGenType=$("#siteinfo_externaldbForMobileGenType").val();
        externaldbObject.siteinfo_externaldbForMobileGenType = siteinfo_externaldbForMobileGenType;

        var siteinfo_externaldbForGenPhaseMonitor=$("#siteinfo_externaldbForGenPhaseMonitor").val();
        externaldbObject.siteinfo_externaldbForGenPhaseMonitor = siteinfo_externaldbForGenPhaseMonitor;

        var siteinfo_externaldbForGenPhaseMonitorType=$("#siteinfo_externaldbForGenPhaseMonitorType").val();
        externaldbObject.siteinfo_externaldbForGenPhaseMonitorType = siteinfo_externaldbForGenPhaseMonitorType;

        var siteinfo_externaldbForControlFuseforGen=$("#siteinfo_externaldbForControlFuseforGen").val();
        externaldbObject.siteinfo_externaldbForControlFuseforGen = siteinfo_externaldbForControlFuseforGen;

        var siteinfo_externaldbForControlFuseforGenType=$("#siteinfo_externaldbForControlFuseforGenType").val();
        externaldbObject.siteinfo_externaldbForControlFuseforGenType = siteinfo_externaldbForControlFuseforGenType;

        var siteinfo_externaldbForControlFuseRating=$("#siteinfo_externaldbForControlFuseRating").val();
        externaldbObject.siteinfo_externaldbForControlFuseRating = siteinfo_externaldbForControlFuseRating;

        var siteinfo_externaldbForFeedCable=$("#siteinfo_externaldbForFeedCable").val();
        externaldbObject.siteinfo_externaldbForFeedCable = siteinfo_externaldbForFeedCable;

        var siteinfo_externaldbForFeedCableLength=$("#siteinfo_externaldbForFeedCableLength").val();
        externaldbObject.siteinfo_externaldbForFeedCableLength = siteinfo_externaldbForFeedCableLength;

        var siteinfo_externaldbForCableToVm=$("#siteinfo_externaldbForCableToVm").val();
        externaldbObject.siteinfo_externaldbForCableToVm = siteinfo_externaldbForCableToVm;

        var siteinfo_externaldbForCableToVmLength=$("#siteinfo_externaldbForCableToVmLength").val();
        externaldbObject.siteinfo_externaldbForCableToVmLength = siteinfo_externaldbForCableToVmLength;

        var siteinfo_externaldbAwlSurgeArrestor=$("#siteinfo_externaldbAwlSurgeArrestor").val();
        externaldbObject.siteinfo_externaldbAwlSurgeArrestor = siteinfo_externaldbAwlSurgeArrestor;

        var siteinfo_externaldbAwlSurgeArrestorType=$("#siteinfo_externaldbAwlSurgeArrestorType").val();
        externaldbObject.siteinfo_externaldbAwlSurgeArrestorType = siteinfo_externaldbAwlSurgeArrestorType;

        var siteinfo_externaldbAwlSurgeArrestorQty=$("#siteinfo_externaldbAwlSurgeArrestorQty").val();
        externaldbObject.siteinfo_externaldbAwlSurgeArrestorQty = siteinfo_externaldbAwlSurgeArrestorQty;

        var siteinfo_externaldbCurrentMonitor=$("#siteinfo_externaldbCurrentMonitor").val();
        externaldbObject.siteinfo_externaldbCurrentMonitor = siteinfo_externaldbCurrentMonitor;

        var siteinfo_externaldbCurrentMonitorType=$("#siteinfo_externaldbCurrentMonitorType").val();
        externaldbObject.siteinfo_externaldbCurrentMonitorType = siteinfo_externaldbCurrentMonitorType;

        var siteinfo_externaldbChangeContactors=$("#siteinfo_externaldbChangeContactors").val();
        externaldbObject.siteinfo_externaldbChangeContactors = siteinfo_externaldbChangeContactors;

        var siteinfo_externaldbChangeContactors=$("#siteinfo_externaldbChangeContactors").val();
        externaldbObject.siteinfo_externaldbChangeContactors = siteinfo_externaldbChangeContactors;

        

        console.log(externaldbObject);

        $('.mostrartabelaExternal').removeClass('hide');
        var mt = document.getElementById("mostrarTabelaExternalDb");
        // console.log(generatorArray);
        externaldbArray.push(externaldbObject);

        mt.innerHTML += '<tr><td>'+ siteinfo_externaldbtype +'</td><td>'+ siteinfo_externaldbSharing +'</td><td>'+siteinfo_externaldbPhase+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


       $('#siteinfoexternaldbinfo_modal').closeModal();

    });

    $(".mostrarTabelaExternalDb").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      console.log(externaldbArray);
      var posicaointernal = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      externaldbArray.splice(posicaointernal, 1);
      $(this).parent('td').parent('tr').remove();
      //console.log(siteinfo_gsmcabArray);
      if(externaldbArray.length == 0){
        $('.mostrartabelaExternal').addClass('hide');
      }
    });


    $(".mostrarTabelaExternalDb").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr');
      var posicaoexternal = $(this).parent('td').parent('tr')[0].rowIndex - 1;

      
      $("#siteinfo_externaldbtype").val(externaldbArray[posicaoexternal].siteinfo_externaldbtype);

       $("#siteinfo_externaldbSharing").val(externaldbArray[posicaoexternal].siteinfo_externaldbSharing);

       $("#siteinfo_externaldbPhase").val(externaldbArray[posicaoexternal].siteinfo_externaldbPhase);

       $("#siteinfo_externaldbGeneratorPlug").val(externaldbArray[posicaoexternal].siteinfo_externaldbGeneratorPlug);

       $("#siteinfo_externaldbmainIncomingIsolator").val(externaldbArray[posicaoexternal].siteinfo_externaldbmainIncomingIsolator);

       $("#siteinfo_externalPowerMonitorRelayType").val(externaldbArray[posicaoexternal].siteinfo_externalPowerMonitorRelayType);

       $("#siteinfo_externaldbSurgeArrestorsType").val(externaldbArray[posicaoexternal].siteinfo_externaldbSurgeArrestorsType);

       $("#siteinfo_externaldbCbForSharingPartyType").val(externaldbArray[posicaoexternal].siteinfo_externaldbCbForSharingPartyType);

       $("#siteinfo_externaldbKwhmeterForSharingPartyType").val(externaldbArray[posicaoexternal].siteinfo_externaldbKwhmeterForSharingParty);

       $("#siteinfo_externaldbForConstructionPartyType").val(externaldbArray[posicaoexternal].siteinfo_externaldbForConstructionPartyType);

       $("#siteinfo_externaldbForVdcInternaldbType").val(externaldbArray[posicaoexternal].siteinfo_externaldbForVdcInternaldbType);

       $("#siteinfo_externaldbForSiteLightType").val(externaldbArray[posicaoexternal].siteinfo_externaldbForSiteLightType);

       $("#siteinfo_externaldbForAwLightType").val(externaldbArray[posicaoexternal].siteinfo_externaldbForAwLightType);

       $("#siteinfo_externaldbForMobileGenType").val(externaldbArray[posicaoexternal].siteinfo_externaldbForMobileGenType);

       $("#siteinfo_externaldbForGenPhaseMonitorType").val(externaldbArray[posicaoexternal].siteinfo_externaldbForGenPhaseMonitorType);

       $("#siteinfo_externaldbForControlFuseforGen").val(externaldbArray[posicaoexternal].siteinfo_externaldbForControlFuseforGen);

       $("#siteinfo_externaldbForControlFuseforGenType").val(externaldbArray[posicaoexternal].siteinfo_externaldbForControlFuseforGenType);

       $("#siteinfo_externaldbForFeedCable").val(externaldbArray[posicaoexternal].siteinfo_externaldbForFeedCable);

       $("#siteinfo_externaldbForCableToVm").val(externaldbArray[posicaoexternal].siteinfo_externaldbForCableToVm);

       $("#siteinfo_externaldbAwlSurgeArrestor").val(externaldbArray[posicaoexternal].siteinfo_externaldbAwlSurgeArrestor);

       $("#siteinfo_externaldbAwlSurgeArrestorType").val(externaldbArray[posicaoexternal].siteinfo_externaldbAwlSurgeArrestorType);

       $("#siteinfo_externaldbCurrentMonitor").val(externaldbArray[posicaoexternal].siteinfo_externaldbCurrentMonitor);

       $("#siteinfo_externaldbCurrentMonitorType").val(externaldbArray[posicaoexternal].siteinfo_externaldbCurrentMonitorType);

       $("#siteinfo_externaldbChangeContactors").val(externaldbArray[posicaoexternal].siteinfo_externaldbChangeContactors);

       $("#siteinfo_externaldbChangeContactorsType").val(externaldbArray[posicaoexternal].siteinfo_externaldbChangeContactorsType);

       $("#siteinfo_externaldbneutralbarsqty").val(externaldbArray[posicaoexternal].siteinfo_externaldbneutralbarsqty);
       $("#siteinfo_externaldbneutralbarsqty").siblings('label').addClass('active');

       $("#siteinfo_externalPowerMonitorRelay").val(externaldbArray[posicaoexternal].siteinfo_externalPowerMonitorRelay);
       $("#siteinfo_externalPowerMonitorRelay").siblings('label').addClass('active');

       $("#siteinfo_externaldbSurgeArrestors").val(externaldbArray[posicaoexternal].siteinfo_externaldbSurgeArrestors);
       $("#siteinfo_externaldbSurgeArrestors").siblings('label').addClass('active');

       $("#siteinfo_externaldbCbForSharingParty").val(externaldbArray[posicaoexternal].siteinfo_externaldbCbForSharingParty);
       $("#siteinfo_externaldbCbForSharingParty").siblings('label').addClass('active');

       $("#siteinfo_externaldbCbForSharingParty").val(externaldbArray[posicaoexternal].siteinfo_externaldbCbForSharingParty);
       $("#siteinfo_externaldbCbForSharingParty").siblings('label').addClass('active');

       $("#siteinfo_externaldbKwhmeterForSharingParty").val(externaldbArray[posicaoexternal].siteinfo_externaldbKwhmeterForSharingParty);
       $("#siteinfo_externaldbKwhmeterForSharingParty").siblings('label').addClass('active');

       $("#siteinfo_externaldbForConstructionParty").val(externaldbArray[posicaoexternal].siteinfo_externaldbForConstructionParty);
       $("#siteinfo_externaldbForConstructionParty").siblings('label').addClass('active');

       $("#siteinfo_externaldbForConstructionPartyType").val(externaldbArray[posicaoexternal].siteinfo_externaldbForConstructionPartyType);
       $("#siteinfo_externaldbForConstructionPartyType").siblings('label').addClass('active');

       $("#siteinfo_externaldbForVdcInternaldb").val(externaldbArray[posicaoexternal].siteinfo_externaldbForVdcInternaldb);
       $("#siteinfo_externaldbForVdcInternaldb").siblings('label').addClass('active');

       $("#siteinfo_externaldbForSiteLight").val(externaldbArray[posicaoexternal].siteinfo_externaldbForSiteLight);
       $("#siteinfo_externaldbForSiteLight").siblings('label').addClass('active');

       $("#siteinfo_externaldbForAwLight").val(externaldbArray[posicaoexternal].siteinfo_externaldbForAwLight);
       $("#siteinfo_externaldbForAwLight").siblings('label').addClass('active');

       $("#siteinfo_externaldbForMobileGen").val(externaldbArray[posicaoexternal].siteinfo_externaldbForMobileGen);
       $("#siteinfo_externaldbForMobileGen").siblings('label').addClass('active');

       $("#siteinfo_externaldbForGenPhaseMonitor").val(externaldbArray[posicaoexternal].siteinfo_externaldbForGenPhaseMonitor);
       $("#siteinfo_externaldbForGenPhaseMonitor").siblings('label').addClass('active');

       $("#siteinfo_externaldbForControlFuseRating").val(externaldbArray[posicaoexternal].siteinfo_externaldbForControlFuseRating);
       $("#siteinfo_externaldbForControlFuseRating").siblings('label').addClass('active');

       $("#siteinfo_externaldbForFeedCableLength").val(externaldbArray[posicaoexternal].siteinfo_externaldbForFeedCableLength);
       $("#siteinfo_externaldbForFeedCableLength").siblings('label').addClass('active');

       $("#siteinfo_externaldbForCableToVmLength").val(externaldbArray[posicaoexternal].siteinfo_externaldbForCableToVmLength);
       $("#siteinfo_externaldbForCableToVmLength").siblings('label').addClass('active');

       $("#siteinfo_externaldbAwlSurgeArrestorQty").val(externaldbArray[posicaoexternal].siteinfo_externaldbAwlSurgeArrestorQty);
       $("#siteinfo_externaldbAwlSurgeArrestorQty").siblings('label').addClass('active');
      
      externaldbArray.splice(posicaoexternal, 1);
      linha.remove();
      console.log(externaldbArray);


      $('#siteinfoexternaldbinfo_yes_btn_modal').addClass('hide');
      $('#siteinfoexternaldbinfo_update_btn_modal').removeClass('hide');
      $("#siteinfoexternaldbinfo_modal").openModal({dismissible:false});
      $('#siteinfoexternaldbinfo_update_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();
          

          var externaldbObject = {};

          var siteinfo_internaldb=$("input[name='siteinfo_externaldb']:checked").val();
        console.log(siteinfo_internaldb);

        var siteinfo_externaldbtype=$("#siteinfo_externaldbtype").val();
        externaldbObject.siteinfo_externaldbtype = siteinfo_externaldbtype;

        var siteinfo_externaldbSharing=$("#siteinfo_externaldbSharing").val();
        externaldbObject.siteinfo_externaldbSharing = siteinfo_externaldbSharing;

        var siteinfo_externaldbPhase=$("#siteinfo_externaldbPhase").val();
        externaldbObject.siteinfo_externaldbPhase = siteinfo_externaldbPhase;

        var siteinfo_externaldbGeneratorPlug=$("#siteinfo_externaldbGeneratorPlug").val();
        externaldbObject.siteinfo_externaldbGeneratorPlug = siteinfo_externaldbGeneratorPlug;

        var siteinfo_externaldbmainIncomingIsolator=$("#siteinfo_externaldbmainIncomingIsolator").val();
        externaldbObject.siteinfo_externaldbmainIncomingIsolator = siteinfo_externaldbmainIncomingIsolator;

        var siteinfo_externaldbneutralbarsqty=$("#siteinfo_externaldbneutralbarsqty").val();
        externaldbObject.siteinfo_externaldbneutralbarsqty = siteinfo_externaldbneutralbarsqty;

        var siteinfo_externalPowerMonitorRelay=$("#siteinfo_externalPowerMonitorRelay").val();
        externaldbObject.siteinfo_externalPowerMonitorRelay = siteinfo_externalPowerMonitorRelay;

        var siteinfo_externalPowerMonitorRelayType=$("#siteinfo_externalPowerMonitorRelayType").val();
        externaldbObject.siteinfo_externalPowerMonitorRelayType = siteinfo_externalPowerMonitorRelayType;

        var siteinfo_externaldbSurgeArrestors=$("#siteinfo_externaldbSurgeArrestors").val();
        externaldbObject.siteinfo_externaldbSurgeArrestors = siteinfo_externaldbSurgeArrestors;

        var siteinfo_externaldbSurgeArrestorsType=$("#siteinfo_externaldbSurgeArrestorsType").val();
        externaldbObject.siteinfo_externaldbSurgeArrestorsType = siteinfo_externaldbSurgeArrestorsType;

        var siteinfo_externaldbCbForSharingParty=$("#siteinfo_externaldbCbForSharingParty").val();
        externaldbObject.siteinfo_externaldbCbForSharingParty = siteinfo_externaldbCbForSharingParty;

        var siteinfo_externaldbCbForSharingPartyType=$("#siteinfo_externaldbCbForSharingPartyType").val();
        externaldbObject.siteinfo_externaldbCbForSharingPartyType = siteinfo_externaldbCbForSharingPartyType;

        var siteinfo_externaldbKwhmeterForSharingParty=$("#siteinfo_externaldbKwhmeterForSharingParty").val();
        externaldbObject.siteinfo_externaldbKwhmeterForSharingParty = siteinfo_externaldbKwhmeterForSharingParty;

        var siteinfo_externaldbKwhmeterForSharingPartyType=$("#siteinfo_externaldbKwhmeterForSharingPartyType").val();
        externaldbObject.siteinfo_externaldbKwhmeterForSharingPartyType = siteinfo_externaldbKwhmeterForSharingPartyType;

        var siteinfo_externaldbForConstructionParty=$("#siteinfo_externaldbForConstructionParty").val();
        externaldbObject.siteinfo_externaldbForConstructionParty = siteinfo_externaldbForConstructionParty;

        var siteinfo_externaldbForConstructionPartyType=$("#siteinfo_externaldbForConstructionPartyType").val();
        externaldbObject.siteinfo_externaldbForConstructionPartyType = siteinfo_externaldbForConstructionPartyType;

        var siteinfo_externaldbForVdcInternaldb=$("#siteinfo_externaldbForVdcInternaldb").val();
        externaldbObject.siteinfo_externaldbForVdcInternaldb = siteinfo_externaldbForVdcInternaldb;

        var siteinfo_externaldbForVdcInternaldbType=$("#siteinfo_externaldbForVdcInternaldbType").val();
        externaldbObject.siteinfo_externaldbForVdcInternaldbType = siteinfo_externaldbForVdcInternaldbType;

        var siteinfo_externaldbForSiteLight=$("#siteinfo_externaldbForSiteLight").val();
        externaldbObject.siteinfo_externaldbForSiteLight = siteinfo_externaldbForSiteLight;

        var siteinfo_externaldbForSiteLightType=$("#siteinfo_externaldbForSiteLightType").val();
        externaldbObject.siteinfo_externaldbForSiteLightType = siteinfo_externaldbForSiteLightType;

        var siteinfo_externaldbForAwLight=$("#siteinfo_externaldbForAwLight").val();
        externaldbObject.siteinfo_externaldbForAwLight = siteinfo_externaldbForAwLight;

        var siteinfo_externaldbForAwLightType=$("#siteinfo_externaldbForAwLightType").val();
        externaldbObject.siteinfo_externaldbForAwLightType = siteinfo_externaldbForAwLightType;

        var siteinfo_externaldbForMobileGen=$("#siteinfo_externaldbForMobileGen").val();
        externaldbObject.siteinfo_externaldbForMobileGen = siteinfo_externaldbForMobileGen;

        var siteinfo_externaldbForMobileGenType=$("#siteinfo_externaldbForMobileGenType").val();
        externaldbObject.siteinfo_externaldbForMobileGenType = siteinfo_externaldbForMobileGenType;

        var siteinfo_externaldbForGenPhaseMonitor=$("#siteinfo_externaldbForGenPhaseMonitor").val();
        externaldbObject.siteinfo_externaldbForGenPhaseMonitor = siteinfo_externaldbForGenPhaseMonitor;

        var siteinfo_externaldbForGenPhaseMonitorType=$("#siteinfo_externaldbForGenPhaseMonitorType").val();
        externaldbObject.siteinfo_externaldbForGenPhaseMonitorType = siteinfo_externaldbForGenPhaseMonitorType;

        var siteinfo_externaldbForControlFuseforGen=$("#siteinfo_externaldbForControlFuseforGen").val();
        externaldbObject.siteinfo_externaldbForControlFuseforGen = siteinfo_externaldbForControlFuseforGen;

        var siteinfo_externaldbForControlFuseforGenType=$("#siteinfo_externaldbForControlFuseforGenType").val();
        externaldbObject.siteinfo_externaldbForControlFuseforGenType = siteinfo_externaldbForControlFuseforGenType;

        var siteinfo_externaldbForControlFuseRating=$("#siteinfo_externaldbForControlFuseRating").val();
        externaldbObject.siteinfo_externaldbForControlFuseRating = siteinfo_externaldbForControlFuseRating;

        var siteinfo_externaldbForFeedCable=$("#siteinfo_externaldbForFeedCable").val();
        externaldbObject.siteinfo_externaldbForFeedCable = siteinfo_externaldbForFeedCable;

        var siteinfo_externaldbForFeedCableLength=$("#siteinfo_externaldbForFeedCableLength").val();
        externaldbObject.siteinfo_externaldbForFeedCableLength = siteinfo_externaldbForFeedCableLength;

        var siteinfo_externaldbForCableToVm=$("#siteinfo_externaldbForCableToVm").val();
        externaldbObject.siteinfo_externaldbForCableToVm = siteinfo_externaldbForCableToVm;

        var siteinfo_externaldbForCableToVmLength=$("#siteinfo_externaldbForCableToVmLength").val();
        externaldbObject.siteinfo_externaldbForCableToVmLength = siteinfo_externaldbForCableToVmLength;

        var siteinfo_externaldbAwlSurgeArrestor=$("#siteinfo_externaldbAwlSurgeArrestor").val();
        externaldbObject.siteinfo_externaldbAwlSurgeArrestor = siteinfo_externaldbAwlSurgeArrestor;

        var siteinfo_externaldbAwlSurgeArrestorType=$("#siteinfo_externaldbAwlSurgeArrestorType").val();
        externaldbObject.siteinfo_externaldbAwlSurgeArrestorType = siteinfo_externaldbAwlSurgeArrestorType;

        var siteinfo_externaldbAwlSurgeArrestorQty=$("#siteinfo_externaldbAwlSurgeArrestorQty").val();
        externaldbObject.siteinfo_externaldbAwlSurgeArrestorQty = siteinfo_externaldbAwlSurgeArrestorQty;

        var siteinfo_externaldbCurrentMonitor=$("#siteinfo_externaldbCurrentMonitor").val();
        externaldbObject.siteinfo_externaldbCurrentMonitor = siteinfo_externaldbCurrentMonitor;

        var siteinfo_externaldbCurrentMonitorType=$("#siteinfo_externaldbCurrentMonitorType").val();
        externaldbObject.siteinfo_externaldbCurrentMonitorType = siteinfo_externaldbCurrentMonitorType;

        var siteinfo_externaldbChangeContactors=$("#siteinfo_externaldbChangeContactors").val();
        externaldbObject.siteinfo_externaldbChangeContactors = siteinfo_externaldbChangeContactors;

        var siteinfo_externaldbChangeContactors=$("#siteinfo_externaldbChangeContactors").val();
        externaldbObject.siteinfo_externaldbChangeContactors = siteinfo_externaldbChangeContactors;

        console.log(externaldbObject);

          $('.mostrartabelaExternal').removeClass('hide');
          var mt = document.getElementById("mostrartabelaExternal");
          externaldbArray.push(externaldbObject);
          console.log(externaldbArray);

          mt.innerHTML += '<tr><td>'+ siteinfo_externaldbtype +'</td><td>'+ siteinfo_externaldbSharing +'</td><td>'+siteinfo_externaldbPhase+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


         $('#siteinfoexternaldbinfo_modal').closeModal();
                  
      });

  });


    //DISTRIBUTION RACK
    $('.adicionardistributionrack').click(function(){

      var distributionrackObject = {};

        var siteinfo_distributionRackInstalled=$("input[name='siteinfo_distributionRackInstalled']:checked").val();
        console.log(siteinfo_distributionRackInstalled);

        var siteinfo_distribuitionRackInverters=$("#siteinfo_distribuitionRackInverters").val();
        distributionrackObject.siteinfo_distribuitionRackInverters = siteinfo_distribuitionRackInverters;

        var siteinfo_distribuitionRackInvertersType=$("#siteinfo_distribuitionRackInvertersType").val();
        distributionrackObject.siteinfo_distribuitionRackInvertersType = siteinfo_distribuitionRackInvertersType;

        var siteinfo_distribuitionRackVaRating=$("#siteinfo_distribuitionRackVaRating").val();
        distributionrackObject.siteinfo_distribuitionRackVaRating = siteinfo_distribuitionRackVaRating;

        var siteinfo_distribuitionRackInvertQty=$("#siteinfo_distribuitionRackInvertQty").val();
        distributionrackObject.siteinfo_distribuitionRackInvertQty = siteinfo_distribuitionRackInvertQty;

        var siteinfo_distribuitionRackDcInput=$("#siteinfo_distribuitionRackDcInput").val();
        distributionrackObject.siteinfo_distribuitionRackDcInput = siteinfo_distribuitionRackDcInput;

        var siteinfo_distribuitionRackACOutput=$("#siteinfo_distribuitionRackACOutput").val();
        distributionrackObject.siteinfo_distribuitionRackACOutput = siteinfo_distribuitionRackACOutput;

        var siteinfo_distribuitionRackRedudancyctrller=$("#siteinfo_distribuitionRackRedudancyctrller").val();
        distributionrackObject.siteinfo_distribuitionRackRedudancyctrller = siteinfo_distribuitionRackRedudancyctrller;
        

        console.log(distributionrackObject);

        $('.mostrartabelaDistribution').removeClass('hide');
        var mt = document.getElementById("mostrarTabelaDistributionRack");
        // console.log(generatorArray);
        distributionrackArray.push(distributionrackObject);

        mt.innerHTML += '<tr><td>'+ siteinfo_distribuitionRackInvertersType +'</td><td>'+ siteinfo_distribuitionRackVaRating +'</td><td>'+siteinfo_distribuitionRackRedudancyctrller+'</td><td>'+siteinfo_distribuitionRackInvertQty+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


       $('#siteinfodistributionrackinfo_modal').closeModal();

    });

    $(".mostrarTabelaDistributionRack").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      console.log(distributionrackArray);
      var posicaoDistributionRack = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      distributionrackArray.splice(posicaoDistributionRack, 1);
      $(this).parent('td').parent('tr').remove();
      //console.log(siteinfo_gsmcabArray);
      if(distributionrackArray.length == 0){
        $('.mostrartabelaDistribution').addClass('hide');
      }
    });


    $(".mostrarTabelaDistributionRack").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr');
      var posicaodistributionrack = $(this).parent('td').parent('tr')[0].rowIndex - 1;

      
      $("#siteinfo_acmanufacturer").val(distributionrackArray[posicaodistributionrack].siteinfo_acmanufacturer);
      $("#siteinfo_actype").val(distributionrackArray[posicaodistributionrack].siteinfo_actype);

      $("#siteinfo_distribuitionRackInverters").val(distributionrackArray[posicaodistributionrack].siteinfo_distribuitionRackInverters);

        $("#siteinfo_distribuitionRackInvertersType").val(distributionrackArray[posicaodistributionrack].siteinfo_distribuitionRackInvertersType);

        $("#siteinfo_distribuitionRackVaRating").val(distributionrackArray[posicaodistributionrack].siteinfo_distribuitionRackVaRating);
        $("#siteinfo_distribuitionRackVaRating").siblings('label').addClass('active');

        $("#siteinfo_distribuitionRackInvertQty").val(distributionrackArray[posicaodistributionrack].siteinfo_distribuitionRackInvertQty);
        $("#siteinfo_distribuitionRackInvertQty").siblings('label').addClass('active');

        $("#siteinfo_distribuitionRackDcInput").val(distributionrackArray[posicaodistributionrack].siteinfo_distribuitionRackDcInput);
        $("#siteinfo_distribuitionRackDcInput").siblings('label').addClass('active');

        $("#siteinfo_distribuitionRackACOutput").val(distributionrackArray[posicaodistributionrack].siteinfo_distribuitionRackACOutput);
        $("#siteinfo_distribuitionRackACOutput").siblings('label').addClass('active');

        $("#siteinfo_distribuitionRackRedudancyctrller").val(distributionrackArray[posicaodistributionrack].siteinfo_distribuitionRackRedudancyctrller);
      
      distributionrackArray.splice(posicaodistributionrack, 1);
      linha.remove();
      console.log(distributionrackArray);


      $('#siteinfodistributionrackinfo_yes_btn_modal').addClass('hide');
      $('#siteinfodistributionrackinfo_update_btn_modal').removeClass('hide');
      $("#siteinfodistributionrackinfo_modal").openModal({dismissible:false});
      $('#siteinfodistributionrackinfo_update_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();
          

          var distributionrackObject = {};

          var siteinfo_distribuitionRackInverters=$("#siteinfo_distribuitionRackInverters").val();
          distributionrackObject.siteinfo_distribuitionRackInverters = siteinfo_distribuitionRackInverters;

          var siteinfo_distribuitionRackInvertersType=$("#siteinfo_distribuitionRackInvertersType").val();
          distributionrackObject.siteinfo_distribuitionRackInvertersType = siteinfo_distribuitionRackInvertersType;

          var siteinfo_distribuitionRackVaRating=$("#siteinfo_distribuitionRackVaRating").val();
          distributionrackObject.siteinfo_distribuitionRackVaRating = siteinfo_distribuitionRackVaRating;

          var siteinfo_distribuitionRackInvertQty=$("#siteinfo_distribuitionRackInvertQty").val();
          distributionrackObject.siteinfo_distribuitionRackInvertQty = siteinfo_distribuitionRackInvertQty;

          var siteinfo_distribuitionRackDcInput=$("#siteinfo_distribuitionRackDcInput").val();
          distributionrackObject.siteinfo_distribuitionRackDcInput = siteinfo_distribuitionRackDcInput;

          var siteinfo_distribuitionRackACOutput=$("#siteinfo_distribuitionRackACOutput").val();
          distributionrackObject.siteinfo_distribuitionRackACOutput = siteinfo_distribuitionRackACOutput;

          var siteinfo_distribuitionRackRedudancyctrller=$("#siteinfo_distribuitionRackRedudancyctrller").val();
          distributionrackObject.siteinfo_distribuitionRackRedudancyctrller = siteinfo_distribuitionRackRedudancyctrller;

          console.log(distributionrackObject);

          $('.mostrartabelaDistribution').removeClass('hide');
          var mt = document.getElementById("mostrarTabelaDistributionRack");
          distributionrackArray.push(distributionrackObject);
          console.log(distributionrackArray);

          mt.innerHTML += '<tr><td>'+ siteinfo_distribuitionRackInvertersType +'</td><td>'+ siteinfo_distribuitionRackVaRating +'</td><td>'+siteinfo_distribuitionRackRedudancyctrller+'</td><td>'+siteinfo_distribuitionRackInvertQty+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


         $('#siteinfodistributionrackinfo_modal').closeModal();
                  
      });

  });


     //TRANSMISSION CABINET
     $('.adicionartransmissioncabinet').click(function(){

      var transmissioncabObject = {};

        var siteinfo_transmissioncabInstalled=$("input[name='siteinfo_transmissioncab']:checked").val();
        console.log(siteinfo_transmissioncabInstalled);

        // var siteinfo_transmissioncabInstalled=$("#siteinfo_transmissioncabInstalled").val();
        // transmissioncabObject.siteinfo_transmissioncabInstalled = siteinfo_transmissioncabInstalled;

        var siteinfo_transmissioncabType=$("#siteinfo_transmissioncabType").val();
        transmissioncabObject.siteinfo_transmissioncabType = siteinfo_transmissioncabType;

        var siteinfo_transmissioncabServiceProvider=$("#siteinfo_transmissioncabServiceProvider").val();
        transmissioncabObject.siteinfo_transmissioncabServiceProvider = siteinfo_transmissioncabServiceProvider;

        var siteinfo_transmissioncabQty=$("#siteinfo_transmissioncabQty").val();
        transmissioncabObject.siteinfo_transmissioncabQty = siteinfo_transmissioncabQty;
        

        console.log(transmissioncabObject);

        $('.mostrartabelaTransmission').removeClass('hide');
        var mt = document.getElementById("mostrartabelaTransmissionCab");
        // console.log(generatorArray);
        transmissioncabArray.push(transmissioncabObject);

        mt.innerHTML += '<tr><td>'+ siteinfo_transmissioncabType +'</td><td>'+ siteinfo_transmissioncabServiceProvider +'</td><td>'+siteinfo_transmissioncabQty+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


       $('#siteinfotransmissioncabinfo_modal').closeModal();

    });


    $(".mostrartabelaTransmissionCab").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      console.log(transmissioncabArray);
      var posicaoTransmissioncab = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      transmissioncabArray.splice(posicaoTransmissioncab, 1);
      $(this).parent('td').parent('tr').remove();
      //console.log(siteinfo_gsmcabArray);
      if(transmissioncabArray.length == 0){
        $('.mostrartabelaTransmission').addClass('hide');
      }
    });


    $(".mostrartabelaTransmissionCab").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr');
      var posicaotransmissioncab = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      
      $("#siteinfo_transmissioncabInstalled").val("Yes");
      $("#siteinfo_transmissioncabType").val(transmissioncabArray[posicaotransmissioncab].siteinfo_transmissioncabType);
      $("#siteinfo_transmissioncabServiceProvider").val(transmissioncabArray[posicaotransmissioncab].siteinfo_transmissioncabServiceProvider);

      $("#siteinfo_transmissioncabQty").val(transmissioncabArray[posicaotransmissioncab].siteinfo_transmissioncabQty);
      $("#siteinfo_transmissioncabQty").siblings('label').addClass('active');
      
      transmissioncabArray.splice(posicaotransmissioncab, 1);
      linha.remove();
      console.log(transmissioncabArray);


      $('#siteinfotransmissioncabinfo_yes_btn_modal').addClass('hide');
      $('#siteinfotransmissioncabinfo_update_btn_modal').removeClass('hide');
      $("#siteinfotransmissioncabinfo_modal").openModal({dismissible:false});
      $('#siteinfotransmissioncabinfo_update_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();
          

          var transmissioncabObject = {};

          var siteinfo_transmissioncabType=$("#siteinfo_transmissioncabType").val();
        transmissioncabObject.siteinfo_transmissioncabType = siteinfo_transmissioncabType;

        var siteinfo_transmissioncabServiceProvider=$("#siteinfo_transmissioncabServiceProvider").val();
        transmissioncabObject.siteinfo_transmissioncabServiceProvider = siteinfo_transmissioncabServiceProvider;

        var siteinfo_transmissioncabQty=$("#siteinfo_transmissioncabQty").val();
        transmissioncabObject.siteinfo_transmissioncabQty = siteinfo_transmissioncabQty;

        console.log(transmissioncabObject);
        
          $('.mostrartabelaTransmission').removeClass('hide');
          var mt = document.getElementById("mostrartabelaTransmission");
          transmissioncabArray.push(transmissioncabObject);
          console.log(transmissioncabArray);

          mt.innerHTML += '<tr><td>'+ siteinfo_transmissioncabType +'</td><td>'+ siteinfo_transmissioncabServiceProvider +'</td><td>'+siteinfo_transmissioncabQty+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


         $('#siteinfotransmissioncabinfo_modal').closeModal();
                  
      });

  });



    //ADDITIONAL TRANSFORMERS
    $('.adicionaradditionaltransformer').click(function(){

      var adicionaradditionaltransformerObject = {};

        var siteinfo_additionaltransformers=$("input[name='siteinfo_additionaltransformers']:checked").val();
        console.log(siteinfo_additionaltransformers);

        var siteinfo_additionaltransformersType=$("#siteinfo_additionaltransformersType").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersType = siteinfo_additionaltransformersType;

        var siteinfo_additionaltransformersSerialNo=$("#siteinfo_additionaltransformersSerialNo").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersSerialNo = siteinfo_additionaltransformersSerialNo;

        var siteinfo_additionaltransformersManufacturedDate=$("#siteinfo_additionaltransformersManufacturedDate").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersManufacturedDate = siteinfo_additionaltransformersManufacturedDate;

        var siteinfo_additionaltransformersCable=$("#siteinfo_additionaltransformersCable").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersCable = siteinfo_additionaltransformersCable;

        var siteinfo_additionaltransformersCableLength=$("#siteinfo_additionaltransformersCableLength").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersCableLength = siteinfo_additionaltransformersCableLength;

        var siteinfo_additionaltransformersdataFrequency=$("#siteinfo_additionaltransformersdataFrequency").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataFrequency = siteinfo_additionaltransformersdataFrequency;

        var siteinfo_additionaltransformersdataRating=$("#siteinfo_additionaltransformersdataRating").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataRating = siteinfo_additionaltransformersdataRating;

        var siteinfo_additionaltransformersdataPrimaryVoltage=$("#siteinfo_additionaltransformersdataPrimaryVoltage").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataPrimaryVoltage = siteinfo_additionaltransformersdataPrimaryVoltage;

        var siteinfo_additionaltransformersdataPrimaryAmpere=$("#siteinfo_additionaltransformersdataPrimaryAmpere").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataPrimaryAmpere = siteinfo_additionaltransformersdataPrimaryAmpere;

        var siteinfo_additionaltransformersdataSecondaryVoltage=$("#siteinfo_additionaltransformersdataSecondaryVoltage").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataSecondaryVoltage = siteinfo_additionaltransformersdataSecondaryVoltage;

        var siteinfo_additionaltransformersdataSecondaryAmpere=$("#siteinfo_additionaltransformersdataSecondaryAmpere").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataSecondaryAmpere = siteinfo_additionaltransformersdataSecondaryAmpere;

        var siteinfo_additionaltransformersdataImpendance=$("#siteinfo_additionaltransformersdataImpendance").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataImpendance = siteinfo_additionaltransformersdataImpendance;

        var siteinfo_additionaltransformersdataSymbol=$("#siteinfo_additionaltransformersdataSymbol").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataSymbol = siteinfo_additionaltransformersdataSymbol;

        var siteinfo_additionaltransformersdataOtherInfo=$("#siteinfo_additionaltransformersdataOtherInfo").val();
        adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataOtherInfo = siteinfo_additionaltransformersdataOtherInfo;


        console.log(adicionaradditionaltransformerObject);

        $('.mostrartabelaAdditionalTransformers').removeClass('hide');
        var mt = document.getElementById("mostrarTabelaAdditionaltransformer");
        // console.log(generatorArray);
        additionaltransformersArray.push(adicionaradditionaltransformerObject);

        mt.innerHTML += '<tr><td>'+ siteinfo_additionaltransformersSerialNo +'</td><td>'+ siteinfo_additionaltransformersType+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


       $('#siteinfoadditionaltransformersinfo_modal').closeModal();

    });

    $(".mostrarTabelaAdditionaltransformer").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      console.log(additionaltransformersArray);
      var posicaoAdditionalTrans = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      additionaltransformersArray.splice(posicaoAdditionalTrans, 1);
      $(this).parent('td').parent('tr').remove();
      //console.log(siteinfo_gsmcabArray);
      if(additionaltransformersArray.length == 0){
        $('.mostrartabelaAdditionalTransformers').addClass('hide');
      }
    });


    $(".mostrarTabelaAdditionaltransformer").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr');
      var posicaoadditionaltransf = $(this).parent('td').parent('tr')[0].rowIndex - 1;

      
      $("#siteinfo_additionaltransformersSerialNo").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersSerialNo);
      $("#siteinfo_additionaltransformersSerialNo").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersType").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersType);
      $("#siteinfo_additionaltransformersType").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersManufacturedDate").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersManufacturedDate);
      $("#siteinfo_additionaltransformersManufacturedDate").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersCableLength").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersCableLength);
      $("#siteinfo_additionaltransformersCableLength").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataFrequency").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataFrequency);
      $("#siteinfo_additionaltransformersdataFrequency").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataRating").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataRating);
      $("#siteinfo_additionaltransformersdataRating").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataPrimaryVoltage").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataPrimaryVoltage);
      $("#siteinfo_additionaltransformersdataPrimaryVoltage").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataPrimaryAmpere").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataPrimaryAmpere);
      $("#siteinfo_additionaltransformersdataPrimaryAmpere").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataSecondaryVoltage").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataSecondaryVoltage);
      $("#siteinfo_additionaltransformersdataSecondaryVoltage").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataSecondaryAmpere").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataSecondaryAmpere);
      $("#siteinfo_additionaltransformersdataSecondaryAmpere").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataImpendance").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataImpendance);
      $("#siteinfo_additionaltransformersdataImpendance").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataSymbol").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataSymbol);
      $("#siteinfo_additionaltransformersdataSymbol").siblings('label').addClass('active');

      $("#siteinfo_additionaltransformersdataOtherInfo").val(additionaltransformersArray[posicaoadditionaltransf].siteinfo_additionaltransformersdataOtherInfo);
      $("#siteinfo_additionaltransformersdataOtherInfo").siblings('label').addClass('active');
      
      additionaltransformersArray.splice(posicaoadditionaltransf, 1);
      linha.remove();
      console.log(additionaltransformersArray);


      $('#siteinfoadditionaltransformersinfo_yes_btn_modal').addClass('hide');
      $('#siteinfoadditionaltransformersinfo_update_btn_modal').removeClass('hide');
      $("#siteinfoadditionaltransformersinfo_modal").openModal({dismissible:false});
      $('#siteinfoadditionaltransformersinfo_update_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();
          

          var adicionaradditionaltransformerObject = {};

          var siteinfo_additionaltransformersType=$("#siteinfo_additionaltransformersType").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersType = siteinfo_additionaltransformersType;
  
          var siteinfo_additionaltransformersSerialNo=$("#siteinfo_additionaltransformersSerialNo").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersSerialNo = siteinfo_additionaltransformersSerialNo;
  
          var siteinfo_additionaltransformersManufacturedDate=$("#siteinfo_additionaltransformersManufacturedDate").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersManufacturedDate = siteinfo_additionaltransformersManufacturedDate;
  
          var siteinfo_additionaltransformersCable=$("#siteinfo_additionaltransformersCable").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersCable = siteinfo_additionaltransformersCable;
  
          var siteinfo_additionaltransformersCableLength=$("#siteinfo_additionaltransformersCableLength").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersCableLength = siteinfo_additionaltransformersCableLength;
  
          var siteinfo_additionaltransformersdataFrequency=$("#siteinfo_additionaltransformersdataFrequency").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataFrequency = siteinfo_additionaltransformersdataFrequency;
  
          var siteinfo_additionaltransformersdataRating=$("#siteinfo_additionaltransformersdataRating").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataRating = siteinfo_additionaltransformersdataRating;
  
          var siteinfo_additionaltransformersdataPrimaryVoltage=$("#siteinfo_additionaltransformersdataPrimaryVoltage").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataPrimaryVoltage = siteinfo_additionaltransformersdataPrimaryVoltage;
  
          var siteinfo_additionaltransformersdataPrimaryAmpere=$("#siteinfo_additionaltransformersdataPrimaryAmpere").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataPrimaryAmpere = siteinfo_additionaltransformersdataPrimaryAmpere;
  
          var siteinfo_additionaltransformersdataSecondaryVoltage=$("#siteinfo_additionaltransformersdataSecondaryVoltage").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataSecondaryVoltage = siteinfo_additionaltransformersdataSecondaryVoltage;
  
          var siteinfo_additionaltransformersdataSecondaryAmpere=$("#siteinfo_additionaltransformersdataSecondaryAmpere").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataSecondaryAmpere = siteinfo_additionaltransformersdataSecondaryAmpere;
  
          var siteinfo_additionaltransformersdataImpendance=$("#siteinfo_additionaltransformersdataImpendance").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataImpendance = siteinfo_additionaltransformersdataImpendance;
  
          var siteinfo_additionaltransformersdataSymbol=$("#siteinfo_additionaltransformersdataSymbol").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataSymbol = siteinfo_additionaltransformersdataSymbol;
  
          var siteinfo_additionaltransformersdataOtherInfo=$("#siteinfo_additionaltransformersdataOtherInfo").val();
          adicionaradditionaltransformerObject.siteinfo_additionaltransformersdataOtherInfo = siteinfo_additionaltransformersdataOtherInfo;

          $('.mostrartabelaAdditionalTransformers').removeClass('hide');
          var mt = document.getElementById("mostrartabelaAdditionalTransformers");
          additionaltransformersArray.push(adicionaradditionaltransformerObject);
          console.log(additionaltransformersArray);

          mt.innerHTML += '<tr><td>'+ siteinfo_additionaltransformersSerialNo +'</td><td>'+ siteinfo_additionaltransformersType+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';

         $('#siteinfoadditionaltransformersinfo_modal').closeModal();
                  
      });

  });



  $(".carregarGeradoresSiteInfo").click(function(){

    var dadossiteinfo = JSON.parse($("#contain3").attr("detalhessiteinfo"));
    console.log(dadossiteinfo)
    generatorArray = dadossiteinfo[0].siteinfo_generatorArray;

    if(dadossiteinfo[0].siteinfo_generatorArray.length != 0){
      // var objGen = {};
      // objGen.siteinfo_generatorhours =
      // objGen.siteinfo_generatortype = 
      // objGen.siteinfo_generatoroutputkw
      // objGen.siteinfo_generatormodelno
      // objGen.siteinfo_generatorengineserialnumber
      // objGen.siteinfo_generatorenginecapacity
      // objGen.siteinfo_generatorstartertype
      // objGen.siteinfo_generatorfuelconsumption
      // generatorArray = dadossiteinfo[0].siteinfo_generatorArray;
      for(var j = 0; j < generatorArray.length; j++){

        delete generatorArray[j]._id;

      }
      
      console.log(generatorArray)
      $('.mostrarSiteInfoGeneratorInfo').removeClass('hide');
      $('.mostrartabelaGeradores').removeClass('hide');
    }

  });

  $('.adicionarAc').click(function(){

      var acObject = {};

      // var siteinfo_ac=$("input[name='siteinfo_ac']:checked").val();
      // acObject.siteinfo_ac = siteinfo_ac;

      var siteinfo_acmanufacturer=$("#siteinfo_acmanufacturer").val();
      acObject.siteinfo_acmanufacturer = siteinfo_acmanufacturer;

      var siteinfo_actype=$("#siteinfo_actype").val();
      acObject.siteinfo_actype = siteinfo_actype;

      var siteinfo_acmodel=$("#siteinfo_acmodel").val();
      acObject.siteinfo_acmodel = siteinfo_acmodel;

      var siteinfo_acnumber=$("#siteinfo_acnumber").val();
      acObject.siteinfo_acnumber = siteinfo_acnumber;

      var siteinfo_acserialnumber=$("#siteinfo_acserialnumber").val();
      acObject.siteinfo_acserialnumber = siteinfo_acserialnumber;

      var siteinfo_acbtu=$("#siteinfo_acbtu").val();
      acObject.siteinfo_acbtu = siteinfo_acbtu;

      var siteinfo_accageinstalled=$("#siteinfo_accageinstalled").val();
      acObject.siteinfo_accageinstalled = siteinfo_accageinstalled;

      var siteinfo_acsleeveinstalled=$("#siteinfo_acsleeveinstalled").val();
      acObject.siteinfo_acsleeveinstalled = siteinfo_acsleeveinstalled;

      var siteinfo_acunitcontrolltype=$("#siteinfo_acunitcontrolltype").val();
      acObject.siteinfo_acunitcontrolltype = siteinfo_acunitcontrolltype;

      var siteinfo_accontrollermodel=$("#siteinfo_accontrollermodel").val();
      acObject.siteinfo_accontrollermodel = siteinfo_accontrollermodel;

      $('.mostrartabelaAC').removeClass('hide');
      var mt = document.getElementById("mostrarTabelaAc");
      acArray.push(acObject);
      console.log(acArray);

      mt.innerHTML += '<tr><td>'+ siteinfo_acnumber +'</td><td>'+ siteinfo_actype +'</td><td>'+siteinfo_acmanufacturer+'</td><td>'+siteinfo_acmodel+'</td><td>'+ siteinfo_acbtu +'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


     $('#siteinfoacinfo_modal').closeModal();

  });

  $(".mostrarTabelaAc").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var posicaoac = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      acArray.splice(posicaoac, 1);
      $(this).parent('td').parent('tr').remove();
      console.log(acArray);
      if(acArray.length == 0){
        $('.mostrartabelaAC').addClass('hide');
      }
  });

   $(".mostrarTabelaAc").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr');
      var posicaoac = $(this).parent('td').parent('tr')[0].rowIndex - 1;

      
      $("#siteinfo_acmanufacturer").val(acArray[posicaoac].siteinfo_acmanufacturer);
      $("#siteinfo_actype").val(acArray[posicaoac].siteinfo_actype);

      $("#siteinfo_acmodel").val(acArray[posicaoac].siteinfo_acmodel);
      $("#siteinfo_acmodel").siblings('label').addClass('active');

      $("#siteinfo_acnumber").val(acArray[posicaoac].siteinfo_acnumber);
      $("#siteinfo_acnumber").siblings('label').addClass('active');

      $("#siteinfo_acserialnumber").val(acArray[posicaoac].siteinfo_acserialnumber);
      $("#siteinfo_acserialnumber").siblings('label').addClass('active');

      $("#siteinfo_acbtu").val(acArray[posicaoac].siteinfo_acbtu);
      $("#siteinfo_acbtu").siblings('label').addClass('active');

      $("#siteinfo_accageinstalled").val(acArray[posicaoac].siteinfo_accageinstalled);
      $("#siteinfo_acsleeveinstalled").val(acArray[posicaoac].siteinfo_acsleeveinstalled);
      $("#siteinfo_acunitcontrolltype").val(acArray[posicaoac].siteinfo_acunitcontrolltype);

      $("#siteinfo_accontrollermodel").val(acArray[posicaoac].siteinfo_accontrollermodel);
      $("#siteinfo_accontrollermodel").siblings('label').addClass('active');
      
      acArray.splice(posicaoac, 1);
      linha.remove();
      console.log(acArray);


      $('#siteinfoacinfo_yes_btn_modal').addClass('hide');
      $('#siteinfoacinfo_update_btn_modal').removeClass('hide');
      $("#siteinfoacinfo_modal").openModal({dismissible:false});
      $('#siteinfoacinfo_update_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();
          

          var acObject = {};

          var siteinfo_acmanufacturer=$("#siteinfo_acmanufacturer").val();
          acObject.siteinfo_acmanufacturer = siteinfo_acmanufacturer;

          var siteinfo_actype=$("#siteinfo_actype").val();
          acObject.siteinfo_actype = siteinfo_actype;

          var siteinfo_acmodel=$("#siteinfo_acmodel").val();
          acObject.siteinfo_acmodel = siteinfo_acmodel;

          var siteinfo_acnumber=$("#siteinfo_acnumber").val();
          acObject.siteinfo_acnumber = siteinfo_acnumber;

          var siteinfo_acserialnumber=$("#siteinfo_acserialnumber").val();
          acObject.siteinfo_acserialnumber = siteinfo_acserialnumber;

          var siteinfo_acbtu=$("#siteinfo_acbtu").val();
          acObject.siteinfo_acbtu = siteinfo_acbtu;

          var siteinfo_accageinstalled=$("#siteinfo_accageinstalled").val();
          acObject.siteinfo_accageinstalled = siteinfo_accageinstalled;

          var siteinfo_acsleeveinstalled=$("#siteinfo_acsleeveinstalled").val();
          acObject.siteinfo_acsleeveinstalled = siteinfo_acsleeveinstalled;

          var siteinfo_acunitcontrolltype=$("#siteinfo_acunitcontrolltype").val();
          acObject.siteinfo_acunitcontrolltype = siteinfo_acunitcontrolltype;

          var siteinfo_accontrollermodel=$("#siteinfo_accontrollermodel").val();
          acObject.siteinfo_accontrollermodel = siteinfo_accontrollermodel;

          $('.mostrartabelaAC').removeClass('hide');
          var mt = document.getElementById("mostrarTabelaAc");
          acArray.push(acObject);
          console.log(acArray);

          mt.innerHTML += '<tr><td>'+ siteinfo_acnumber +'</td><td>'+ siteinfo_actype +'</td><td>'+siteinfo_acmanufacturer+'</td><td>'+siteinfo_acmodel+'</td><td>'+ siteinfo_acbtu +'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';


         $('#siteinfoacinfo_modal').closeModal();
                  
    });

  });

  $(".carregarACSiteInfo").click(function(){

    var dadossiteinfo = JSON.parse($("#contain3").attr("detalhessiteinfo"));

    if(dadossiteinfo[0].siteinfo_acArray.length != 0){
      acArray = dadossiteinfo[0].siteinfo_acArray;
      console.log(acArray)
      $('.mostrarSiteInfoACInfo').removeClass('hide');
      $('.mostrartabelaAC').removeClass('hide');
    }

  });

   $('.adicionarRectCab').click(function(){

      var rectcabObject = {};

      var siteinfo_rectcabcabinetmodelno=$("#siteinfo_rectcabcabinetmodelno").val();
      rectcabObject.siteinfo_rectcabcabinetmodelno = siteinfo_rectcabcabinetmodelno;

      var siteinfo_rectcabcabinetnumber=$("#siteinfo_rectcabcabinetnumber").val();
      rectcabObject.siteinfo_rectcabcabinetnumber = siteinfo_rectcabcabinetnumber;

      var siteinfo_rectcabtype=$("#siteinfo_rectcabtype").val();
      rectcabObject.siteinfo_rectcabtype = siteinfo_rectcabtype;

      var siteinfo_rectcabinputtype=$("#siteinfo_rectcabinputtype").val();
      rectcabObject.siteinfo_rectcabinputtype = siteinfo_rectcabinputtype;

      var siteinfo_rectcabnobatteries=$("#siteinfo_rectcabnobatteries").val();
      rectcabObject.siteinfo_rectcabnobatteries = siteinfo_rectcabnobatteries;

      var siteinfo_rectcabbatterycapac=$("#siteinfo_rectcabbatterycapac").val();
      rectcabObject.siteinfo_rectcabbatterycapac = siteinfo_rectcabbatterycapac;

      //As novas cenas começam aqui
        // var siteinfo_rectcabcabinetmodelno=$("#siteinfo_rectcabcabinetmodelno").val();
        // rectcabObject.siteinfo_rectcabcabinetmodelno = siteinfo_rectcabcabinetmodelno;

        var siteinfo_rectcabcabinetType=$("#siteinfo_rectcabcabinetType").val();
        rectcabObject.siteinfo_rectcabcabinetType = siteinfo_rectcabcabinetType;

        var siteinfo_rectifierserialno=$("#siteinfo_rectifierserialno").val();
        rectcabObject.siteinfo_rectifierserialno = siteinfo_rectifierserialno;

        // var siteinfo_rectcabinputtype=$("#siteinfo_rectcabinputtype").val();
        // rectcabObject.siteinfo_rectcabinputtype = siteinfo_rectcabinputtype;

        var siteinfo_rectcabinetmodulestype=$("#siteinfo_rectcabinetmodulestype").val();
        rectcabObject.siteinfo_rectcabinetmodulestype = siteinfo_rectcabinetmodulestype;

        var siteinfo_rectcabinetmodulescontrollertype=$("#siteinfo_rectcabinetmodulescontrollertype").val();
        rectcabObject.siteinfo_rectcabinetmodulescontrollertype = siteinfo_rectcabinetmodulescontrollertype;

        var siteinfo_rectcabinetCircuitBreakerInputType=$("#siteinfo_rectcabinetCircuitBreakerInputType").val();
        rectcabObject.siteinfo_rectcabinetCircuitBreakerInputType = siteinfo_rectcabinetCircuitBreakerInputType;

        var siteinfo_rectcabinetCircuitBreakerLoadType=$("#siteinfo_rectcabinetCircuitBreakerLoadType").val();
        rectcabObject.siteinfo_rectcabinetCircuitBreakerLoadType = siteinfo_rectcabinetCircuitBreakerLoadType;

        var siteinfo_rectcabinetcircuitbreakerloadquantity=$("#siteinfo_rectcabinetcircuitbreakerloadquantity").val();
        rectcabObject.siteinfo_rectcabinetcircuitbreakerloadquantity = siteinfo_rectcabinetcircuitbreakerloadquantity;

        var siteinfo_rectcabinetcircuitbreakerbatteriestype=$("#siteinfo_rectcabinetcircuitbreakerbatteriestype").val();
        rectcabObject.siteinfo_rectcabinetcircuitbreakerbatteriestype = siteinfo_rectcabinetcircuitbreakerbatteriestype;

        var siteinfo_rectcabinetbatteryahcapacityCab1=$("#siteinfo_rectcabinetbatteryahcapacityCab1").val();
        rectcabObject.siteinfo_rectcabinetbatteryahcapacityCab1 = siteinfo_rectcabinetbatteryahcapacityCab1;

        // var siteinfo_rectcabnobatteries=$("#siteinfo_rectcabnobatteries").val();
        // rectcabObject.siteinfo_rectcabnobatteries = siteinfo_rectcabnobatteries;
        console.log(rectcabObject);
        var siteinfo_rectcabinetbatteryahcapacitycab=$("#siteinfo_rectcabinetbatteryahcapacitycab").val();
        rectcabObject.siteinfo_rectcabinetbatteryahcapacitycab = siteinfo_rectcabinetbatteryahcapacitycab;


      $('.mostrartabelaRectCab').removeClass('hide');
      var mt = document.getElementById("mostrartabelaRectGab");
      rectcabArray.push(rectcabObject);
      console.log(rectcabArray);

      mt.innerHTML += '<tr><td>'+ siteinfo_rectcabcabinetnumber +'</td><td>'+ siteinfo_rectcabtype +'</td><td>'+siteinfo_rectcabinputtype+'</td><td>'+siteinfo_rectcabnobatteries+'</td><td>'+siteinfo_rectcabbatterycapac+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';

      
     $('#siteinforectifierinfo_modal').closeModal();

  });

   $(".mostrartabelaRectGab").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var posicaorectcab = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      rectcabArray.splice(posicaorectcab, 1);
      $(this).parent('td').parent('tr').remove();
      console.log(rectcabArray);
      if(rectcabArray.length == 0){
        $('.mostrartabelaRectCab').addClass('hide');
      }
  });


   $(".mostrartabelaRectGab").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr');
      var posicaorectcab = $(this).parent('td').parent('tr')[0].rowIndex - 1;

      $("#siteinfo_rectcabcabinetmodelno").val(rectcabArray[posicaorectcab].siteinfo_rectcabcabinetmodelno);
      $("#siteinfo_rectcabcabinetmodelno").siblings('label').addClass('active');

      $("#siteinfo_rectcabcabinetnumber").val(rectcabArray[posicaorectcab].siteinfo_rectcabcabinetnumber);
      $("#siteinfo_rectcabtype").val(rectcabArray[posicaorectcab].siteinfo_rectcabtype);
      $("#siteinfo_rectcabinputtype").val(rectcabArray[posicaorectcab].siteinfo_rectcabinputtype);

      $("#siteinfo_rectcabnobatteries").val(rectcabArray[posicaorectcab].siteinfo_rectcabnobatteries);
      $("#siteinfo_rectcabnobatteries").siblings('label').addClass('active');

      $("#siteinfo_rectcabbatterycapac").val(rectcabArray[posicaorectcab].siteinfo_rectcabbatterycapac);
      $("#siteinfo_rectcabbatterycapac").siblings('label').addClass('active');

      rectcabArray.splice(posicaorectcab, 1);
      linha.remove();
      console.log(rectcabArray);


      $('#siteinforectifierinfo_yes_btn_modal').addClass('hide');
      $('#siteinforectifierinfo_update_btn_modal').removeClass('hide');
      $("#siteinforectifierinfo_modal").openModal({dismissible:false});
      $('#siteinforectifierinfo_update_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();
          
        var rectcabObject = {};

        var siteinfo_rectcabcabinetmodelno=$("#siteinfo_rectcabcabinetmodelno").val();
        rectcabObject.siteinfo_rectcabcabinetmodelno = siteinfo_rectcabcabinetmodelno;

        var siteinfo_rectcabcabinetnumber=$("#siteinfo_rectcabcabinetnumber").val();
        rectcabObject.siteinfo_rectcabcabinetnumber = siteinfo_rectcabcabinetnumber;

        var siteinfo_rectcabtype=$("#siteinfo_rectcabtype").val();
        rectcabObject.siteinfo_rectcabtype = siteinfo_rectcabtype;

        var siteinfo_rectcabinputtype=$("#siteinfo_rectcabinputtype").val();
        rectcabObject.siteinfo_rectcabinputtype = siteinfo_rectcabinputtype;

        var siteinfo_rectcabnobatteries=$("#siteinfo_rectcabnobatteries").val();
        rectcabObject.siteinfo_rectcabnobatteries = siteinfo_rectcabnobatteries;

        var siteinfo_rectcabbatterycapac=$("#siteinfo_rectcabbatterycapac").val();
        rectcabObject.siteinfo_rectcabbatterycapac = siteinfo_rectcabbatterycapac;


        $('.mostrartabelaRectCab').removeClass('hide');
        var mt = document.getElementById("mostrartabelaRectGab");
        rectcabArray.push(rectcabObject);
        console.log(rectcabArray);

        mt.innerHTML += '<tr><td>'+ siteinfo_rectcabcabinetnumber +'</td><td>'+ siteinfo_rectcabtype +'</td><td>'+siteinfo_rectcabinputtype+'</td><td>'+siteinfo_rectcabnobatteries+'</td><td>'+siteinfo_rectcabbatterycapac+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';

        
       $('#siteinforectifierinfo_modal').closeModal();
                  
    });

      
  });


   $(".carregarRectifierSiteInfo").click(function(){

    var dadossiteinfo = JSON.parse($("#contain3").attr("detalhessiteinfo"));

    if(dadossiteinfo[0].siteinfo_rectcabArray.length != 0){
      rectcabArray = dadossiteinfo[0].siteinfo_rectcabArray;
      console.log(rectcabArray)
      $('.mostrarSiteInfoRectifierInfo').removeClass('hide');
      $('.mostrartabelaRectCab').removeClass('hide');
    }

  });

   $('.adicionarSecurity').click(function(){

      var securityObject = {};

      var siteinfo_secguardname=$("#siteinfo_secguardname").val();
      securityObject.siteinfo_secguardname = siteinfo_secguardname;

      var siteinfo_secbinumber=$("#siteinfo_secbinumber").val();
      securityObject.siteinfo_secbinumber = siteinfo_secbinumber;

      var siteinfo_secnib=$("#siteinfo_secnib").val();
      securityObject.siteinfo_secnib = siteinfo_secnib;

      var siteinfo_secvalue=$("#siteinfo_secvalue").val();
      securityObject.siteinfo_secvalue = siteinfo_secvalue;
      


      $('.mostrartabelaSeguranca').removeClass('hide');
      var mt = document.getElementById("mostrartabelaSecurity");
      securityArray.push(securityObject);
      console.log(securityArray);

      mt.innerHTML += '<tr><td>'+ siteinfo_secguardname +'</td><td>'+ siteinfo_secbinumber +'</td><td>'+siteinfo_secnib+'</td><td>'+siteinfo_secvalue+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';

      $('#siteinfoguardainfo_modal').closeModal();

  });

   $(".mostrartabelaSecurity").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var posicaosecurity = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      securityArray.splice(posicaosecurity, 1);
      $(this).parent('td').parent('tr').remove();
      console.log(securityArray);
      if(securityArray.length == 0){
        $('.mostrartabelaSeguranca').addClass('hide');
      }
  });

   $(".mostrartabelaSecurity").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var linha = $(this).parent('td').parent('tr');
      var posicaosecurity = $(this).parent('td').parent('tr')[0].rowIndex - 1;

      $("#siteinfo_secguardname").val(securityArray[posicaosecurity].siteinfo_secguardname);
      $("#siteinfo_secguardname").siblings('label').addClass('active');

      $("#siteinfo_secbinumber").val(securityArray[posicaosecurity].siteinfo_secbinumber);
      $("#siteinfo_secbinumber").siblings('label').addClass('active');

      $("#siteinfo_secnib").val(securityArray[posicaosecurity].siteinfo_secnib);
      $("#siteinfo_secnib").siblings('label').addClass('active');

      $("#siteinfo_secvalue").val(securityArray[posicaosecurity].siteinfo_secvalue);
      $("#siteinfo_secvalue").siblings('label').addClass('active');
      
      
      securityArray.splice(posicaosecurity, 1);
      linha.remove();
      console.log(securityArray);

      $('#siteinfoguardainfo_yes_btn_modal').addClass('hide');
      $('#siteinfoguardainfo_update_btn_modal').removeClass('hide');
      $("#siteinfoguardainfo_modal").openModal({dismissible:false});
      $('#siteinfoguardainfo_update_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();
          
            var securityObject = {};

          var siteinfo_secguardname=$("#siteinfo_secguardname").val();
          securityObject.siteinfo_secguardname = siteinfo_secguardname;

          var siteinfo_secbinumber=$("#siteinfo_secbinumber").val();
          securityObject.siteinfo_secbinumber = siteinfo_secbinumber;

          var siteinfo_secnib=$("#siteinfo_secnib").val();
          securityObject.siteinfo_secnib = siteinfo_secnib;

          var siteinfo_secvalue=$("#siteinfo_secvalue").val();
          securityObject.siteinfo_secvalue = siteinfo_secvalue;
          


          $('.mostrartabelaSeguranca').removeClass('hide');
          var mt = document.getElementById("mostrartabelaSecurity");
          securityArray.push(securityObject);
          console.log(securityArray);

          mt.innerHTML += '<tr><td>'+ siteinfo_secguardname +'</td><td>'+ siteinfo_secbinumber +'</td><td>'+siteinfo_secnib+'</td><td>'+siteinfo_secvalue+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left selmecAzul">delete_forever</i></a><a class="tooltipped pointer info editar"><i class="material-icons left selmecAzul">edit</i></a></td></tr>';

          $('#siteinfoguardainfo_modal').closeModal();
                  
    });

      
  });

   $(".carregarGuardaSiteInfo").click(function(){

    var dadossiteinfo = JSON.parse($("#contain3").attr("detalhessiteinfo"));

    if(dadossiteinfo[0].siteinfo_securityArray.length != 0){
      securityArray = dadossiteinfo[0].siteinfo_securityArray;
      console.log(securityArray)
      $('.mostrarSiteInfoGuardaInfo').removeClass('hide');
      $('.mostrartabelaSeguranca').removeClass('hide');
    }

  });

   $('.adicionarGeradorJobcard').click(function(){
    var generatorJobcardObject = {};

    var jobcard_generator=$("#jobcard_generator").val();
    generatorJobcardObject.jobcard_generator = jobcard_generator;

    var jobcard_previousgeneratorhours=$("#jobcard_previousgeneratorhours").val();
    generatorJobcardObject.jobcard_previousgeneratorhours = jobcard_previousgeneratorhours;

    var jobcard_currentgeneratorhours=$("#jobcard_currentgeneratorhours").val();
    generatorJobcardObject.jobcard_currentgeneratorhours = jobcard_currentgeneratorhours;

    var jobcard_previousrefuelhrs=$("#jobcard_previousrefuelhrs").val();
    generatorJobcardObject.jobcard_previousrefuelhrs = jobcard_previousrefuelhrs;

    var jobcard_generatorrefuel=$("#jobcard_generatorrefuel").val();
    generatorJobcardObject.jobcard_generatorrefuel = jobcard_generatorrefuel;

    var jobcard_litersoil=$("#jobcard_litersoil").val();
    generatorJobcardObject.jobcard_litersoil = jobcard_litersoil;

    var jobcard_dsc=$("#jobcard_dsc").val();
    generatorJobcardObject.jobcard_dsc = jobcard_dsc;

    var jobcard_refuelreason=$("#jobcard_refuelreason").val();
    generatorJobcardObject.jobcard_refuelreason = jobcard_refuelreason;

    var jobcard_lastrefueldate=$("#jobcard_lastrefueldate").val();
    generatorJobcardObject.jobcard_lastrefueldate = jobcard_lastrefueldate;

    var jobcard_generatorbeenserviced=$("#jobcard_generatorbeenserviced").val();
    generatorJobcardObject.jobcard_generatorbeenserviced = jobcard_generatorbeenserviced;

    var jobcard_hourslastservice=$("#jobcard_hourslastservice").val();
    generatorJobcardObject.jobcard_hourslastservice = jobcard_hourslastservice;

    $('.mostrartabela5').removeClass('hide');
    var mt = document.getElementById("mostrarTabelaGeradorJobcard");
    generatorJobcardArray.push(generatorJobcardObject);

    mt.innerHTML += '<tr><td>'+ jobcard_generator +'</td><td>'+ jobcard_previousgeneratorhours +'</td><td>'+jobcard_currentgeneratorhours+'</td><td>'+jobcard_refuelreason+'</td><td>'+jobcard_litersoil+'</td><td><a class="tooltipped pointer info eliminar"><i class="material-icons left activarVerde">clear</i></a><a class="tooltipped pointer info editar"><i class="material-icons left activarVerde">edit</i></a></td></tr>';

    var selcopt = document.getElementById("jobcard_generator");
    selcopt.remove(selcopt.selectedIndex);
    // console.log(selcopt.options);


    //var opcaooo = "Escolha uma opcao";
    $("#jobcard_generator").val("");
    $("#jobcard_previousgeneratorhours").val("");
    $("#jobcard_currentgeneratorhours").val("");
    $("#jobcard_previousrefuelhrs").val("");
    $("#jobcard_generatorrefuel").val("");
    $("#jobcard_litersoil").val("");
    $("#jobcard_dsc").val("");
    $("#jobcard_refuelreason").val("");
    $("#jobcard_lastrefueldate").val("");
    $("#jobcard_generatorbeenserviced").val("");
    $("#jobcard_hourslastservice").val("");

    

    if(selcopt.options.length == 1){

      $('#addgeradorjob').addClass('hide');
      $('#updategeradorjob').addClass('hide');

    }else{
      $('#addgeradorjob').removeClass('hide');
      $('#updategeradorjob').addClass('hide');
    }


      
    document.getElementById("primeiro").selected = "true";
    document.getElementById("primeiro").disabled = "true";

      

  });

   $(".mostrarTabelaGeradorJobcard").on("click",".eliminar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var posicaogeneratorjobcard = $(this).parent('td').parent('tr')[0].rowIndex - 1;
      var geradorslct = generatorJobcardArray[posicaogeneratorjobcard].jobcard_generator;
      //console.log(geradorslct);
      var opt = document.createElement('option');
      opt.value = geradorslct;
      opt.innerHTML = geradorslct;
      jobcard_generator.appendChild(opt);

      generatorJobcardArray.splice(posicaogeneratorjobcard, 1);
      $(this).parent('td').parent('tr').remove();
      
  });

   $(".mostrarTabelaGeradorJobcard").on("click",".editar", function(e){ //user click on remove text
      // console.log($(this).parent('td'));
      // console.log($(this).parent('td').parent('tr'));
      var posicaogeneratorjobcard = $(this).parent('td').parent('tr')[0].rowIndex - 1;

      $("#jobcard_generator").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_generator);
      $("#jobcard_previousgeneratorhours").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_previousgeneratorhours);
      $("#jobcard_currentgeneratorhours").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_currentgeneratorhours);
      $("#jobcard_previousrefuelhrs").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_previousrefuelhrs);
      $("#jobcard_generatorrefuel").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_generatorrefuel);
      $("#jobcard_litersoil").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_litersoil);
      $("#jobcard_dsc").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_dsc);
      $("#jobcard_refuelreason").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_refuelreason);
      $("#jobcard_lastrefueldate").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_lastrefueldate);
      $("#jobcard_generatorbeenserviced").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_generatorbeenserviced);
      $("#jobcard_hourslastservice").val(generatorJobcardArray[posicaogeneratorjobcard].jobcard_hourslastservice);
      

      var opt = document.createElement('option');
      opt.value = generatorJobcardArray[posicaogeneratorjobcard].jobcard_generator;
      opt.innerHTML = generatorJobcardArray[posicaogeneratorjobcard].jobcard_generator;
      jobcard_generator.appendChild(opt);
      
      generatorJobcardArray.splice(posicaogeneratorjobcard, 1);
      $(this).parent('td').parent('tr').remove();
      console.log(generatorJobcardArray);

      $('#addgeradorjob').addClass('hide');
      $('#updategeradorjob').removeClass('hide');
  });


   $('#mostrarinfoviagem').click(function(){
    $('#loading').fadeIn().delay(20000).fadeOut();

      var dadosjobcard = JSON.parse($("#detalhesJobcardMapa").attr("dataa"));

      var jobcard_traveldistance =$("#mostrarinfoviagem").attr("jobcard_traveldistance");
      var jobcard_travelduration =$("#mostrarinfoviagem").attr("jobcard_travelduration");
      var jobcard_traveldurationms =$("#mostrarinfoviagem").attr("jobcard_traveldurationms");

      var calljobcard = ["Project"];
      var jobcard_call = dadosjobcard[0].jobcard_call;
      var jobcard_jobtype = dadosjobcard[0].jobcard_jobtype;

      var totalmilisegundos = new Date().getTime() + 1000 * jobcard_traveldurationms;
      var jobcard_estimadadatachegadams = totalmilisegundos + 1000*600;
      console.log(jobcard_estimadadatachegadams)
      
      var dia = ((new Date(totalmilisegundos)).getDate()<10) ? ("0" + (new Date(totalmilisegundos)).getDate()): ((new Date(totalmilisegundos)).getDate());
      var mes = (((new Date(totalmilisegundos)).getMonth()+1)<10) ? ("0" + ((new Date(totalmilisegundos)).getMonth()+1)): (((new Date(totalmilisegundos)).getMonth())+1);
      var ano = (new Date(totalmilisegundos)).getFullYear();

      var jobcard_estimadadatachegada = dia + "/" + mes + "/" + ano;
      var jobcard_estimahorachegada = new Date(totalmilisegundos).getHours() + ":" + new Date(totalmilisegundos).getMinutes()
      
      var jobcardformdata = new FormData();

       var rule="/manutencao/updateinfoviagem";

       var jobcard_id = dadosjobcard[0]._id;
       jobcardformdata.append("jobcard_id", jobcard_id);

       jobcardformdata.append("jobcard_traveldistance", jobcard_traveldistance);

       jobcardformdata.append("jobcard_travelduration", jobcard_travelduration);
       jobcardformdata.append("jobcard_traveldurationms", jobcard_traveldurationms);

       jobcardformdata.append("jobcard_estimadadatachegadams", jobcard_estimadadatachegadams);
       jobcardformdata.append("jobcard_estimadadatachegada", jobcard_estimadadatachegada);
       jobcardformdata.append("jobcard_estimahorachegada", jobcard_estimahorachegada);

       var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(jobcardformdata);

       if(jobcard_jobtype == "Callout"){

          setTimeout(function(){
            
            window.location.href="/manutencao/ttnumberhome/inprogress";
           }, 3500);
        
        
       }else{
        
        setTimeout(function(){
         
         window.location.href="/manutencao/preventativemaint/inprogress";
        }, 3500);
      }


  });



   $(".retomarttnumber").click(function() {
    var jobcard_id = $(this).attr("data-user-new");
    var dadojobtype =$(this).attr("datajobtype"); //tipo de trabalho
    var dadoscall = JSON.parse($(this).attr("detalhescall")); //jobcard call
    //var dadosjobcards = JSON.parse($("#recolherdados").attr("detalhesjobcards")); //callouts em progresso
    console.log(jobcard_id);

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente retomar esta folha de serviço':'Do you really want to resume this jobcard <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    // $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      $('#loading').fadeIn().delay(20000).fadeOut();

      e.stopPropagation();
      // e.stopImmediatePropagation();

      var rule = "/manutencao/retomarttnumber";

      var jobcardformdata = new FormData();

      jobcardformdata.append("jobcard_id", jobcard_id);
      
      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST',rule, true);
      xhr.send(jobcardformdata);
      
      if(dadojobtype == "Callout"){

        setTimeout(function(){
           window.location.href="/manutencao/ttnumberhome/inprogress";
          }, 3500);

      }else{

      
         setTimeout(function(){
           window.location.href="/manutencao/preventativemaint/inprogress";
         }, 3500);

      }
    });

  });

  


   $('.aprovarttnumber').click(function(){

       var novo=$(this).attr("data-user-new");

       var dadojobtype =$(this).attr("datajobtype");
       var dadoscall = JSON.parse($(this).attr("detalhescall"));
       var dadosjobcards = JSON.parse($("#recolherdados").attr("detalhesjobcards"));
       var dadosprojects = JSON.parse($("#recolherdados").attr("detalhesprojectos"));
       var contR = 0;
       

       if(dadosjobcards.length != 0){

          var nomeT = $("#recolherdados").attr("detalhessession");

          for(var i = 0; i < dadosjobcards.length; i++){
              if((dadosjobcards[i].jobcard_sitedeparturedate == undefined) && (dadosjobcards[i].jobcard_tecniconome == nomeT) && (dadosjobcards[i].ttnumber_status != "Complete" && dadosjobcards[i].jobcard_wait == "nao")){
                  contR = 1;
                  break;
              }
           
          }

       }

       if(dadosprojects.length != 0){

          var idTecnico = $("#recolherdados").attr("detalhessession");

          for(var i = 0; i < dadosprojects.length; i++){
              if((dadosprojects[i].jobcard_tecniconome == idTecnico) && (dadosprojects[i].jobcard_sitedeparturedate == undefined) && (dadosjobcards[i].ttnumber_status != "Complete" && dadosjobcards[i].jobcard_wait == "nao")){
                  contR = 1;
                  break;
              }
           
          }

       }

         if(contR == 1){
           $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
           $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Não é possível aceitar esta folha de serviço. Termine os Jobcards pendentes !':'It is not possible to approve this Jobcard. Complete the pending Jobcards <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
           $('#msg_modal').openModal({dismissible:false});
           $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

         }else{

           $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
           $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente aceitar esta folha de serviço':'Do you really want to accept the jobcard <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
           $('#yes_no_modal').openModal({dismissible:false});
           // $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
           $('#yes_btn_modal').click(function(e){
             $('#loading').fadeIn().delay(20000).fadeOut();

             e.stopPropagation();
             // e.stopImmediatePropagation();



             var jobcardformdata = new FormData();

             var rule="/manutencao/aprovarttnumber";

             var jobcard_id = novo;
             jobcardformdata.append("jobcard_id", jobcard_id);

             var controladorpage = 0;

             var options = {
             enableHighAccuracy: false,
             timeout: 5000,
             maximumAge: 1500000
             };

              function success(pos) {
             var crd = pos.coords;

             console.log('Your current position is:');
             console.log(`Latitude : ${crd.latitude}`);
             jobcardformdata.append("geolocationlatitude", crd.latitude);
             console.log(`Longitude: ${crd.longitude}`);
             jobcardformdata.append("geolocationlongitude", crd.longitude);
             console.log(`More or less ${crd.accuracy} meters.`);

             var geomessage = ""
             jobcardformdata.append("geomessage", geomessage);

             controladorpage = 0;

               var xhr = new XMLHttpRequest();
               // Add any event handlers here...
               xhr.open('POST',rule, true);
               xhr.send(jobcardformdata);
             }

             function error(err) {
               // console.warn(`ERROR(${err.code}): ${err.message}`);
                var geo = "";
                var geomessage;

                controladorpage = 1;

                jobcardformdata.append("geolocationlatitude", geo);
                jobcardformdata.append("geolocationlongitude", geo);

                if(err.code == 1){

                  geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                  jobcardformdata.append("geomessage", geomessage);

                }else
                   if(err.code == 2){

                      geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                      jobcardformdata.append("geomessage", geomessage);

                   }else
                      if(err.code == 3){

                         geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                         jobcardformdata.append("geomessage", geomessage);

                      }else{

                         geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                         jobcardformdata.append("geomessage", geomessage);
                      }

                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

             }

             navigator.geolocation.getCurrentPosition(success, error, options);

             setTimeout(function(){
               
                  window.location.href="/manutencao/detalhesMapa/" + jobcard_id;
                 }, 5000);

             // if(controladorpage == 0){

                
             // }else{

             //    setTimeout(function(){
               
             //      window.location.href="/manutencao/ttnumberhome/inprogress";
             //     }, 4000);
             // }

             
               
           });
         
         }

  });


  $('.aprovarttnumberproject').click(function(){

    var novo=$(this).attr("data-user-new");

    var dadojobtype =$(this).attr("datajobtype");
    var dadosjobcards = JSON.parse($("#recolherdados").attr("detalhesjobcards"));
    var dadosprojects = JSON.parse($("#recolherdados").attr("detalhesprojects"));
    var contR = 0;
    

    if(dadosjobcards.length != 0){

       var idTecnico = $("#recolherdados").attr("detalhessession");

       for(var i = 0; i < dadosjobcards.length; i++){
            if((dadosjobcards[i].jobcard_sitedeparturedate == undefined) && (dadosjobcards[i].jobcard_tecniconome == idTecnico)){
               contR = 1;
               break;
           }
        
       }

    }

    if(dadosprojects.length != 0){

       var idTecnico = $("#recolherdados").attr("detalhessession");

       for(var i = 0; i < dadosprojects.length; i++){
           if((dadosprojects[i].jobcard_tecniconome == idTecnico) && (dadosprojects[i].jobcard_sitedeparturedate == undefined)){
               contR = 1;
               break;
           }
        
       }

    }

      if(contR == 1){
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Não é possível aceitar esta folha de serviço. Termine os Jobcards pendentes !':'It is not possible to approve this Jobcard. Complete the pending Jobcards <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
        $('#msg_modal').openModal({dismissible:false});
        $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

      }else{

        $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente aceitar esta folha de serviço':'Do you really want to accept the jobcard <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
        $('#yes_no_modal').openModal({dismissible:false});
        // $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
        $('#yes_btn_modal').click(function(e){
          $('#loading').fadeIn().delay(20000).fadeOut();

          e.stopPropagation();
          // e.stopImmediatePropagation();



          var jobcardformdata = new FormData();

          var rule="/manutencao/aprovarttnumberproject";

          var jobcard_id = novo;
          jobcardformdata.append("jobcard_id", jobcard_id);


          var options = {
          enableHighAccuracy: false,
          timeout: 5000,
          maximumAge: 1500000
          };

           function success(pos) {
          var crd = pos.coords;

          console.log('Your current position is:');
          console.log(`Latitude : ${crd.latitude}`);
          jobcardformdata.append("geolocationlatitude", crd.latitude);
          console.log(`Longitude: ${crd.longitude}`);
          jobcardformdata.append("geolocationlongitude", crd.longitude);
          console.log(`More or less ${crd.accuracy} meters.`);

          var geomessage = "";
          jobcardformdata.append("geomessage", geomessage);

            var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);
          }

          function error(err) {
            // console.warn(`ERROR(${err.code}): ${err.message}`);
             var geo = "";
             var geomessage;

             jobcardformdata.append("geolocationlatitude", geo);
             jobcardformdata.append("geolocationlongitude", geo);

             if(err.code == 1){

               geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
               jobcardformdata.append("geomessage", geomessage);

             }else
                if(err.code == 2){

                   geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                   jobcardformdata.append("geomessage", geomessage);

                }else
                   if(err.code == 3){

                      geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                      jobcardformdata.append("geomessage", geomessage);

                   }else{

                      geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                      jobcardformdata.append("geomessage", geomessage);
                   }

                var xhr = new XMLHttpRequest();
               // Add any event handlers here...
               xhr.open('POST',rule, true);
               xhr.send(jobcardformdata);

          }

          navigator.geolocation.getCurrentPosition(success, error, options);

          setTimeout(function(){
                  
            window.location.href="/manutencao/jobcardprojectshome/inprogress";
           }, 4000);

            
        });
      
      }
  });

   //ManutencaoHome

  $("#verTabsSiteInfo").click(function(){
    window.location.href="/manutencao/siteinfohome";
  });

  $("#verTabsProjects").click(function(){
    window.location.href="/manutencao/jobcardprojectshome";
  });

  $("#imprtsitinfo").click(function(){
    window.location.href="/manutencao/importacaofychero";
  });
  $("#verTabsReportes").click(function(){
    window.location.href="/manutencao/maintenancereports";
  });

  $("#verTabsTTNumber").click(function(){
    window.location.href="/manutencao/ttnumberhome";
  });

  $("#verhvacnovascorrt").click(function(){
    window.location.href="/climatizacao/correctivanew";
  });

  $("#verhvacprogcorrt").click(function(){
    window.location.href="/climatizacao/correctivainprogress";
  });

  $("#verhvaccompletascorrt").click(function(){
    window.location.href="/climatizacao/correctivacomplete";
  });

  $("#verttHvaccoret").click(function(){
    window.location.href="/climatizacao/Clicorrectiva";
  })

  $("#verttHvacprev").click(function(){
    window.location.href="/climatizacao/preventhvac";
  })

  $("#verTabsCorrectiveMaintenance").click(function(){
    window.location.href="/manutencao/correctivemaintenance";
  });

  $("#verTabsPreventiveMaintenance").click(function(){
    window.location.href="/manutencao/preventativehome"
  });

  //TTNumberHome
  $("#verTTNumberNew").click(function(){
    window.location.href="/manutencao/ttnumberhome/new";
  });

  $("#verTTNumberOnprogress").click(function(){
    window.location.href="/manutencao/ttnumberhome/inprogress";
  });

  $("#verTTNumberComplete").click(function(){
    window.location.href="/manutencao/ttnumberhome/complete";
  });

  $("#verTTNumberEscalated").click(function(){
    window.location.href="/manutencao/ttnumberhome/escalated";
  });

  $("#verTTInvoiced").click(function(){
    window.location.href="/manutencao/ttnumberhome/tobeinvoiced";
  });

  //Preventative Home
  $("#verMaintPlanHoje").click(function(){
    window.location.href="/manutencao/preventativemaint/newhoje";
  });

  $("#verMaintPlan").click(function(){
    window.location.href="/manutencao/preventativemaint/new";
  });

  $("#verMaintPlanOnprogress").click(function(){
    window.location.href="/manutencao/preventativemaint/inprogress";
  });

  $("#verMaintPlanComplete").click(function(){
    window.location.href="/manutencao/preventativemaint/complete";
  });

  $("#verMaintPlanInvoiced").click(function(){
    window.location.href="/manutencao/preventativemaint/tobeinvoiced";
  });

  //Projects Home
  $("#verJobcardProjectsNew").click(function(){
    window.location.href="/manutencao/jobcardprojectshome/new";
  });

  $("#verJobcardProjectsOnprogress").click(function(){
    window.location.href="/manutencao/jobcardprojectshome/inprogress";
  });

  $("#verJobcardProjectsComplete").click(function(){
    window.location.href="/manutencao/jobcardprojectshome/complete";
  });


  $(".aprovarjobcardproject").click(function(){

    var novo=$(this).attr("data-user-new");
    
    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Aprovar o Jobcard':'Approve Jobcard'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja aprovar esta folha de serviço':'Do you want to approve this jobcard <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#yes_btn_modal').click(function(e){ 

      $('#loading').fadeIn().delay(20000).fadeOut();
      e.stopPropagation();
      // e.stopImmediatePropagation();

      var jobcardformdata = new FormData();

      var rule="/manutencao/aprovarjobcardproject";

      var jobcard_id = novo;
      jobcardformdata.append("jobcard_id", jobcard_id);
      
      var ttnumber_status = "Complete";
      jobcardformdata.append("ttnumber_status", ttnumber_status);

            

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST',rule, true);
      xhr.send(jobcardformdata);

      setTimeout(function(){
        window.location.href="/manutencao/jobcardprojectshome/complete";
      }, 3000);

    });

  });



  $(".aprovarjobcard").click(function(){

    var novo=$(this).attr("data-user-new");
    var dadojobtype =$(this).attr("datajobtype");
    
    
    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Aprovar o Jobcard':'Approve Jobcard'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja aprovar esta folha de serviço':'Do you want to approve this jobcard <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#yes_btn_modal').click(function(e){ 

      $('#loading').fadeIn().delay(20000).fadeOut();
      e.stopPropagation();
      // e.stopImmediatePropagation();

      var jobcardformdata = new FormData();

      var rule="/manutencao/aprovarjobcard";

      var jobcard_id = novo;
      jobcardformdata.append("jobcard_id", jobcard_id);

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST',rule, true);
      xhr.send(jobcardformdata);

      if(dadojobtype == "Callout"){
          setTimeout(function(){
              window.location.href="/manutencao/ttnumberhome/inprogress";
          }, 3000);

      }else{
          setTimeout(function(){
            window.location.href="/manutencao/preventativemaint/inprogress";
        }, 3000);
      }

             



    });

  });


  $('.reprovarjobcard').click(function(){

    var referencia=$(this).attr("data-user-new");

    window.location.href="/manutencao/detalhesDevolverJobcard/" + referencia;

  });

  $("#sendbackcallouthvac").click(function(){
      var referencia = $(this).attr("data-user-new");
      window.location.href="/climatizacao/detalhesDevolverJobcardhvac/" + referencia;
  });

  $('.detalhesAccaoPrioridadeProject').click(function(){
    var referencia =$(this).attr("data-user-new"); 
     $('#loading').fadeIn().delay(20000).fadeOut();
      window.location.href="/manutencao/detalhesAccaoPrioridadeProject/" + referencia;

  });

  $('.detalhesDevolverJobcardProject').click(function(){
    var referencia =$(this).attr("data-user-new"); 
     $('#loading').fadeIn().delay(20000).fadeOut();

    window.location.href="/manutencao/detalhesDevolverJobcardProject/" + referencia;

});


  $('#reprovarrazao_yes_btn').click(function(){

    var referencia=$("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype =$("#recolherdados").attr("dadosjobtype");
    // var dadoscall = JSON.parse($("#recolherdados").attr("detalhescall"));
    // var calljobcard = ["Project"];

    var jobcard_razaoreprovarcont = $("#jobcard_razaoreprovar").val();

    if(jobcard_razaoreprovarcont == ""){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
        $('#msg_modal').openModal({dismissible:false});
        $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

    }else{

        $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja devolver este jobcard para ser retificado':'Do you want to return this jobcard to be rectified <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
       $('#yes_no_modal').openModal({dismissible:false});
       $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
       $('#yes_btn_modal').click(function(e){
          $('#loading').fadeIn().delay(20000).fadeOut();
         e.stopPropagation();
         // e.stopImmediatePropagation();


         var jobcardformdata = new FormData();

          var rule="/manutencao/sendbackjobcard";

          var jobcard_id = referencia;
          jobcardformdata.append("jobcard_id", jobcard_id);

          var jobcard_razaoreprovar = $("#jobcard_razaoreprovar").val();
          jobcardformdata.append("jobcard_razaoreprovar", jobcard_razaoreprovar);


          var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST',rule, true);
          xhr.send(jobcardformdata);

          if(dadojobtype == "Callout"){

             setTimeout(function(){
                 window.location.href="/manutencao/ttnumberhome/inprogress";
                }, 3000);

          }else{

            setTimeout(function(){
                window.location.href="/manutencao/preventativemaint/inprogress";
            }, 3000);

          }


       });

    }

   

  });

  $('#reprovarrazaohvac_yes_btn').click(function(){

    var referencia=$("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype =$("#recolherdados").attr("dadoscliente");
    console.log(referencia, dadojobtype);
    // var dadoscall = JSON.parse($("#recolherdados").attr("detalhescall"));
    // var calljobcard = ["Project"];

    var jobcard_razaoreprovarcont = $("#jobcardhvac_razaoreprovar").val();
    console.log(jobcard_razaoreprovarcont);

    if(jobcard_razaoreprovarcont == ""){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
        $('#msg_modal').openModal({dismissible:false});
        $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

    }else{

        $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja devolver este jobcard para ser retificado':'Do you want to return this jobcard to be rectified <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
       $('#yes_no_modal').openModal({dismissible:false});
       $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
       $('#yes_btn_modal').click(function(e){
          $('#loading').fadeIn().delay(20000).fadeOut();
         e.stopPropagation();
         // e.stopImmediatePropagation();


         var jobcardformdata = new FormData();

          var rule="/climatizacao/sendbackjobcardhvac";

          var jobcard_id = referencia;
          jobcardformdata.append("jobcard_id", jobcard_id);

          var jobcardhvac_razaoreprovar = $("#jobcardhvac_razaoreprovar").val();
          jobcardformdata.append("jobcardhvac_razaoreprovar", jobcardhvac_razaoreprovar);


          var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST',rule, true);
          xhr.send(jobcardformdata);

            setTimeout(function(){
                window.location.href="/climatizacao/correctivainprogress";
            }, 3000);
        });
    }
  });



  $('#reprovarrazaoproject_yes_btn').click(function(){

    var referencia=$("#recolherdados").attr("dadosreferenciaproject");
   

    var jobcard_razaoreprovarcont = $("#jobcard_razaoreprovar").val();

    if(jobcard_razaoreprovarcont == ""){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
        $('#msg_modal').openModal({dismissible:false});
        $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

    }else{

        $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja devolver este jobcard para ser retificado':'Do you want to return this jobcard to be rectified <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
       $('#yes_no_modal').openModal({dismissible:false});
       $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
       $('#yes_btn_modal').click(function(e){
          $('#loading').fadeIn().delay(20000).fadeOut();
         e.stopPropagation();
         // e.stopImmediatePropagation();


         var jobcardformdata = new FormData();

          var rule="/manutencao/sendbackjobcardproject";

          var jobcard_id = referencia;
          jobcardformdata.append("jobcard_id", jobcard_id);

          var jobcard_razaoreprovar = $("#jobcard_razaoreprovar").val();
          jobcardformdata.append("jobcard_razaoreprovar", jobcard_razaoreprovar);


          var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST',rule, true);
          xhr.send(jobcardformdata);

           setTimeout(function(){
              window.location.href="/manutencao/jobcardprojectshome/inprogress";
           }, 4000);

          


       });

    }

  });


  $('#jobcardactioncallcenter_yes_btn').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    var dadosfuncao = $("#recolherdados").attr("dadosjobtype");
    var controlador = 0;
    

    var jobcard_callcenteractioncont = $("#jobcard_callcenteraction").val();
    var jobcard_callcenterreasoncont = $("#jobcard_callcenterreason").val();


      if(jobcard_callcenteractioncont == null || jobcard_callcenterreasoncont == ""){
        controlador = 1;
      }

      console.log(jobcard_callcenteractioncont);
      console.log(jobcard_callcenterreasoncont);
      console.log(controlador);
      
      if(controlador == 1){
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
         $('#msg_modal').openModal({dismissible:false});
         $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

      }else{

          $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja tomar acção ':'Do you want to take action <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
        $('#yes_no_modal').openModal({dismissible:false});
        $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
        $('#yes_btn_modal').click(function(e){

              $('#loading').fadeIn().delay(20000).fadeOut();
              var jobcardformdata = new FormData();
              
              var rule="/manutencao/callcenteractionjobcard";

              var jobcard_callcenteraction = $("#jobcard_callcenteraction").val();
              var jobcard_callcenterreason = $("#jobcard_callcenterreason").val();
              var idjobcard = referencia;
             
              var action_reason = jobcard_callcenterreasoncont
              var callcenter_accao = 0;
              console.log(idjobcard, action_reason);
             
              jobcardformdata.append("jobcard_callcenteraction", jobcard_callcenteraction);
              jobcardformdata.append("jobcard_callcenterreason", jobcard_callcenterreason);
              jobcardformdata.append("jobcard_id", idjobcard);

              
              var xhr = new XMLHttpRequest();
              // Add any event handlers here...
              xhr.open('POST',rule, true);
              xhr.send(jobcardformdata);

              if(dadojobtype == "Callout"){

                setTimeout(function(){
                   window.location.href="/manutencao/ttnumberhome/new";
                  }, 3500);

              }else{

                 setTimeout(function(){
                   window.location.href="/manutencao/preventativemaint/new";
                 }, 3500);

              }
        });


      }

});


//   $('#jobcardactionprioridade_yes_btn').click(function(){

//     var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
//     var dadojobtype = $("#recolherdados").attr("dadosjobtype");
//     var controlador = 0;

//     var jobcard_holdactioncont = $("#jobcard_holdaction").val();
//     var jobcard_holdreasoncont = $("#jobcard_holdreason").val();
//     var jobcard_tecnicoid1cont = $("#jobcard_tecnicoid1").val();


//       if(jobcard_holdactioncont == null){

//         controlador = 1;

//       }else

//           if(jobcard_holdactioncont == "Em Espera" || jobcard_holdactioncont == "Cancelar jobcard" ){

//             if(jobcard_holdreasoncont == ""){
//               controlador = 1;
//             }
            
//           }else{

//             if(jobcard_holdreasoncont == ""){
//               controlador = 1;
//             }


//             if(jobcard_tecnicoid1cont == null){
//               controlador = 1;
//             }

//           }
    

//       if(controlador == 1){

//         $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
//          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
//          $('#msg_modal').openModal({dismissible:false});
//          $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

//       }else{

//           $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
//         $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja tomar acção ':'Do you want to take action <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
//         $('#yes_no_modal').openModal({dismissible:false});
//         $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
//         $('#yes_btn_modal').click(function(e){
//             if (jobcard_holdactioncont != "Cancelar jobcard") {
//               $('#loading').fadeIn().delay(20000).fadeOut();
//               var jobcardformdata = new FormData();

//               var jobcard_id = referencia;
//               jobcardformdata.append("jobcard_id", jobcard_id);

//               var jobcard_holdaction = $("#jobcard_holdaction").val();
//               jobcardformdata.append("jobcard_holdaction", jobcard_holdaction);

//               var jobcard_holdreason = $("#jobcard_holdreason").val();
//               jobcardformdata.append("jobcard_holdreason", jobcard_holdreason);

//               var jobcard_tecnicoid1 = $("#jobcard_tecnicoid1").val();
//               if(jobcard_tecnicoid1 == null){
//                 jobcard_tecnicoid1 = "";

//                  var rule="/manutencao/tomaraccaoprioridadesametecnico";
//               }else{

//                 var rule="/manutencao/tomaraccaoprioridadedifftecnico";

//               }
//               jobcardformdata.append("jobcard_tecnicoid1", jobcard_tecnicoid1);

//               var xhr = new XMLHttpRequest();
//               // Add any event handlers here...
//               xhr.open('POST',rule, true);
//               xhr.send(jobcardformdata);

//             }else {
//               if(validar()){
//                 console.log("cancel")
//                 var jobcardformdata = new FormData();
        
//                 var rule="/manutencao/canceljobcard";
        
//                 var idjobcard = referencia;
//                 var cancel_reason = jobcard_holdreasoncont
//                 console.log(idjobcard, cancel_reason);
        
//                 jobcardformdata.append("idjobcard", idjobcard);
//                 jobcardformdata.append("cancel_reason", cancel_reason);
        
//                 var xhr = new XMLHttpRequest();
//                 xhr.open('POST', rule, true);
//                 xhr.send(jobcardformdata);
                
//                 // $("#yes_no_title_modal").closeModal();
//                 // $("#canceljobcard_modal").closeModal();
//               }
//             }
              


//               if(dadojobtype == "Callout"){

//                 setTimeout(function(){
//                    window.location.href="/manutencao/ttnumberhome/new";
//                   }, 3500);

//               }else{

              
//                  setTimeout(function(){
//                    window.location.href="/manutencao/preventativemaint/new";
//                  }, 3500);

//               }
//         });


//       }

// });
  
  
  // $('#jobcardactionprioridadeproject_yes_btn').click(function(){

  //     var referencia = $("#recolherdados").attr("dadosreferenciaprojecto");
  //     var referenciastatus = $("#recolherdados").attr("dadosreferenciastatus");
  //     var controlador = 0;

  //     var jobcard_holdactioncont = $("#jobcard_holdaction").val();
  //     var jobcard_holdreasoncont = $("#jobcard_holdreason").val();
  //     var jobcard_tecnicoid1cont = $("#jobcard_tecnicoid1").val();


  //       if(jobcard_holdactioncont == null){

  //         controlador = 1;

  //       }else

  //           if(jobcard_holdactioncont == "Em Espera" || jobcard_holdactioncont == "Cancelar jobcard"){

  //             if(jobcard_holdreasoncont == ""){
  //               controlador = 1;
  //             }
              
  //           }else{

  //             if(jobcard_holdreasoncont == ""){
  //               controlador = 1;
  //             }


  //             if(jobcard_tecnicoid1cont == null){
  //               controlador = 1;
  //             }

  //           }
      

  //       if(controlador == 1){

  //         $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
  //          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
  //          $('#msg_modal').openModal({dismissible:false});
  //          $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

  //       }else{

  //           $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  //         $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja tomar acção ':'Do you want to take action <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
  //         $('#yes_no_modal').openModal({dismissible:false});
  //         $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
  //         $('#yes_btn_modal').click(function(e){

  //               $('#loading').fadeIn().delay(20000).fadeOut();
  //               var jobcardformdata = new FormData();

  //               var jobcard_id = referencia;
  //               jobcardformdata.append("jobcard_id", jobcard_id);

  //               var jobcard_holdaction = $("#jobcard_holdaction").val();
  //               jobcardformdata.append("jobcard_holdaction", jobcard_holdaction);

  //               var jobcard_holdreason = $("#jobcard_holdreason").val();
  //               jobcardformdata.append("jobcard_holdreason", jobcard_holdreason);

  //               var jobcard_tecnicoid1 = $("#jobcard_tecnicoid1").val();
  //               if(jobcard_tecnicoid1 == null){
  //                 jobcard_tecnicoid1 = "";

  //                  var rule="/manutencao/tomaraccaoprioridadesametecnicoproject";
  //               }else{

  //                 var rule="/manutencao/tomaraccaoprioridadedifftecnicoproject";

  //               }
  //               jobcardformdata.append("jobcard_tecnicoid1", jobcard_tecnicoid1);

  //               var xhr = new XMLHttpRequest();
  //               // Add any event handlers here...
  //               xhr.open('POST',rule, true);
  //               xhr.send(jobcardformdata);

  //               if(referenciastatus == "New"){

  //                 setTimeout(function(){
  //                    window.location.href="/manutencao/jobcardprojectshome/new";
  //                   }, 4000);

  //               }else{

  //                 setTimeout(function(){
  //                    window.location.href="/manutencao/jobcardprojectshome/inprogress";
  //                   }, 4000);
  //               }

                
  //         });


  //       }

  // });



  $('#jobcardactionprioridade_yes_btn').click(function(){

      var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
      var dadojobtype = $("#recolherdados").attr("dadosjobtype");
      var controlador = 0;
      var jobcardstatus = $("#recolherdados").attr("dadosjobstatus");

      var jobcard_holdactioncont = $("#jobcard_holdaction").val();
      var jobcard_holdreasoncont = $("#jobcard_holdreason").val();
      var jobcard_tecnicoid1cont = $("#jobcard_tecnicoid1").val();


        if(jobcard_holdactioncont == null){

          controlador = 1;

        }else

            if(jobcard_holdactioncont == "Em Espera"){

              if(jobcard_holdreasoncont == ""){
                controlador = 1;
              }
              
            }else{

              if(jobcard_holdreasoncont == ""){
                controlador = 1;
              }


              if(jobcard_tecnicoid1cont == null){
                controlador = 1;
              }

            }
      

        if(controlador == 1){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
           $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
           $('#msg_modal').openModal({dismissible:false});
           $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

        }else{

            $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja tomar acção ':'Do you want to take action <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
          $('#yes_no_modal').openModal({dismissible:false});
          $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
          $('#yes_btn_modal').click(function(e){

                $('#loading').fadeIn().delay(20000).fadeOut();
                var jobcardformdata = new FormData();

                var jobcard_id = referencia;
                jobcardformdata.append("jobcard_id", jobcard_id);

                var jobcard_holdaction = $("#jobcard_holdaction").val();
                jobcardformdata.append("jobcard_holdaction", jobcard_holdaction);

                var jobcard_holdreason = $("#jobcard_holdreason").val();
                jobcardformdata.append("jobcard_holdreason", jobcard_holdreason);

                var jobcard_tecnicoid1 = $("#jobcard_tecnicoid1").val();
                if(jobcard_tecnicoid1 == null){
                  jobcard_tecnicoid1 = "";

                   var rule="/manutencao/tomaraccaoprioridadesametecnico";
                }else{

                  var rule="/manutencao/tomaraccaoprioridadedifftecnico";

                }
                jobcardformdata.append("jobcard_tecnicoid1", jobcard_tecnicoid1);

                var xhr = new XMLHttpRequest();
                // Add any event handlers here...
                xhr.open('POST',rule, true);
                xhr.send(jobcardformdata);


                if(dadojobtype == "Callout"){

                  if (jobcardstatus == "New") {
                    setTimeout(function(){
                     window.location.href="/manutencao/ttnumberhome/inprogress";
                    }, 3500);

                  } 
                  else {
                    setTimeout(function(){
                     window.location.href="/manutencao/ttnumberhome/inprogress";
                    }, 3500);
                  }

                }else{

                  if (jobcardstatus == "New") {
                    setTimeout(function(){
                     window.location.href="/manutencao/preventativemaint/new";
                    }, 3500);

                  }
                   else {
                    setTimeout(function(){
                     window.location.href="/manutencao/preventativemaint/inprogress";
                    }, 3500);
                    
                  }
                }
          });


        }

  });

  $('#jobcardcallcentercommentsproject_yes_btn').click(function(){

    var referencia=$("#recolherdados").attr("dadosreferenciaproject");
    
    var jobcard_callcentercommentscont = $("#jobcard_callcentercomments").val();

    if(jobcard_callcentercommentscont == ""){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
       $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
       $('#msg_modal').openModal({dismissible:false});
       $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

    }else{

       $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja adicionar comentários ':'Do you want to add comments <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
       $('#yes_no_modal').openModal({dismissible:false});
       $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
       $('#yes_btn_modal').click(function(e){
          $('#loading').fadeIn().delay(20000).fadeOut();

          e.stopPropagation();
          // e.stopImmediatePropagation();

          var rule="/manutencao/updatecallcentercommentsproject";
         
          var jobcardformdata = new FormData();

          var jobcard_id = referencia;
          jobcardformdata.append("jobcard_id", jobcard_id);

          var jobcard_callcentercomments = $("#jobcard_callcentercomments").val();
          jobcardformdata.append("jobcard_callcentercomments", jobcard_callcentercomments);

          var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST',rule, true);
          xhr.send(jobcardformdata);


          setTimeout(function(){
            window.location.href="/manutencao/jobcardprojectshome";
           }, 4000);


       });

    }


  });


  $('#jobcardcallcentercomments_yes_btn').click(function(){

    var referencia=$("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype =$("#recolherdados").attr("dadosjobtype");
    var dadosjobttnumberstatus =$("#recolherdados").attr("dadosjobttnumberstatus");
    

    var jobcard_callcentercommentscont = $("#jobcard_callcentercomments").val();
    var jobcard_importancelevel = $("#importance_level").val();
    console.log(jobcard_callcentercommentscont);
    console.log(jobcard_importancelevel);

    if(jobcard_callcentercommentscont == "" || jobcard_importancelevel == null){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
       $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
       $('#msg_modal').openModal({dismissible:false});
       $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

    }else{

       $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja adicionar comentários ':'Do you want to add comments <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
       $('#yes_no_modal').openModal({dismissible:false});
       $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
       $('#yes_btn_modal').click(function(e){
          $('#loading').fadeIn().delay(20000).fadeOut();

          e.stopPropagation();
          // e.stopImmediatePropagation();

          var rule="/manutencao/updatecallcentercomments";
         
          var jobcardformdata = new FormData();

          var jobcard_id = referencia;
          jobcardformdata.append("jobcard_id", jobcard_id);

          var jobcard_callcentercomments = $("#jobcard_callcentercomments").val();
          jobcardformdata.append("jobcard_callcentercomments", jobcard_callcentercomments);
          jobcardformdata.append("jobcard_importancelevel", jobcard_importancelevel);

          var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST',rule, true);
          xhr.send(jobcardformdata);


       if(dadojobtype == "Callout"){

          if(dadosjobttnumberstatus == "New"){
             setTimeout(function(){
            window.location.href="/manutencao/ttnumberhome/new";
           }, 3500);
          }else{
             setTimeout(function(){
            window.location.href="/manutencao/ttnumberhome/inprogress";
           }, 3500);
          }

         
        }else{

          if(dadosjobttnumberstatus == "New"){
             setTimeout(function(){
                window.location.href="/manutencao/preventativemaint/new";
             }, 3500);
          }else{

             setTimeout(function(){
                window.location.href="/manutencao/preventativemaint/inprogress";
             }, 3500);
          }
          
          

        }


       });

    }


  });

  // $('#jobcardcallcentercomments_yes_btn').click(function(){

  //   var referencia=$("#recolherdados").attr("dadosreferenciajobcard");
  //   var dadojobtype =$("#recolherdados").attr("dadosjobtype");
  //   var dadosjobttnumberstatus =$("#recolherdados").attr("dadosjobttnumberstatus");
    

  //   var jobcard_callcentercommentscont = $("#jobcard_callcentercomments").val();
  //   var jobcard_importancelevel = $("#importance_level").val();
  //   console.log(jobcard_callcentercommentscont);
  //   console.log(jobcard_importancelevel);

  //   if(jobcard_callcentercommentscont == "" || jobcard_importancelevel == null){

  //      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
  //      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos !':'Fill all the fields ! <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
  //      $('#msg_modal').openModal({dismissible:false});
  //      $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });

  //   }else{

  //      $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  //      $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja adicionar comentários ':'Do you want to add comments <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
  //      $('#yes_no_modal').openModal({dismissible:false});
  //      $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
  //      $('#yes_btn_modal').click(function(e){
  //         $('#loading').fadeIn().delay(20000).fadeOut();

  //         e.stopPropagation();
  //         // e.stopImmediatePropagation();

  //         var rule="/manutencao/updatecallcentercomments";
         
  //         var jobcardformdata = new FormData();

  //         var jobcard_id = referencia;
  //         jobcardformdata.append("jobcard_id", jobcard_id);

  //         var jobcard_callcentercomments = $("#jobcard_callcentercomments").val();
  //         jobcardformdata.append("jobcard_callcentercomments", jobcard_callcentercomments);
  //         jobcardformdata.append("jobcard_importancelevel", jobcard_importancelevel);

  //         var xhr = new XMLHttpRequest();
  //         // Add any event handlers here...
  //         xhr.open('POST',rule, true);
  //         xhr.send(jobcardformdata);


  //      if(dadojobtype == "Callout"){

  //         if(dadosjobttnumberstatus == "New"){
  //            setTimeout(function(){
  //           window.location.href="/manutencao/ttnumberhome/new";
  //          }, 3500);
  //         }else{
  //            setTimeout(function(){
  //           window.location.href="/manutencao/ttnumberhome/inprogress";
  //          }, 3500);
  //         }

         
  //       }else{

  //         if(dadosjobttnumberstatus == "New"){
  //            setTimeout(function(){
  //               window.location.href="/manutencao/preventativemaint/new";
  //            }, 3500);
  //         }else{

  //            setTimeout(function(){
  //               window.location.href="/manutencao/preventativemaint/inprogress";
  //            }, 3500);
  //         }
          
          

  //       }


  //      });

  //   }


  // });

  $('.mostrarAccaoPrioridadeProject').click(function(){

    var dataholdaction =$(this).attr("dataholdaction");
    var dataholdreason = $(this).attr("dataholdreason");

    $("#jobcard_holdaction").val(dataholdaction);

    $("#jobcard_holdreason").val(dataholdreason);
    $("#jobcard_holdreason").siblings('label').addClass('active');

    $('#jobcardactionprioridade_yes_btn_modal').addClass('hide');
    $('#mostrartecnicosubst').addClass('hide');

    $('#jobcardactionprioridade_modal').openModal({dismissible:false});
      $('#jobcardactionprioridade_cancel_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });

  });

  $('.mostrarAccaoPrioridade').click(function(){

    var dataholdaction =$(this).attr("dataholdaction");
    var dataholdreason = $(this).attr("dataholdreason");

    $("#jobcard_holdaction").val(dataholdaction);

    $("#jobcard_holdreason").val(dataholdreason);
    $("#jobcard_holdreason").siblings('label').addClass('active');

    $('#jobcardactionprioridade_yes_btn_modal').addClass('hide');
    $('#mostrartecnicosubst').addClass('hide');

    $('#jobcardactionprioridade_modal').openModal({dismissible:false});
      $('#jobcardactionprioridade_cancel_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });

  });

  $('.seecallcenterComments').click(function(){

    var datacomments =$(this).attr("datacomments");

    $("#jobcard_callcentercomments").val(datacomments);
    $("#jobcard_callcentercomments").siblings('label').addClass('active');

    $('#jobcardactionprioridade_yes_btn_modal').addClass('hide');
    $('#jobcardcallcentercomments_yes_btn_modal').addClass('hide');

    $('#jobcardcallcentercomments_modal').openModal({dismissible:false});
      $('#jobcardcallcentercomments_cancel_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });

  });

  $('.mostrarrazoessendback').click(function(){

    var razoessendback = $(this).attr("detalhesrazoes");

    $('#msg_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Razões':'Reasons'));
    $('#msg_content_modal').html(razoessendback);
    $('#msg_modal').openModal({dismissible:false});

  });

  $('.retificarjobcard').click(function(){

    var referencia = $(this).attr("data-user-new");
    var dadosjobcard = JSON.parse($("#recolherdados").attr("detalhesjobcards"));


    

    for(var i = 0; i < dadosjobcard.length; i++){

      if(dadosjobcard[i]._id == referencia){
        $("#jobcard_razaoreprovar").val(dadosjobcard[0].jobcard_razaoreprovar);
        $("#jobcard_razaoreprovar").siblings('label').addClass('active');

        break;
      }

    }
    
    $('#reprovarrazao_modal').openModal({dismissible:false});
    $('#reprovarrazao_cancel_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    
    $('#reprovarrazao_yes_btn_modal').addClass('hide');
    
  });



  $(".sendapprovalproject").click(function(){

      var novo=$("#recolherdados").attr("data-user-new");
      var dadousuario = $("#recolherdados").attr("detalhessession");
      

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja mandar para a aprovação ':'Do you want to send for approval <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      $('#loading').fadeIn().delay(20000).fadeOut();
      e.stopPropagation();
      // e.stopImmediatePropagation();

      var jobcardformdata = new FormData();

      var rule="/manutencao/sendforapprovalproject";

      var jobcard_id = novo;
      jobcardformdata.append("jobcard_id", jobcard_id);
      

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST',rule, true);
      xhr.send(jobcardformdata);

      setTimeout(function(){
            window.location.href="/manutencao/jobcardprojectshome/inprogress";
          }, 4000);

       

    });

  });

  // $('#pettycashreportano').change(function(){

  //   var ano = document.getElementById("pettycashreportano").value;
  //   var pettycashreportcolaborador = $("#pettycashreportcolaborador").val();
  //   var dadosanomes = JSON.parse($("#escolherreport").attr("detalhesanosmeses"));
  //   var dadosnomesanomes = JSON.parse($("#escolherreport").attr("detalhesnomesanosmeses"));
  //   var meses = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
    
  //   var pettycashreportmes = document.getElementById("pettycashreportmes");
  //   while (pettycashreportmes.options.length > 0) { 
  //     pettycashreportmes.remove(0); 
  //   }

  //     var opt = document.createElement('option');
  //     opt.value = "Escolha a opção";
  //     opt.innerHTML = "Escolha a opção";
  //     opt.id = "primeiro";
  //     pettycashreportmes.appendChild(opt);

  //     document.getElementById("primeiro").selected = "true";
  //     document.getElementById("primeiro").disabled = "true";

  //     if((pettycashreportcolaborador == "Todos") || (dadosnomesanomes.length == 0)){

  //       var posicaoano = dadosanomes.findIndex(x => parseInt(x._id) === parseInt(ano));
  //       if(posicaoano != -1){
      
  //         for(var j = 0; j < dadosanomes[posicaoano].listames.length; j++){

  //           var opt1 = document.createElement('option');
  //           opt1.value = dadosanomes[posicaoano].listames[j];
  //           opt1.innerHTML = meses[parseInt(dadosanomes[posicaoano].listames[j]) - 1];
  //           pettycashreportmes.appendChild(opt1);
  //           //console.log(dadosclientessite[i].sites[j]);
  //         }
  //       }

  //     }else{

  //       var posicaonome = dadosnomesanomes.findIndex(x => x._id === pettycashreportcolaborador);
  //       var posicaoano = dadosnomesanomes[posicaonome].listaanos.findIndex(x => parseInt(x.ano) === parseInt(ano));

  //       if(posicaoano != -1){
  //         for(var j = 0; j < dadosnomesanomes[posicaonome].listaanos[posicaoano].listames.length; j++){

  //           var opt1 = document.createElement('option');
  //           opt1.value = dadosnomesanomes[posicaonome].listaanos[posicaoano].listames[j];
  //           opt1.innerHTML = meses[parseInt(dadosnomesanomes[posicaonome].listaanos[posicaoano].listames[j]) - 1];
  //           pettycashreportmes.appendChild(opt1);
  //           //console.log(dadosclientessite[i].sites[j]);
  //         }
  //       }
  //     }
    
  //   // var posicaoano = dadosanomes.findIndex(x => parseInt(x._id) === parseInt(nm));
  //   // console.log(posicaoano);

  //   // if(posicaoano != -1){
      
  //   //   for(var j = 0; j < dadosanomes[posicaoano].listames.length; j++){

  //   //     var opt = document.createElement('option');
  //   //     opt.value = dadosanomes[posicaoano].listames[j];
  //   //     opt.innerHTML = meses[parseInt(dadosanomes[posicaoano].listames[j]) - 1];
  //   //     pettycashreportmes.appendChild(opt);
  //   //     //console.log(dadosclientessite[i].sites[j]);
  //   //   }
  //   // }
  // });

  // $('#pettycashreportcolaborador').change(function(){

  //   var pettycashreportcolaborador = $("#pettycashreportcolaborador").val();
  //   var dadosnomesanomes = JSON.parse($("#escolherreport").attr("detalhesnomesanosmeses"));
  //   var dadosanomes = JSON.parse($("#escolherreport").attr("detalhesanosmeses"));
  //   var pettycashreportano = document.getElementById("pettycashreportano");

  //   // remover as opcoes pettycashreportano
  //     while (pettycashreportano.options.length > 0) { 
  //       pettycashreportano.remove(0); 
  //     }

  //     var opt = document.createElement('option');
  //     opt.value = "Escolha a opção";
  //     opt.innerHTML = "Escolha a opção";
  //     opt.id = "segundo";
  //     pettycashreportano.appendChild(opt);

  //     document.getElementById("segundo").selected = "true";
  //     document.getElementById("segundo").disabled = "true";


  //   if((pettycashreportcolaborador == "Todos") || (dadosnomesanomes.length == 0)){

  //       if(dadosanomes.length != 0){

  //           for(var j = 0; j < dadosanomes.length; j++){

  //               var opt4 = document.createElement('option');
  //               opt4.value = dadosanomes[j]._id;
  //               opt4.innerHTML = dadosanomes[j]._id;
  //               pettycashreportano.appendChild(opt4);
  //           }
  //       }

  //   }else{

  //     var posicaonome = dadosnomesanomes.findIndex(x => x._id === pettycashreportcolaborador);

  //       if(posicaonome != -1){
        
  //         for(var j = 0; j < dadosnomesanomes[posicaonome].listaanos.length; j++){

  //           var opt4 = document.createElement('option');
  //           opt4.value = dadosnomesanomes[posicaonome].listaanos[j].ano;
  //           opt4.innerHTML = dadosnomesanomes[posicaonome].listaanos[j].ano;
  //           pettycashreportano.appendChild(opt4);
            
  //         }
  //       }

  //   }

  // });

  $(".escolheform").click(function(){

    document.getElementById('formulariocliente').checked = false;
    document.getElementById('formulariofornecedor').checked = false;

    $('#clientesupp_modal').openModal({dismissible:false});
    // $('#clientesuppopt_cancel_btn_modal_').click(function(e){});
    $('#clientesuppopt_yes_btn_modal').click(function(e){

      e.stopPropagation();
      e.stopImmediatePropagation();

      var clientesuppopt=$("input[name='clientesuppopt']:checked").val();
      
      if(clientesuppopt == undefined) {

        $('#clientesuppopt_yes_btn_modal').addClass('apply-shake');
        $('#paragrafoatt').removeClass('hide');


      }else{

        window.location.href="/cliente/novo/" + clientesuppopt;
      }

      
    });

  });

  controle_modalclientesupp.addEventListener("animationend", (e) => {
    controle_modalclientesupp.classList.remove("apply-shake");
    $('#paragrafoatt').addClass('hide');
 });

  $("#carta_apresentacao_empresa1").click(function(){
        var documento=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/cliente/downloaddocumento', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({documento}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };

      });

      $("#alvara1").click(function(){
        var documento=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/cliente/downloaddocumento', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({documento}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };

      });

      $("#certidao_entidades_legais1").click(function(){
        var documento=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/cliente/downloaddocumento', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({documento}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };

      });

      $("#nuit1").click(function(){
        var documento=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/cliente/downloaddocumento', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({documento}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };

      });

      $("#nuel1").click(function(){
        var documento=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/cliente/downloaddocumento', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({documento}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };

      });

      $("#carta_confirmacao_banco1").click(function(){
        var documento=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/cliente/downloaddocumento', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({documento}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };

      });

  //Popup Escolher tipo de report
  $("#escolherreport").click(function(){

    var dadoscolaboradoresmes = JSON.parse($("#escolherreport").attr("detalhescolaboradoresmes"));
    var dadosnomesanomes = JSON.parse($("#escolherreport").attr("detalhesnomesanosmeses"));
    var dadosanomes = JSON.parse($("#escolherreport").attr("detalhesanosmeses"));
    var dadosmes = JSON.parse($("#escolherreport").attr("detalhesmeses"));
    var meses = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept','Oct', 'Nov', 'Dec'];
    var nome= $("#escolherreport").attr("detalheusuario");

    
    // preencher os colaboradores 
    var pettycashreportcolaborador = document.getElementById("pettycashreportcolaborador");
    // remover as opcoes pettycashreportcolaborador
    while (pettycashreportcolaborador.options.length > 0) { 
      pettycashreportcolaborador.remove(0); 
    }

      var opt1 = document.createElement('option');
      opt1.value = "Escolha a opção";
      opt1.innerHTML = "Escolha a opção";
      opt1.id = "segundo1";
      pettycashreportcolaborador.appendChild(opt1);

      document.getElementById("segundo1").selected = "true";
      document.getElementById("segundo1").disabled = "true";

      if (dadoscolaboradoresmes.length != 0) {
        var opt2 = document.createElement('option');
        opt2.value = "All";
        opt2.innerHTML = "All";
        pettycashreportcolaborador.appendChild(opt2);

      
      for(var i = 0; i < dadoscolaboradoresmes.length; i++){

          var opt3 = document.createElement('option');
          opt3.value = dadoscolaboradoresmes[i]._id;
          opt3.innerHTML = dadoscolaboradoresmes[i]._id;
          pettycashreportcolaborador.appendChild(opt3);
      }
    }else{

       var opt2 = document.createElement('option');
        opt2.value = nome;
        opt2.innerHTML = nome;
        pettycashreportcolaborador.appendChild(opt2);

    }

    // preencher os anos
    var pettycashreportanofrom = document.getElementById("pettycashreportanofrom");
    var pettycashreportanoto = document.getElementById("pettycashreportanoto");

    // remover as opcoes pettycashreportcolaborador
    while (pettycashreportanofrom.options.length > 0) { 
      pettycashreportanofrom.remove(0); 
    }

      var opt4 = document.createElement('option');
      opt4.value = "Escolha a opção";
      opt4.innerHTML = "Escolha a opção";
      opt4.id = "segundo4";
      pettycashreportanofrom.appendChild(opt4);

      document.getElementById("segundo4").selected = "true";
      document.getElementById("segundo4").disabled = "true";

      for(var i = 0; i < dadosanomes.length; i++){

          var opt5 = document.createElement('option');
          opt5.value = dadosanomes[i]._id;
          opt5.innerHTML = dadosanomes[i]._id;
          pettycashreportanofrom.appendChild(opt5);
      }

    while (pettycashreportanoto.options.length > 0) { 
      pettycashreportanoto.remove(0); 
    }

      var opt6 = document.createElement('option');
      opt6.value = "Escolha a opção";
      opt6.innerHTML = "Escolha a opção";
      opt6.id = "segundo6";
      pettycashreportanoto.appendChild(opt6);

      document.getElementById("segundo6").selected = "true";
      document.getElementById("segundo6").disabled = "true";

      for(var i = 0; i < dadosanomes.length; i++){

          var opt7 = document.createElement('option');
          opt7.value = dadosanomes[i]._id;
          opt7.innerHTML = dadosanomes[i]._id;
          pettycashreportanoto.appendChild(opt7);
      }

       // preencher os meses
      var pettycashreportmesfrom = document.getElementById("pettycashreportmesfrom");
      var pettycashreportmesto = document.getElementById("pettycashreportmesto");

      // / remover as opcoes pettycashreportcolaborador
      while (pettycashreportmesfrom.options.length > 0) { 
        pettycashreportmesfrom.remove(0); 
      }

        var opt8 = document.createElement('option');
        opt8.value = "Escolha a opção";
        opt8.innerHTML = "Escolha a opção";
        opt8.id = "segundo8";
        pettycashreportmesfrom.appendChild(opt8);

        document.getElementById("segundo8").selected = "true";
        document.getElementById("segundo8").disabled = "true";

        for(var i = 0; i < dadosmes.length; i++){

            var opt9 = document.createElement('option');
            opt9.value = dadosmes[i]._id;
            opt9.innerHTML = meses[parseInt(dadosmes[i]._id) - 1];
            pettycashreportmesfrom.appendChild(opt9);
        }

      while (pettycashreportmesto.options.length > 0) { 
        pettycashreportmesto.remove(0); 
      }

        var opt10 = document.createElement('option');
        opt10.value = "Escolha a opção";
        opt10.innerHTML = "Escolha a opção";
        opt10.id = "segundo10";
        pettycashreportmesto.appendChild(opt10);

        document.getElementById("segundo10").selected = "true";
        document.getElementById("segundo10").disabled = "true";

        for(var i = 0; i < dadosmes.length; i++){

            var opt11 = document.createElement('option');
            opt11.value = dadosmes[i]._id;
            opt11.innerHTML = meses[parseInt(dadosmes[i]._id)-1]; 
            pettycashreportmesto.appendChild(opt11);
        }

    

    $('#pettycashreport_modal').openModal({dismissible:false});
    $('#pettycashreport_yes_btn_modal').click(function(e){

        e.stopPropagation();
        e.stopImmediatePropagation();

        var pettycashreportcolaborador = $("#pettycashreportcolaborador").val();
        var pettycashreportanofrom = $("#pettycashreportanofrom").val();
        var pettycashreportmesfrom = $("#pettycashreportmesfrom").val();
        console.log(pettycashreportanofrom)
        var pettycashreportanoto = $("#pettycashreportanoto").val();
        var pettycashreportmesto = $("#pettycashreportmesto").val();



        if(((pettycashreportcolaborador == null) && (pettycashreportanofrom == null) && (pettycashreportmesfrom == null)) || (pettycashreportcolaborador == null)) {

          $('#pettycashreport_yes_btn_modal').addClass('apply-shake');
          $('#paragrafoatt1').removeClass('hide');

        }else
            if( (((pettycashreportanofrom != null) && (pettycashreportanoto == null)) || ((pettycashreportmesfrom != null) && (pettycashreportmesto == null))) || (((pettycashreportanofrom == null) && (pettycashreportanoto != null)) || ((pettycashreportmesfrom == null) && (pettycashreportmesto != null)))){

              $('#pettycashreport_yes_btn_modal').addClass('apply-shake');
              $('#paragrafoatt3').removeClass('hide');

            }else
                if(((parseInt(pettycashreportanofrom) == parseInt(pettycashreportanoto)) && (parseInt(pettycashreportmesfrom) > parseInt(pettycashreportmesto))) || (pettycashreportanofrom > pettycashreportanoto) ){

                  $('#pettycashreport_yes_btn_modal').addClass('apply-shake');
                  $('#paragrafoatt4').removeClass('hide');
                }else{

                  var rangeTime, colaborador, anoFrom, mesFrom, anoTo, mesTo;

                  if(pettycashreportcolaborador == "All"){

                    colaborador = pettycashreportcolaborador;

                  }else{

                    nome_colab = pettycashreportcolaborador.split(" ");
                    colaborador = nome_colab[0] + '_' + nome_colab[1];

                  }

                  if(pettycashreportanofrom == null){

                      if(pettycashreportmesfrom == null){

                        window.location.href="/pettycash/printreportall/" + colaborador;
                      //   setTimeout(function(){
                      //     window.location.href="/pettycash/accountcontrol_home";
                      // }, 1000);

                      }else{

                        rangeTime = pettycashreportmesfrom + "_to_" +  pettycashreportmesto;
                        window.location.href="/pettycash/printreportmonth/" + colaborador + "/" + rangeTime;
                      //   setTimeout(function(){
                      //     window.location.href="/pettycash/accountcontrol_home";
                      // }, 1000);
                        
                      }

                  }else{

                    if(pettycashreportmesfrom == null){

                        rangeTime =  pettycashreportanofrom + "_to_" +  pettycashreportanoto;
                        window.location.href="/pettycash/printreportyear/" + colaborador + "/" + rangeTime;
                      //   setTimeout(function(){
                      //     window.location.href="/pettycash/accountcontrol_home";
                      // }, 1000);

                      }else{

                        rangeTime = pettycashreportmesfrom + "_" + pettycashreportanofrom + "_to_" + pettycashreportmesto +  "_" +  pettycashreportanoto;
                        window.location.href="/pettycash/printreportfull/" + colaborador + "/" + rangeTime;
                      }

                  }


                  


                }




    });


  });

  controle_modalpettycashreport.addEventListener("animationend", (e) => {
    controle_modalpettycashreport.classList.remove("apply-shake");
    $('#paragrafoatt1').addClass('hide');
    $('#paragrafoatt3').addClass('hide');
    $('#paragrafoatt4').addClass('hide');
 });


  $('.editjobcardbackoffice').click(function(){

       var jobcardreferencia = JSON.parse($("#approvalinfo").attr("detalhesjobcard"));
       var dadosjobcards = JSON.parse($("#approvalinfo").attr("todosjobcards"));
       

       var jobcard_ttnumbercont= $("#jobcard_ttnumber").val();
       var controlador = 0;
       

       if(jobcard_ttnumbercont == ""){
          controlador = 1;
       }else{
          var posicaottnumber = dadosjobcards.findIndex(x => parseInt(x.jobcard_ttnumber) === parseInt(jobcard_ttnumbercont));
          if(posicaottnumber != -1){
             controlador = 2;
          }

       }

       if(controlador == 1){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

       }else
          if(controlador == 2){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Esse ticket já se encontra registrado, escolha outro.':'This ticket is already registered, choose another.'))
             $('#msg_modal').openModal();

          }else{

             $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja actualizar esta folha de serviço ':'Do you want to update this jobcard <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
             $('#yes_no_modal').openModal({dismissible:false});
             $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
             $('#yes_btn_modal').click(function(e){

                   $('#loading').fadeIn().delay(20000).fadeOut();
                   e.stopPropagation();

                   var rule="/manutencao/updateJobcardPlanned/" + jobcardreferencia[0]._id;
                   var jobcardformdata = new FormData();

                   var jobcard_ttnumber= $("#jobcard_ttnumber").val();
                   jobcardformdata.append("jobcard_ttnumber", jobcard_ttnumber);

                   var jobcard_quotacao=$("#jobcard_quotacao").val();
                   jobcardformdata.append("jobcard_quotacao", jobcard_quotacao);



                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

                  setTimeout(function(){
                      window.location.href="/manutencao/detalhesJobcardPlanned/" + jobcardreferencia[0]._id;
                    }, 4500);
                   

             });



          }


 });

 $(".cancelJobcard").click(function(){
  $('#canceljobcard_modal').openModal({dismissible:false});
 });

 $("#canceljobcard_confirm_btn").click(function(){
  
  if(validar()){
    $('#yes_no_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Deseja realmente cancelar este jobcard':'Do you really want to cancel this jobcard <b>') + (($(".lang-picker > .selected").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      var jobcardformdata = new FormData();

      var rule="/manutencao/canceljobcard";

      var idjobcard = $(".cancelJobcard").attr("JobcardId");
      var cancel_reason = $("#cancel_reason").val();
      console.log(idjobcard, cancel_reason);

      jobcardformdata.append("idjobcard", idjobcard);
      jobcardformdata.append("cancel_reason", cancel_reason);

      var xhr = new XMLHttpRequest();
      xhr.open('POST', rule, true);
      xhr.send(jobcardformdata);

      setTimeout(function(){
        window.location.href="/manutencao/preventativemaint/inprogress";
      }, 3000);
    
      $("#yes_no_title_modal").closeModal();
      $("#canceljobcard_modal").closeModal();
   });
  }
 });


  $(".editjobcard_project").click(function(){

    // console.log($("#jobcard_siteidview").val())

       var dadosprojectos = JSON.parse($("#recolherdados").attr("todosprojects"));
       var referencia = $("#recolherdados").attr("data-user-new");
       var estadoactual = $("#recolherdados").attr("dataestado");
       var controlador = 0;

       var jobcard_siteidview= $("#jobcard_siteidview").val();
       var jobcard_siteidselect= $("#jobcard_siteidselect").val();
       var jobcard_siteidinput= $("#jobcard_siteidinput").val();
       var jobcard_siteidview1= $("#jobcard_siteidview1").val();

       var jobcard_projectnumbercont= $("#jobcard_projectnumber").val();
       // console.log($("#jobcard_siteidview1").val())
       var posicaoprojectnumber = dadosprojectos.findIndex(x => x.jobcard_projectnumber === jobcard_projectnumbercont);
       

       if((jobcard_projectnumbercont == "") || ($("#jobcard_jobinfo").val() == "")){
         controlador = 1;

       }else
          if(jobcard_siteidview != undefined){

             if(jobcard_siteidview != null){

                if(jobcard_siteidview.length == 0){
                   controlador = 1;
                }

             }else
                if(($("#jobcard_siteidselect").val().length = 0) && ($("#jobcard_siteidinput").val() == "")){
                   controlador = 1;
                }
          }else
             if(($("#jobcard_siteidselect").val().length = 0) && ($("#jobcard_siteidinput").val() == "") && (jobcard_siteidview1 == "")){
                controlador = 1;

             }else
                if(posicaoprojectnumber != -1){
                   controlador = 2;
                }
             

       if(controlador == 1){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
          $('#msg_modal').openModal();

       }else

          if(controlador == 2){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Esse número de projecto já se encontra registrado, escolha outro.':'This project number is already registered, choose another.'))
             $('#msg_modal').openModal();

          }else{

                $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
                $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja criar este projecto ':'Do you want to create this project <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
                $('#yes_no_modal').openModal({dismissible:false});
                $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
                $('#yes_btn_modal').click(function(e){
                   e.stopPropagation();

                   $('#loading').fadeIn().delay(20000).fadeOut();

                   var rule="/manutencao/editjobcardproject";
                   var jobcardformdata = new FormData();

                   jobcardformdata.append("jobcard_id", referencia);
                   
                   var jobcard_projectnumber= $("#jobcard_projectnumber").val();
                   jobcardformdata.append("jobcard_projectnumber", jobcard_projectnumber);

                   var jobcard_clienteidprojects= $("#jobcard_clienteidprojects").val();
                   jobcardformdata.append("jobcard_clienteid", jobcard_clienteidprojects);

                   var jobcard_departamento= $("#jobcard_departamento").val();
                   jobcardformdata.append("jobcard_departamento", jobcard_departamento);

                   var jobcard_siteidview= $("#jobcard_siteidview").val();

                   if(jobcard_siteidview != undefined){

                      if(jobcard_siteidview != null){

                         for(var i = 0; i < jobcard_siteidview.length; i++){
                              jobcardformdata.append("jobcard_site", jobcard_siteidview[i]);
                            }

                      }else{

                         var jobcard_siteidselect= $("#jobcard_siteidselect").val();
                         var jobcard_siteidinput= $("#jobcard_siteidinput").val();

                         if($("#jobcard_siteidselect").val().length != 0){

                            for(var i = 0; i < jobcard_siteidselect.length; i++){
                              jobcardformdata.append("jobcard_site", jobcard_siteidselect[i]);
                            }
                         }else{
                            
                            jobcardformdata.append("jobcard_site", jobcard_siteidinput);

                         }

                      }
                   }else{

                      var jobcard_siteidview1= $("#jobcard_siteidview1").val();

                      if(jobcard_siteidview1 != ""){

                         jobcardformdata.append("jobcard_site", jobcard_siteidview1);

                      }else{

                         var jobcard_siteidselect= $("#jobcard_siteidselect").val();
                         var jobcard_siteidinput= $("#jobcard_siteidinput").val();

                         if($("#jobcard_siteidselect").val().length != 0){

                            for(var i = 0; i < jobcard_siteidselect.length; i++){
                              jobcardformdata.append("jobcard_site", jobcard_siteidselect[i]);
                            }
                         }else{
                            
                            jobcardformdata.append("jobcard_site", jobcard_siteidinput);

                         }

                      }

                   }

                   var jobcard_jobinfo=$("#jobcard_jobinfo").val();
                   jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfo);


                  var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

                  if(estadoactual == "New"){

                    setTimeout(function(){

                      window.location.href="/manutencao/jobcardprojectshome/new";
                      
                    }, 4000);

                  }else
                      if(estadoactual == "In Progress"){

                         setTimeout(function(){

                          window.location.href="/manutencao/jobcardprojectshome/inprogress";
                      
                        }, 4000);

                      }
                   
                   
                   
                });

             }

  
  });


  $('.editjobcardcallcenter').click(function(){

       var jobcardreferencia = JSON.parse($("#approvalinfo").attr("detalhesjobcard"));
       var dadosjobcards = JSON.parse($("#approvalinfo").attr("todosjobcards"));
       var dadojobtype = jobcardreferencia[0].jobcard_jobtype;

       var jobcard_ttnumbercont= $("#jobcard_ttnumber").val();
       var controlador = 0;
       

       if(($("#jobcard_jobinfoview").val() == undefined) && ($("#jobcard_jobinfoview1").val() == null) && ($("#jobcard_jobinfoselect").val().length == 0) && ($("#jobcard_jobinfoinput").val() == "")){
          controlador = 1;
       }else
       // if()
       if(($("#jobcard_jobinfoview").val() == undefined) && ($("#jobcard_jobinfoview1").val() != null)  && ($("#jobcard_jobinfoview1").val().length == 0) && ($("#jobcard_jobinfoselect").val().length == 0) && ($("#jobcard_jobinfoinput").val() == "")){
          controlador = 1
       }else

       if(($("#jobcard_jobinfoview1").val() == undefined) && ($("#jobcard_jobinfoview").val() == "") && ($("#jobcard_jobinfoselect").val().length == 0) && ($("#jobcard_jobinfoinput").val() == "")){
          controlador = 1;
       }else

       if(($("#jobcard_siteidview").val() == undefined) && ($("#jobcard_siteidview1").val() == null) && ($("#jobcard_siteidselectttnumber").val() == null) && ($("#jobcard_siteidinputttnumber").val() == "")){
          controlador = 1;
       }else

       if(($("#jobcard_siteidview1").val() == undefined) && ($("#jobcard_siteidview").val() == "") && ($("#jobcard_siteidselectttnumber").val() == null) && ($("#jobcard_siteidinputttnumber").val() == "")){
          controlador = 1;
       }else

       if((jobcard_ttnumbercont == "") || ($("#jobcard_call").val().length == 0)){
          controlador = 1;
       }else{
          var posicaottnumber = dadosjobcards.findIndex(x => parseInt(x.jobcard_ttnumber) === parseInt(jobcard_ttnumbercont));
          if(posicaottnumber != -1){
             controlador = 2;
          }

       }

       if(controlador == 1){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

       }else
          if(controlador == 2){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Esse ticket já se encontra registrado, escolha outro.':'This ticket is already registered, choose another.'))
             $('#msg_modal').openModal();

          }else{

             $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja actualizar esta folha de serviço ':'Do you want to update this jobcard <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
             $('#yes_no_modal').openModal({dismissible:false});
             $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
             $('#yes_btn_modal').click(function(e){

                   $('#loading').fadeIn().delay(20000).fadeOut();
                   e.stopPropagation();

                   var rule="/manutencao/updateJobcard/" + jobcardreferencia[0]._id;
                   var jobcardformdata = new FormData();

                   var jobcard_ttnumber= $("#jobcard_ttnumber").val();
                   jobcardformdata.append("jobcard_ttnumber", jobcard_ttnumber);

                   var jobcard_call=$("#jobcard_call").val();
                   for(var i = 0; i < jobcard_call.length; i++){
                     jobcardformdata.append("jobcard_call", jobcard_call[i]);
                   }

                   var jobcard_departamento=$("#jobcard_departamento").val();
                   jobcardformdata.append("jobcard_departamento", jobcard_departamento);


                   var jobcard_clienteid=$("#jobcard_clienteid").val();
                   jobcardformdata.append("jobcard_clienteid", jobcard_clienteid);

                   // jobinfo
                   var jobcard_jobinfoview=$("#jobcard_jobinfoview").val();
                   if(jobcard_jobinfoview == undefined){

                      var jobcard_jobinfoview1=$("#jobcard_jobinfoview1").val();
                      if((jobcard_jobinfoview1 != null) && (jobcard_jobinfoview1.length != 0)){
                         for(var i = 0; i < jobcard_jobinfoview1.length; i++){
                            jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoview1[i]);
                         }
                      }else{

                         var jobcard_jobinfoselect=$("#jobcard_jobinfoselect").val();
                         if(jobcard_jobinfoselect.length != 0){

                            for(var i = 0; i < jobcard_jobinfoselect.length; i++){
                               jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoselect[i]);
                            }

                         }else{
                            var jobcard_jobinfoinput=$("#jobcard_jobinfoinput").val();
                            jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoinput);
                         }
                      }
                      
                   }else{
                      var jobcard_jobinfoview=$("#jobcard_jobinfoview").val();
                      if(jobcard_jobinfoview != ""){
                         jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoview);
                      }else{

                          var jobcard_jobinfoselect=$("#jobcard_jobinfoselect").val();
                         if(jobcard_jobinfoselect.length != 0){

                            for(var i = 0; i < jobcard_jobinfoselect.length; i++){
                               jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoselect[i]);
                            }

                         }else{
                            var jobcard_jobinfoinput=$("#jobcard_jobinfoinput").val();
                            jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoinput);
                         }
                      }
                   }


                   // site
                   var jobcard_siteidview=$("#jobcard_siteidview").val();
                   if(jobcard_siteidview == undefined){

                      var jobcard_siteidview1=$("#jobcard_siteidview1").val();
                      if(jobcard_siteidview1 != null){
                         jobcardformdata.append("jobcard_siteid", jobcard_siteidview1);
                         
                      }else{

                         var jobcard_siteidselectttnumber=$("#jobcard_siteidselectttnumber").val();
                         if(jobcard_siteidselectttnumber != null){

                            jobcardformdata.append("jobcard_siteid", jobcard_siteidselectttnumber);

                         }else{
                            var jobcard_siteidinputttnumber=$("#jobcard_siteidinputttnumber").val();
                            jobcardformdata.append("jobcard_siteid", jobcard_siteidinputttnumber);
                         }
                      }
                      
                   }else{
                      var jobcard_siteidview=$("#jobcard_siteidview").val();
                      if(jobcard_siteidview != ""){
                         jobcardformdata.append("jobcard_siteid", jobcard_siteidview);
                      }else{

                         var jobcard_siteidselectttnumber=$("#jobcard_siteidselectttnumber").val();
                         if(jobcard_siteidselectttnumber != null){

                            jobcardformdata.append("jobcard_siteid", jobcard_siteidselectttnumber);

                         }else{
                            var jobcard_siteidinputttnumber=$("#jobcard_siteidinputttnumber").val();
                            jobcardformdata.append("jobcard_siteid", jobcard_siteidinputttnumber);
                         }
                      }
                   }



                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

                   if(dadojobtype == "Callout"){
              
                       setTimeout(function(){
                         window.location.href="/manutencao/detalhesJobcardCallOut/" + jobcardreferencia[0]._id;
                       }, 4000);

                   }else{
                     
                     setTimeout(function(){
                         window.location.href="/manutencao/detalhesJobcardPlanned/" + jobcardreferencia[0]._id;
                       }, 4000);
                   }

             });



          }


 });
 
 $('.editjobcardcallcenter_project').click(function(){

       var jobcardreferencia = JSON.parse($("#approvalinfo").attr("detalhesjobcard"));
       var dadosjobcards = JSON.parse($("#approvalinfo").attr("todosjobcards"));
       var dadojobtype = jobcardreferencia[0].jobcard_jobtype;

       var jobcard_ttnumbercont= $("#jobcard_ttnumber").val();
       var controlador = 0;

       if((jobcard_ttnumbercont == "") || ($("#jobcard_call").val().length == 0) || ($("#jobcard_jobinfo").val().length == 0)){

          controlador = 1;
       }else{

          var posicaottnumber = dadosjobcards.findIndex(x => parseInt(x.jobcard_ttnumber) === parseInt(jobcard_ttnumbercont));
          if(posicaottnumber != -1){
             controlador = 2;
          }

       }

       if(controlador == 1){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

       }else
          if(controlador == 2){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Esse ticket já se encontra registrado, escolha outro.':'This ticket is already registered, choose another.'))
             $('#msg_modal').openModal();

          }else{

             $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja actualizar esta folha de serviço ':'Do you want to update this jobcard <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
             $('#yes_no_modal').openModal({dismissible:false});
             $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
             $('#yes_btn_modal').click(function(e){

                   $('#loading').fadeIn().delay(20000).fadeOut();
                   e.stopPropagation();

                   var rule="/manutencao/updateJobcard/" + jobcardreferencia[0]._id;
                   var jobcardformdata = new FormData();

                   var jobcard_ttnumber= $("#jobcard_ttnumber").val();
                   jobcardformdata.append("jobcard_ttnumber", jobcard_ttnumber);

                   var jobcard_call=$("#jobcard_call").val();
                   for(var i = 0; i < jobcard_call.length; i++){
                     jobcardformdata.append("jobcard_call", jobcard_call[i]);
                   }

                   var jobcard_departamento=$("#jobcard_departamento").val();
                   jobcardformdata.append("jobcard_departamento", jobcard_departamento);

                   var jobcard_jobinfo=$("#jobcard_jobinfo").val();
                   for(var i = 0; i < jobcard_jobinfo.length; i++){
                     jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfo[i]);
                   }

                   var jobcard_clienteid=$("#jobcard_clienteid1").val();
                   jobcardformdata.append("jobcard_clienteid", jobcard_clienteid);

                   var jobcard_siteid=$("#jobcard_siteid1").val();
                   jobcardformdata.append("jobcard_siteid", jobcard_siteid);

                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

                   setTimeout(function(){
                      window.location.href="/manutencao/detalhesJobcardCallOutProject/" + jobcardreferencia[0]._id;
                    }, 4000);
             });



          }


 });


  //Popup TT Number

  $("#createnewttnumber").click(function(){

    var dadosjobcards = JSON.parse($("#recolherdados").attr("detalhesjobcards"));
    var dadosjobcardscallout = JSON.parse($("#recolherdados").attr("detalhesjobcardscallout"));
    var controlador = 0;

    var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
    var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
    var ano = (new Date()).getFullYear();
    var priority = $("#jobcard_priority").val();
    var datactual = dia + "/" + mes + "/" + ano;
    var ttnumberform_date = document.forms["ttnumbercalloutform"]["jobcard_datareporte"].value;
    console.log("ttnumberdate "+typeof(ttnumberform_date));
    console.log("dataactual " +typeof(datactual));
    console.log("data actual: "+datactual);
    console.log("data reportada: "+ttnumberform_date);
    console.log(priority);

    var jobcard_ttnumbercont= $("#jobcard_ttnumber").val();
    var posicaottnumber = dadosjobcards.findIndex(x => parseInt(x.jobcard_ttnumber) === parseInt(jobcard_ttnumbercont));

    var jobcard_siteidselectttnumber= $("#jobcard_siteidselectttnumber").val();
    var jobcard_siteidinputttnumber= $("#jobcard_siteidinputttnumber").val();
    
    if (datactual < ttnumberform_date){
      controlador = 4;
    }

    if(dadosjobcardscallout.length != 0){

      if($("#jobcard_siteidselectttnumber").val() != null){
        var posicaositeid = dadosjobcardscallout.findIndex(x => x.jobcard_siteid === jobcard_siteidselectttnumber);
      }else{
        var posicaositeid = dadosjobcardscallout.findIndex(x => x.jobcard_site == jobcard_siteidinputttnumber);
      }

    }else{

      posicaositeid = -1;
    }

    if(($("#jobcard_jobinfoselect").val().length == 0) && ($("#jobcard_jobinfoinput").val() == "")){
       controlador = 1;

    }else

    if(($("#jobcard_siteidselectttnumber").val() == null) && ($("#jobcard_siteidinputttnumber").val() == "")){
       controlador = 1;

    }else
    
    // if( ((jobcard_ttnumbercont == "") && ( $("#jobcard_clienteid").val() == "5e71cba0ccff6e17448e12d4")) || ($("#jobcard_priority").val() == null) || ($("#jobcard_clienteid").val() == null) || ($("#jobcard_call").val().length == 0) || ($("#jobcard_departamentottnumber").val() == null) || ($("#jobcard_tecnicoid").val() == null) || ($("#jobcard_reportnmcoperator").val() == "") || ($("#jobcard_datareporte").val() == "") || ($("#jobcard_horareporte").val() == "")){
      if( ((jobcard_ttnumbercont == "") && ( $("#jobcard_clienteid").val() == "5e71cba0ccff6e17448e12d4") ) || ($("#jobcard_priority").val() == null) || ($("#jobcard_clienteid").val() == null) || ($("#jobcard_call").val().length == 0) || ($("#jobcard_departamentottnumber").val() == null) || ($("#jobcard_tecnicoid").val() == null) || ( ($("#jobcard_reportnmcoperator").val() == "") && ( $("#jobcard_clienteid").val() == "5e71cba0ccff6e17448e12d4") ) || ($("#jobcard_datareporte").val() == "") || ($("#jobcard_horareporte").val() == "")){
        controlador = 1;

    }else

        if(posicaottnumber != -1){
          controlador = 2;

       }else
          if(posicaositeid != -1){

             controlador = 3;
             var referenciajobcard = dadosjobcardscallout[posicaositeid]._id;

          }
          

    if(controlador == 1){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
       $('#msg_modal').openModal();

    }else

       if(controlador == 2){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Esse ticket já se encontra registrado, escolha outro.':'This ticket is already registered, choose another.'))
          $('#msg_modal').openModal();

        }else if (controlador == 4) {
          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'A data relatada está adiantada em relação à data actual. Escolha outra data.':'The reporting date is ahead of the current date. Choose another.'))
          $('#msg_modal').openModal();
          return false;

       }else

          if(controlador == 3){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Este site possui uma ocorrência que ainda não foi concluída. As falhas serão acrescentadas na folha de serviço já existente.':'This site has an occurrence that has not yet been completed. Faults will be added to the existing jobcard.') +(($(".lang-picker").attr("value")=="pt")?'':""))
             $('#msg_modal').openModal({dismissible:false});
             $('#ok_btn_modal').click(function(e){
                e.stopPropagation();
                $('#loading').fadeIn().delay(20000).fadeOut();


                var rule="/manutencao/addmorefaluts/" + referenciajobcard;
                var jobcardformdata = new FormData();

                var jobcard_ttnumber= $("#jobcard_ttnumber").val();
                jobcardformdata.append("jobcard_ttnumber", jobcard_ttnumber);

                var jobcard_call=$("#jobcard_call").val();
                for(var i = 0; i < jobcard_call.length; i++){
                  jobcardformdata.append("jobcard_call", jobcard_call[i]);
                }

                if($("#jobcard_jobinfoselect").val().length != 0){

                   var jobcard_jobinfoselect=$("#jobcard_jobinfoselect").val();
                   for(var i = 0; i < jobcard_jobinfoselect.length; i++){
                      jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoselect[i]);
                   }

                }else{
                   var jobcard_jobinfoinput=$("#jobcard_jobinfoinput").val();
                   jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoinput);
                }

                

                var xhr = new XMLHttpRequest();
               // Add any event handlers here...
               xhr.open('POST',rule, true);
               xhr.send(jobcardformdata);
                
                setTimeout(function(){

                   window.location.href="/manutencao/detalhesJobcardCallOut/" + referenciajobcard;
                   
               }, 4000);

                

             });

          }else{

             $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja criar esta folha de serviço ':'Do you want to create this jobcard <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
             $('#yes_no_modal').openModal({dismissible:false});
             $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
             $('#yes_btn_modal').click(function(e){
                e.stopPropagation();

                $('#loading').fadeIn().delay(20000).fadeOut();

                var rule="/manutencao/novojobcard";
                var jobcardformdata = new FormData();
                
                var jobcard_ttnumber= $("#jobcard_ttnumber").val();
                jobcardformdata.append("jobcard_ttnumber", jobcard_ttnumber);

                var jobcard_priority = $("#jobcard_priority").val();
                jobcardformdata.append("jobcard_priority", jobcard_priority);

                var jobcard_cod=Date.now();
                jobcardformdata.append("jobcard_cod", jobcard_cod);

                var jobcard_call=$("#jobcard_call").val();
                // console.log(jobcard_call)
                for(var i = 0; i < jobcard_call.length; i++){
                  jobcardformdata.append("jobcard_call", jobcard_call[i]);
                }

                var ttnumber_status="New";
                jobcardformdata.append("ttnumber_status", ttnumber_status);

                var jobcard_departamentottnumber=$("#jobcard_departamentottnumber").val();
                jobcardformdata.append("jobcard_departamento", jobcard_departamentottnumber);

                var jobcard_jobtype="Callout";
                jobcardformdata.append("jobcard_jobtype", jobcard_jobtype);

                if($("#jobcard_jobinfoselect").val().length != 0){

                   var jobcard_jobinfoselect=$("#jobcard_jobinfoselect").val();
                   for(var i = 0; i < jobcard_jobinfoselect.length; i++){
                      jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoselect[i]);
                   }

                }else{
                   var jobcard_jobinfoinput=$("#jobcard_jobinfoinput").val();
                   jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfoinput);
                }

                var jobcard_reportnmcoperator=$("#jobcard_reportnmcoperator").val();
                jobcardformdata.append("jobcard_reportnmcoperator", jobcard_reportnmcoperator);

                var jobcard_tecnicoid=$("#jobcard_tecnicoid").val();
                jobcardformdata.append("jobcard_tecnicoid", jobcard_tecnicoid);

                var jobcard_datareporte=$("#jobcard_datareporte").val();
                jobcardformdata.append("jobcard_datareporte", jobcard_datareporte);

                var jobcard_horareporte=$("#jobcard_horareporte").val();
                jobcardformdata.append("jobcard_horareporte", jobcard_horareporte);

                var jobcard_clienteid=$("#jobcard_clienteid").val();;
                jobcardformdata.append("jobcard_clienteid", jobcard_clienteid);

                if($("#jobcard_siteidselectttnumber").val() != null){
                      
                   jobcardformdata.append("jobcard_siteid", jobcard_siteidselectttnumber);
                   console.log($("#jobcard_siteidselectttnumber").val())
                   
                }else{
                   
                   jobcardformdata.append("jobcard_siteid", jobcard_siteidinputttnumber);
                   console.log($("#jobcard_siteidinputttnumber").val())

                }

               var xhr = new XMLHttpRequest();
               // Add any event handlers here...
               xhr.open('POST',rule, true);
               xhr.send(jobcardformdata);
                
                setTimeout(function(){

                   window.location.href="/manutencao/ttnumberhome/new";
                   
               }, 6000);
                
             });

          }

  
  });


    $("#createnewttnumber_project").click(function(){

       var dadosprojectos = JSON.parse($("#recolherdados").attr("detalhesprojectos"));
       var controlador = 0;

       var jobcard_projectnumbercont= $("#jobcard_projectnumber").val();
       console.log($("#jobcard_siteidselect").val().length)
       console.log($("#jobcard_siteidinput").val())
       var posicaoprojectnumber = dadosprojectos.findIndex(x => x.jobcard_projectnumber === jobcard_projectnumbercont);
       
    if(($("#jobcard_siteidselect").val().length = 0) && ($("#jobcard_siteidinput").val() == "")){

       controlador = 1;

    }else

       if((jobcard_projectnumbercont == "") || ($("#jobcard_clienteidprojects").val() == null) || ($("#jobcard_departamento").val() == null) || ($("#jobcard_tecnicoid").val() == null) || ($("#jobcard_jobinfo").val() == "")){
         controlador = 1;

       }else

           if(posicaoprojectnumber != -1){
             controlador = 2;
          }
             
          // console.log(controlador)
       if(controlador == 1){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
          $('#msg_modal').openModal();

       }else

          if(controlador == 2){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Esse número de projecto já se encontra registrado, escolha outro.':'This project number is already registered, choose another.'))
             $('#msg_modal').openModal();

          }else{

                $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
                $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja criar este projecto ':'Do you want to create this project <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
                $('#yes_no_modal').openModal({dismissible:false});
                $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
                $('#yes_btn_modal').click(function(e){
                   e.stopPropagation();

                   $('#loading').fadeIn().delay(20000).fadeOut();

                   var rule="/manutencao/novojobcardproject";
                   var jobcardformdata = new FormData();
                   
                   var jobcard_projectnumber= $("#jobcard_projectnumber").val();
                   jobcardformdata.append("jobcard_projectnumber", jobcard_projectnumber);

                   var jobcard_clienteidprojects= $("#jobcard_clienteidprojects").val();
                   jobcardformdata.append("jobcard_clienteid", jobcard_clienteidprojects);

                   var jobcard_call= $("#jobcard_call").val();
                   jobcardformdata.append("jobcard_call", jobcard_call);

                   var jobcard_departamento= $("#jobcard_departamento").val();
                   jobcardformdata.append("jobcard_departamento", jobcard_departamento);

                   var jobcard_siteidselect= $("#jobcard_siteidselect").val();
                   // console.log(jobcard_siteidselect)
                   var jobcard_siteidinput= $("#jobcard_siteidinput").val();
                   // console.log(jobcard_siteidinput)

                   if($("#jobcard_siteidselect").val().length != 0){

                      
                      for(var i = 0; i < jobcard_siteidselect.length; i++){
                        jobcardformdata.append("jobcard_site", jobcard_siteidselect[i]);
                      }
                   }else{
                      
                      jobcardformdata.append("jobcard_site", jobcard_siteidinput);

                   }


                   var ttnumber_status="New";
                   jobcardformdata.append("ttnumber_status", ttnumber_status);

                   var jobcard_jobtype="Callout";
                   jobcardformdata.append("jobcard_jobtype", jobcard_jobtype);

                   var jobcard_jobinfo=$("#jobcard_jobinfo").val();
                   jobcardformdata.append("jobcard_jobinfo", jobcard_jobinfo);

                   var jobcard_tecnicoid=$("#jobcard_tecnicoid").val();
                   jobcardformdata.append("jobcard_tecnicoid", jobcard_tecnicoid);

                   var jobcard_datareporte=$("#jobcard_datareporte").val();
                   jobcardformdata.append("jobcard_datareporte", jobcard_datareporte);

                   var jobcard_datacreated=$("#jobcard_datacreated").val();
                   jobcardformdata.append("jobcard_datacreated", jobcard_datacreated);


                  var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);
                   
                   setTimeout(function(){

                      window.location.href="/manutencao/jobcardprojectshome/new";
                      
                  }, 4000);
                   
                });

             }

  
  });

  $('.deletejobcard').click(function () {
    var jobId = $(this).attr("data-user-new");
    console.log(jobId);

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja criar esta folha de serviço ':'Do you want to delete this jobcard <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      $('#loading').fadeIn().delay(2000).fadeOut();
      e.stopPropagation();

      setTimeout(function(){
        window.location.href="/manutencao/apagarjobcard/"+jobId;
      }, 1000);
    });

  });

  $('.chegadasiteproject').click(function(){

    var referencia = $(this).attr("data-user-new");

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Já se encontra no site ':'Have you just arrived the site <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){

      $('#loading').fadeIn().delay(20000).fadeOut();
      e.stopPropagation();
      // e.stopImmediatePropagation();

      var jobcardformdata = new FormData();

      var rule="/manutencao/updatechegadasiteproject";

      var jobcard_id = referencia;
      jobcardformdata.append("jobcard_id", jobcard_id);


        var options = {
          enableHighAccuracy: false,
          timeout: 5000,
          maximumAge: 1500000
          };

           function success(pos) {
              var crd = pos.coords;

              console.log('Your current position is:');
              console.log(`Latitude : ${crd.latitude}`);
              jobcardformdata.append("geolocationlatitude", crd.latitude);
              console.log(`Longitude: ${crd.longitude}`);
              jobcardformdata.append("geolocationlongitude", crd.longitude);
              console.log(`More or less ${crd.accuracy} meters.`);

              var geomessage = "";
              jobcardformdata.append("geomessage", geomessage);

              var xhr = new XMLHttpRequest();
              // Add any event handlers here...
              xhr.open('POST',rule, true);
              xhr.send(jobcardformdata);
          }

          function error(err) {
               // console.warn(`ERROR(${err.code}): ${err.message}`);
                var geo = "";
                var geomessage;

                jobcardformdata.append("geolocationlatitude", geo);
                jobcardformdata.append("geolocationlongitude", geo);

                if(err.code == 1){

                  geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                  jobcardformdata.append("geomessage", geomessage);

                }else
                   if(err.code == 2){

                      geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                      jobcardformdata.append("geomessage", geomessage);

                   }else
                      if(err.code == 3){

                         geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                         jobcardformdata.append("geomessage", geomessage);

                      }else{

                         geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                         jobcardformdata.append("geomessage", geomessage);
                      }

                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

             }

          navigator.geolocation.getCurrentPosition(success, error, options);

          setTimeout(function(){
            window.location.href="/manutencao/jobcardprojectshome/inprogress";
          }, 4000);

        

    });
  });

  //Accoes dos icons no ttform
  $('.chegadasite').click(function(){

    var referencia = $(this).attr("data-user-new");
    var dadojobtype =$(this).attr("datajobtype");
    

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Já se encontra no site ':'Have you just arrived the site <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){

      $('#loading').fadeIn().delay(20000).fadeOut();
      e.stopPropagation();
      // e.stopImmediatePropagation();

      var jobcardformdata = new FormData();

      var rule="/manutencao/updatechegadasite";

      var jobcard_id = referencia;
      jobcardformdata.append("jobcard_id", jobcard_id);


        var options = {
          enableHighAccuracy: false,
          timeout: 5000,
          maximumAge: 1500000
          };

           function success(pos) {
              var crd = pos.coords;

              console.log('Your current position is:');
              console.log(`Latitude : ${crd.latitude}`);
              jobcardformdata.append("geolocationlatitude", crd.latitude);
              console.log(`Longitude: ${crd.longitude}`);
              jobcardformdata.append("geolocationlongitude", crd.longitude);
              console.log(`More or less ${crd.accuracy} meters.`);

              var geomessage = "";
              jobcardformdata.append("geomessage", geomessage);

              var xhr = new XMLHttpRequest();
              // Add any event handlers here...
              xhr.open('POST',rule, true);
              xhr.send(jobcardformdata);
          }

          function error(err) {
               // console.warn(`ERROR(${err.code}): ${err.message}`);
                var geo = "";
                var geomessage;

                jobcardformdata.append("geolocationlatitude", geo);
                jobcardformdata.append("geolocationlongitude", geo);

                if(err.code == 1){

                  geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                  jobcardformdata.append("geomessage", geomessage);

                }else
                   if(err.code == 2){

                      geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                      jobcardformdata.append("geomessage", geomessage);

                   }else
                      if(err.code == 3){

                         geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                         jobcardformdata.append("geomessage", geomessage);

                      }else{

                         geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                         jobcardformdata.append("geomessage", geomessage);
                      }

                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

             }

          navigator.geolocation.getCurrentPosition(success, error, options);

          setTimeout(function(){
            window.location.href="/manutencao/ttnumberhome/inprogress";
          }, 5000);

    });
  });


  //   $('.chegadasitehvac').click(function(){

  //   var referencia = $(this).attr("data-user-new");
  //   var dadojobtype =$(this).attr("datajobtype");
  //   console.log("33333333333");
  //   console.log(referencia);

  //     var jobcardformdata = new FormData();

  //     var rule="/climatizacao/updatechegadasitehvac";

  //     var jobcard_id = referencia;
  //     jobcardformdata.append("jobcard_id", jobcard_id);

  //     var xhr = new XMLHttpRequest();
  //     // Add any event handlers here...
  //     xhr.open('POST',rule, true);
  //     xhr.send(jobcardformdata);
      
  //       setTimeout(function(){
  //       window.location.href="/climatizacao/correctivainprogress";
  //       }, 2000);

  // });
  // document.getElementById('clear').addEventListener('click', function () {
  //   var signaturePad = new SignaturePad(canvas, {
  //     backgroundColor: 'rgb(255, 255, 255)' // necessary for saving image as JPEG; can be removed is only saving as PNG or SVG
  //     });
  //     signaturePad.clear();
  //     });

  $("#clear").click(function(){
      var signaturePad = new SignaturePad(canvas, {
      backgroundColor: 'rgb(255, 255, 255)' // necessary for saving image as JPEG; can be removed is only saving as PNG or SVG
      });
      signaturePad.clear();

  })

  $('.chegadasitehvac').click(function(){

    var referencia = $(this).attr("data-user-new");
    var dadojobtype =$(this).attr("datajobtype");
    console.log("33333333333");
    console.log(referencia);

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente informar a chegada ao site':'Do you really want to inform the arrival on site')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b> ?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(){ window.location.href="/veiculo_Control"; });
    $("#yes_btn_modal").click(function(e){
        e.preventDefault();
        
        var jobcardformdata = new FormData();

        var rule="/climatizacao/updatechegadasitehvac";

        var jobcard_id = referencia;
        jobcardformdata.append("jobcard_id", jobcard_id);

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(jobcardformdata);
        
        $('#loading').fadeIn().delay(2000).fadeOut();
        setTimeout(function(){
        
            window.location.href="/climatizacao/correctivainprogress";
        }, 1000)
        
    });

  });

  $('#saveSIgnature').click(function(){

    var referencia = $(this).attr("jobid");
    // var dadojobtype =$(this).attr("datajobtype");

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente registrar a assinatura':'Do you really want save the signature')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b> ?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $("#yes_btn_modal").click(function(e){
        // e.preventDefault();

       // *********************************************************************************

       var canvas = document.getElementById('signature-pad');


       // var canvas = document.getElementById('canvas');
       var dataURL = canvas.toDataURL();
       console.log(dataURL)
       // window.open(dataURL)


      

      // var signaturePad = new SignaturePad(canvas, {
      // backgroundColor: 'rgb(255, 255, 255)' // necessary for saving image as JPEG; can be removed is only saving as PNG or SVG
      // });

     

      // var data = signaturePad.toDataURL('image/png');
      // console.log(data);
      // // window.open(data);
   

     

      // var data = signaturePad.toDataURL('image/jpeg');
      // console.log(data);
      // window.open(data);
      
       // *************************************************************************************


   
        
        var jobcardformdata = new FormData();

        var rule="/climatizacao/gravarassinaturahvacjobcard";

        var jobcard_id = referencia;
        jobcardformdata.append("jobcard_id", jobcard_id);
        jobcardformdata.append("chegou", dataURL)

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(jobcardformdata);
        
        $('#loading').fadeIn().delay(2000).fadeOut();
        setTimeout(function(){
        
            window.location.href="/climatizacao/correctivainprogress";
        }, 1000)
        
    });

  });
  

    

  $('#jobcard_chegadasite_yes_btn').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var alljobcards = JSON.parse($("#recolherdados").attr("todosjobcards"));
    var controlador = 0;

    var jobcard_ttnumbercont = $("#jobcard_ttnumber").val();

    if(jobcard_ttnumbercont == ""){

      controlador = 1;

    }else{

      var posicaottnumber = alljobcards.findIndex(x => parseInt(x.jobcard_ttnumber) === parseInt(jobcard_ttnumbercont));
      if(posicaottnumber != -1){
        controlador = 2;
      }

    }


    if(controlador == 1){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
      $('#msg_modal').openModal();

    }else

        if(controlador == 2){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Esse ticket já se encontra registrado, escolha outro.':'This ticket is already registered, choose another.'))
          $('#msg_modal').openModal();

        }else{

           $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
           $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Já se encontra no site ':'Have you just arrived the site <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
           $('#yes_no_modal').openModal({dismissible:false});
           $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
           $('#yes_btn_modal').click(function(e){

              e.stopPropagation();
              $('#loading').fadeIn().delay(20000).fadeOut();


              var jobcardformdata = new FormData();

             var rule="/manutencao/updatechegadasiteplanned";

             var jobcard_id = referencia;
             jobcardformdata.append("jobcard_id", jobcard_id);

             var jobcard_ttnumber= $("#jobcard_ttnumber").val();
             jobcardformdata.append("jobcard_ttnumber", jobcard_ttnumber);


               var options = {
                 enableHighAccuracy: false,
                 timeout: 5000,
                 maximumAge: 1500000
                 };

                  function success(pos) {
                     var crd = pos.coords;

                     console.log('Your current position is:');
                     console.log(`Latitude : ${crd.latitude}`);
                     jobcardformdata.append("geolocationlatitude", crd.latitude);
                     console.log(`Longitude: ${crd.longitude}`);
                     jobcardformdata.append("geolocationlongitude", crd.longitude);
                     console.log(`More or less ${crd.accuracy} meters.`);

                     var geomessage = "";
                     jobcardformdata.append("geomessage", geomessage);

                     var xhr = new XMLHttpRequest();
                     // Add any event handlers here...
                     xhr.open('POST',rule, true);
                     xhr.send(jobcardformdata);
                 }

                 function error(err) {
                  // console.warn(`ERROR(${err.code}): ${err.message}`);
                   var geo = "";
                   var geomessage;

                   jobcardformdata.append("geolocationlatitude", geo);
                   jobcardformdata.append("geolocationlongitude", geo);

                   if(err.code == 1){

                     geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                     jobcardformdata.append("geomessage", geomessage);

                   }else
                      if(err.code == 2){

                         geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                         jobcardformdata.append("geomessage", geomessage);

                      }else
                         if(err.code == 3){

                            geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                            jobcardformdata.append("geomessage", geomessage);

                         }else{

                            geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                            jobcardformdata.append("geomessage", geomessage);
                         }

                      var xhr = new XMLHttpRequest();
                     // Add any event handlers here...
                     xhr.open('POST',rule, true);
                     xhr.send(jobcardformdata);

                }

                 navigator.geolocation.getCurrentPosition(success, error, options);

                 setTimeout(function(){
                   window.location.href="/manutencao/preventativemaint/inprogress";
                 }, 4000);

           });


          }

  });


  $('.detalhesChegadaSitePlannedsemttnumber').click(function(){

    var referencia = $(this).attr("data-user-new");
    
       $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Já se encontra no site ':'Have you just arrived the site <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
        $('#yes_no_modal').openModal({dismissible:false});
        $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
        $('#yes_btn_modal').click(function(e){

             e.stopPropagation();
              $('#loading').fadeIn().delay(20000).fadeOut();


              var jobcardformdata = new FormData();

             var rule="/manutencao/updatechegadasiteplannedsemttnumber";

             var jobcard_id = referencia;
             jobcardformdata.append("jobcard_id", jobcard_id);


               var options = {
                 enableHighAccuracy: false,
                 timeout: 5000,
                 maximumAge: 1500000
                 };

                  function success(pos) {
                     var crd = pos.coords;

                     console.log('Your current position is:');
                     console.log(`Latitude : ${crd.latitude}`);
                     jobcardformdata.append("geolocationlatitude", crd.latitude);
                     console.log(`Longitude: ${crd.longitude}`);
                     jobcardformdata.append("geolocationlongitude", crd.longitude);
                     console.log(`More or less ${crd.accuracy} meters.`);

                     var geomessage = "";
                     jobcardformdata.append("geomessage", geomessage);

                     var xhr = new XMLHttpRequest();
                     // Add any event handlers here...
                     xhr.open('POST',rule, true);
                     xhr.send(jobcardformdata);
                 }

                 function error(err) {
                  // console.warn(`ERROR(${err.code}): ${err.message}`);
                   var geo = "";
                   var geomessage;

                   jobcardformdata.append("geolocationlatitude", geo);
                   jobcardformdata.append("geolocationlongitude", geo);

                   if(err.code == 1){

                     geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                     jobcardformdata.append("geomessage", geomessage);

                   }else
                      if(err.code == 2){

                         geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                         jobcardformdata.append("geomessage", geomessage);

                      }else
                         if(err.code == 3){

                            geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                            jobcardformdata.append("geomessage", geomessage);

                         }else{

                            geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                            jobcardformdata.append("geomessage", geomessage);
                         }

                      var xhr = new XMLHttpRequest();
                     // Add any event handlers here...
                     xhr.open('POST',rule, true);
                     xhr.send(jobcardformdata);

                }

                 navigator.geolocation.getCurrentPosition(success, error, options);

                 setTimeout(function(){
                   window.location.href="/manutencao/preventativemaint/inprogress";
                 }, 5000);

        });

  });

  
  $('.saidasiteproject').click(function(){

        var referencia = $(this).attr("data-user-new");
        window.location.href="/manutencao/saidasiteproject/" + referencia;

  });


  $('.saidasite').click(function(){

        var referencia = $(this).attr("data-user-new");
        window.location.href="/manutencao/saidasite/" + referencia;

  });

  $('.notifycallcenter').click(function(){
    
    var referencia = $(this).attr("data-user-new");
        window.location.href="/manutencao/saidasite/" + referencia;

 });


   $('#notifycallcentercallout').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");

    var jobcard_remedialactioncomp = $("#jobcard_remedialaction").val();
    var jobcard_healthsafetycomp = $("#jobcard_healthsafety").val();
    var jobcard_hsreasoncomp = $("#jobcard_hsreason").val();

    if(((jobcard_remedialactioncomp == "") && (jobcard_healthsafetycomp == null)) || ((jobcard_healthsafetycomp == "Yes") && (jobcard_hsreasoncomp == ""))){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
      $('#msg_modal').openModal();

    }else{
          $('#loading').fadeIn().delay(20000).fadeOut();

         var jobcardformdata = new FormData();

          var rule="/manutencao/notifycallcentercallout";

          var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
          var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
          var ano = (new Date()).getFullYear();
          var todaydate = dia + "/" + mes + "/" + ano;

          var dataActualms= (new Date(ano, (mes - 1), dia).getTime());

          var todayhours = new Date();
          var todaytime = todayhours.getHours() + ":" + todayhours.getMinutes();

          var jobcard_id = referencia;
          jobcardformdata.append("jobcard_id", jobcard_id);

          var jobcard_remedialaction = $("#jobcard_remedialaction").val();
          jobcardformdata.append("jobcard_remedialaction", jobcard_remedialaction);

          var jobcard_healthsafety = $("#jobcard_healthsafety").val();
          jobcardformdata.append("jobcard_healthsafety", jobcard_healthsafety);

          var jobcard_hsreason;

          if(jobcard_healthsafety == "No"){
             jobcard_hsreason = "";
          }else{
            jobcard_hsreason = $("#jobcard_hsreason").val();
          }
          
          jobcardformdata.append("jobcard_hsreason", jobcard_hsreason);

          var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST',rule, true);
          xhr.send(jobcardformdata);


              
           setTimeout(function(){
             window.location.href="/manutencao/ttnumberhome/inprogress";
           }, 4000);

          
    }

 });


 $('.saidasitecallout').click(function(){

    var referencia = $(this).attr("data-user-new");
    var dadojobtype = $(this).attr("datajobtype");

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Já está a sair do site ':'Already leaving the site <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){

       $('#loading').fadeIn().delay(20000).fadeOut();

       var jobcardformdata = new FormData();

       var rule="/manutencao/updatesaidasitecallout";

          var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
          var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
          var ano = (new Date()).getFullYear();
          var todaydate = dia + "/" + mes + "/" + ano;

          var dataActualms= (new Date(ano, (mes - 1), dia).getTime());

          var todayhours = new Date();
          var todaytime = todayhours.getHours() + ":" + todayhours.getMinutes();

          var jobcard_id = referencia;
          jobcardformdata.append("jobcard_id", jobcard_id);

          var options = {
            enableHighAccuracy: false,
            timeout: 5000,
            maximumAge: 1500000
            };

            function success(pos) {
                var crd = pos.coords;

                console.log('Your current position is:');
                console.log(`Latitude : ${crd.latitude}`);
                jobcardformdata.append("geolocationlatitude", crd.latitude);
                console.log(`Longitude: ${crd.longitude}`);
                jobcardformdata.append("geolocationlongitude", crd.longitude);
                console.log(`More or less ${crd.accuracy} meters.`);

                var geomessage = "";
                jobcardformdata.append("geomessage", geomessage);

                var xhr = new XMLHttpRequest();
                // Add any event handlers here...
                xhr.open('POST',rule, true);
                xhr.send(jobcardformdata);
            }


            function error(err) {
               // console.warn(`ERROR(${err.code}): ${err.message}`);
                var geo = "";
                var geomessage;

                jobcardformdata.append("geolocationlatitude", geo);
                jobcardformdata.append("geolocationlongitude", geo);

                if(err.code == 1){

                  geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                  jobcardformdata.append("geomessage", geomessage);

                }else
                   if(err.code == 2){

                      geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                      jobcardformdata.append("geomessage", geomessage);

                   }else
                      if(err.code == 3){

                         geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                         jobcardformdata.append("geomessage", geomessage);

                      }else{

                         geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                         jobcardformdata.append("geomessage", geomessage);
                      }

                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

             }

            navigator.geolocation.getCurrentPosition(success, error, options);

              
              setTimeout(function(){
                window.location.href="/manutencao/ttnumberhome/complete";
              }, 5000); 


    });

 });

$('.captarinqueritoair').click(function(){

      var referencia = $(this).attr("data-user-new");

      $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
      $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a informação ':'Do you really want to save <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
      $('#yes_no_modal').openModal({dismissible:false});
      $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
      $('#yes_btn_modal').click(function(e){
    

    var jobcardformdata = new FormData();

    var rule="/climatizacao/guardardadosAir/" + referencia;

    var jobcard_limpezaFiltroAr=$("input[name='pergunta1']:checked").val();
    jobcardformdata.append("jobcard_limpezaFiltroAr", jobcard_limpezaFiltroAr);
  
    var jobcard_limpezaExternaCondensador=$("input[name='pergunta2']:checked").val();
    jobcardformdata.append("jobcard_limpezaExternaCondensador", jobcard_limpezaExternaCondensador);
  
    var jobcard_limpezaExternaEvaporador=$("input[name='pergunta3']:checked").val();
    jobcardformdata.append("jobcard_limpezaExternaEvaporador", jobcard_limpezaExternaEvaporador);
  
    var jobcard_limpezaPermutadorEvaporador=$("input[name='pergunta4']:checked").val();
    jobcardformdata.append("jobcard_limpezaPermutadorEvaporador", jobcard_limpezaPermutadorEvaporador);
  
    var jobcard_limpezaPermutadorCondensador=$("input[name='pergunta5']:checked").val();
    jobcardformdata.append("jobcard_limpezaPermutadorCondensador", jobcard_limpezaPermutadorCondensador);
  
    var jobcard_funcionamentoMotoDeflectores=$("input[name='pergunta6']:checked").val();
    jobcardformdata.append("jobcard_funcionamentoMotoDeflectores", jobcard_funcionamentoMotoDeflectores);
  
    var jobcard_drenagemLimpezaTabuleiroCondesandores=$("input[name='pergunta7']:checked").val();
    jobcardformdata.append("jobcard_drenagemLimpezaTabuleiroCondesandores", jobcard_drenagemLimpezaTabuleiroCondesandores);
  
    var jobcard_fugasFrigorifico=$("input[name='pergunta8']:checked").val();
    jobcardformdata.append("jobcard_fugasFrigorifico", jobcard_fugasFrigorifico);
  
    var jobcard_reapertos=$("input[name='pergunta9']:checked").val();
    jobcardformdata.append("jobcard_reapertos", jobcard_reapertos);
  
    var jobcard_estadoIsolamento=$("input[name='pergunta10']:checked").val();
    jobcardformdata.append("jobcard_estadoIsolamento", jobcard_estadoIsolamento);
  
    var jobcard_ruidosVibracoes=$("input[name='pergunta11']:checked").val();
    jobcardformdata.append("jobcard_ruidosVibracoes", jobcard_ruidosVibracoes);
  
    var jobcard_estadoFiltros=$("input[name='pergunta12']:checked").val();
    jobcardformdata.append("jobcard_estadoFiltros", jobcard_estadoFiltros);
  
    var jobcard_ventladores=$("input[name='pergunta13']:checked").val();
    jobcardformdata.append("jobcard_ventladores", jobcard_ventladores);
  
    var jobcard_acessoAr=$("input[name='pergunta14']:checked").val();
    jobcardformdata.append("jobcard_acessoAr", jobcard_acessoAr);
    
    var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(jobcardformdata);
        
        setTimeout(function(){
        window.location.href="/climatizacao/correctivainprogress";
      }, 1000);
    });
   });



   $('.captarinqueritoclima').click(function(){
   
    var referencia = $(this).attr("data-user-new");

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a informação ':'Do you really want to save <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
     
   

  var jobcardformdata = new FormData();

  var rule="/climatizacao/guardardados/"+ referencia;

  var jobcard_filtroAr=$("input[name='pergunta1']:checked").val();
  jobcardformdata.append("jobcard_filtroAr", jobcard_filtroAr);

  var jobcard_filtroOleo=$("input[name='pergunta2']:checked").val();
  jobcardformdata.append("jobcard_filtroOleo", jobcard_filtroOleo);

  var jobcard_filtrodiesel=$("input[name='pergunta3']:checked").val();
  jobcardformdata.append("jobcard_filtrodiesel", jobcard_filtrodiesel);

  var jobcard_element=$("input[name='pergunta4']:checked").val();
  jobcardformdata.append("jobcard_element", jobcard_element);

  var jobcard_oleo=$("input[name='pergunta5']:checked").val();
  jobcardformdata.append("jobcard_oleo", jobcard_oleo);

  var jobcard_nivelOleo=$("input[name='pergunta6']:checked").val();
  jobcardformdata.append("jobcard_nivelOleo", jobcard_nivelOleo);

  var jobcard_nivelCoolant=$("input[name='pergunta7']:checked").val();
  jobcardformdata.append("jobcard_nivelCoolant", jobcard_nivelCoolant);

  var jobcard_nivelBaterias=$("input[name='pergunta8']:checked").val();
  jobcardformdata.append("jobcard_nivelBaterias", jobcard_nivelBaterias);

  var jobcard_limpezaGerador=$("input[name='pergunta9']:checked").val();
  jobcardformdata.append("jobcard_limpezaGerador", jobcard_limpezaGerador);

  var jobcard_lubrificacao=$("input[name='pergunta10']:checked").val();
  jobcardformdata.append("jobcard_lubrificacao", jobcard_lubrificacao);

  var jobcard_fugas=$("input[name='pergunta11']:checked").val();
  jobcardformdata.append("jobcard_fugas", jobcard_fugas);

  var jobcard_nivelDiesel=$("input[name='pergunta12']:checked").val();
  jobcardformdata.append("jobcard_nivelDiesel", jobcard_nivelDiesel);

  var jobcard_ruidos=$("input[name='pergunta13']:checked").val();
  jobcardformdata.append("jobcard_ruidos", jobcard_ruidos);

  var jobcard_funcionamento=$("input[name='pergunta14']:checked").val();
  jobcardformdata.append("jobcard_funcionamento", jobcard_funcionamento);




  var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST',rule, true);
      xhr.send(jobcardformdata);
      
      setTimeout(function(){
      window.location.href="/climatizacao/correctivainprogress";
    }, 1000);
  });
 });

 $('#notifycallcenterplanned').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadosjobcards = JSON.parse($("#recolherdados").attr("detalhesjobcards"));
    var controlador = 0;

    var jobcard_healthsafetycomp = $("#jobcard_healthsafety").val();
    var jobcard_hsreasoncomp = $("#jobcard_hsreason").val();

    if(jobcard_healthsafetycomp == null){
      controlador = 1; 
    }else
       if((jobcard_healthsafetycomp == "Yes") && (jobcard_hsreasoncomp == "")){
          controlador = 1;
       }


    if(controlador == 1){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
      $('#msg_modal').openModal();

    }else{
       $('#loading').fadeIn().delay(20000).fadeOut();

       var dadoplanneddatems = dadosjobcards.jobcard_planneddatems;
       var dadoplanneddatebeforems = dadosjobcards.jobcard_planneddate5beforems;
       var dadoplanneddateafterms = dadosjobcards.jobcard_planneddate5afterms;

       var jobcardformdata = new FormData();

       var rule="/manutencao/notifycallcenterplanned";

       var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
       var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
       var ano = (new Date()).getFullYear();
       var todaydate = dia + "/" + mes + "/" + ano;

       var dataActualms= (new Date(ano, (mes - 1), dia).getTime());

       var todayhours = new Date();
       var todaytime = todayhours.getHours() + ":" + todayhours.getMinutes();

       var jobcard_id = referencia;
       jobcardformdata.append("jobcard_id", jobcard_id);

       var jobcard_healthsafety = $("#jobcard_healthsafety").val();
       jobcardformdata.append("jobcard_healthsafety", jobcard_healthsafety);

       var jobcard_hsreason;

       if(jobcard_healthsafety == "No"){
          jobcard_hsreason = "";
       }else{
         jobcard_hsreason = $("#jobcard_hsreason").val();
       }
       
       jobcardformdata.append("jobcard_hsreason", jobcard_hsreason);


       var jobcard_workstatus;
       if( dadoplanneddatems != 0){

         if((dataActualms >= dadoplanneddatebeforems) && (dataActualms < dadoplanneddatems)){
             jobcard_workstatus = "Done early";
         }else
           if(dataActualms == dadoplanneddatems ){
             jobcard_workstatus = "Done on time";
           }else
             if((dataActualms > dadoplanneddatems) && (dataActualms <= dadoplanneddateafterms)){
               jobcard_workstatus = "Done later";
             }else{
               jobcard_workstatus = "Out of time";
             }
       }else{
         jobcard_workstatus = "";
       }
      jobcardformdata.append("jobcard_workstatus", jobcard_workstatus);


       var xhr = new XMLHttpRequest();
             // Add any event handlers here...
             xhr.open('POST',rule, true);
             xhr.send(jobcardformdata);
       
         
         setTimeout(function(){
             window.location.href="/manutencao/preventativemaint/inprogress";
           }, 4000);
       

    }

 });


 $('.saidasiteplanned').click(function(){

    var referencia = $(this).attr("data-user-new");
    var dadojobtype = $(this).attr("datajobtype");
    

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Já está a sair do site ':'Already leaving the site <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){

       $('#loading').fadeIn().delay(20000).fadeOut();

       var jobcardformdata = new FormData();

       var rule="/manutencao/updatesaidasiteplanned";

       var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
       var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
       var ano = (new Date()).getFullYear();
       var todaydate = dia + "/" + mes + "/" + ano;

       var dataActualms= (new Date(ano, (mes - 1), dia).getTime());

       var todayhours = new Date();
       var todaytime = todayhours.getHours() + ":" + todayhours.getMinutes();


       var jobcard_id = referencia;
       jobcardformdata.append("jobcard_id", jobcard_id);


       var options = {
         enableHighAccuracy: false,
         timeout: 5000,
         maximumAge: 1500000
         };


         function success(pos) {
             var crd = pos.coords;

             console.log('Your current position is:');
             console.log(`Latitude : ${crd.latitude}`);
             jobcardformdata.append("geolocationlatitude", crd.latitude);
             console.log(`Longitude: ${crd.longitude}`);
             jobcardformdata.append("geolocationlongitude", crd.longitude);
             console.log(`More or less ${crd.accuracy} meters.`);

             var geomessage = "";
             jobcardformdata.append("geomessage", geomessage);

             var xhr = new XMLHttpRequest();
             // Add any event handlers here...
             xhr.open('POST',rule, true);
             xhr.send(jobcardformdata);
         }


          function error(err) {
               // console.warn(`ERROR(${err.code}): ${err.message}`);
                var geo = "";
                var geomessage;

                jobcardformdata.append("geolocationlatitude", geo);
                jobcardformdata.append("geolocationlongitude", geo);

                if(err.code == 1){

                  geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                  jobcardformdata.append("geomessage", geomessage);

                }else
                   if(err.code == 2){

                      geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                      jobcardformdata.append("geomessage", geomessage);

                   }else
                      if(err.code == 3){

                         geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                         jobcardformdata.append("geomessage", geomessage);

                      }else{

                         geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                         jobcardformdata.append("geomessage", geomessage);
                      }

                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

             }

             navigator.geolocation.getCurrentPosition(success, error, options);

             setTimeout(function(){
             window.location.href="/manutencao/preventativemaint/complete";
           }, 5000);

    });

 });

  
  $('#jobcardtecnico_saidasitecallout_project').click(function(){

      var referencia = $("#recolherdados").attr("dadosreferenciaproject");
      // var dadojobtype = $("#recolherdados").attr("dadosjobtype");

      var jobcard_remedialactioncomp = $("#jobcard_remedialaction").val();
      var jobcard_healthsafetycomp = $("#jobcard_healthsafety").val();
      var jobcard_hsreasoncomp = $("#jobcard_hsreason").val();

      if(((jobcard_remedialactioncomp == "") && (jobcard_healthsafetycomp == null)) || ((jobcard_healthsafetycomp == "Yes") && (jobcard_hsreasoncomp == ""))){

        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
        $('#msg_modal').openModal();

      }else{
            $('#loading').fadeIn().delay(20000).fadeOut();

          var jobcardformdata = new FormData();

            var rule="/manutencao/updatesaidasitecalloutproject";

            var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
            var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
            var ano = (new Date()).getFullYear();
            var todaydate = dia + "/" + mes + "/" + ano;

            var dataActualms= (new Date(ano, (mes - 1), dia).getTime());

            var todayhours = new Date();
            var todaytime = todayhours.getHours() + ":" + todayhours.getMinutes();

            var jobcard_id = referencia;
            jobcardformdata.append("jobcard_id", jobcard_id);

            var jobcard_remedialaction = $("#jobcard_remedialaction").val();
            jobcardformdata.append("jobcard_remedialaction", jobcard_remedialaction);

            var jobcard_healthsafety = $("#jobcard_healthsafety").val();
            jobcardformdata.append("jobcard_healthsafety", jobcard_healthsafety);

            var jobcard_hsreason;

            if(jobcard_healthsafety == "No"){
              jobcard_hsreason = "";
            }else{
              jobcard_hsreason = $("#jobcard_hsreason").val();
            }
            
            jobcardformdata.append("jobcard_hsreason", jobcard_hsreason);


            var options = {
              enableHighAccuracy: false,
              timeout: 5000,
              maximumAge: 1500000
              };

              function success(pos) {
                  var crd = pos.coords;

                  console.log('Your current position is:');
                  console.log(`Latitude : ${crd.latitude}`);
                  jobcardformdata.append("geolocationlatitude", crd.latitude);
                  console.log(`Longitude: ${crd.longitude}`);
                  jobcardformdata.append("geolocationlongitude", crd.longitude);
                  console.log(`More or less ${crd.accuracy} meters.`);

                  var geomessage = "";
                  jobcardformdata.append("geomessage", geomessage);

                  var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);
              }

              function error(err) {
                // console.warn(`ERROR(${err.code}): ${err.message}`);
                  var geo = "";
                  var geomessage;

                  jobcardformdata.append("geolocationlatitude", geo);
                  jobcardformdata.append("geolocationlongitude", geo);

                  if(err.code == 1){

                    geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                    jobcardformdata.append("geomessage", geomessage);

                  }else
                    if(err.code == 2){

                        geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                        jobcardformdata.append("geomessage", geomessage);

                    }else
                        if(err.code == 3){

                          geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                          jobcardformdata.append("geomessage", geomessage);

                        }else{

                          geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                          jobcardformdata.append("geomessage", geomessage);
                        }

                    var xhr = new XMLHttpRequest();
                    // Add any event handlers here...
                    xhr.open('POST',rule, true);
                    xhr.send(jobcardformdata);

              }

              navigator.geolocation.getCurrentPosition(success, error, options);
          
                
            setTimeout(function(){
              window.location.href="/manutencao/jobcardprojectshome/inprogress";
            }, 4000);

          
      }

  });

  $('.resetgenerator').click(function() {
    $("#jobcard_previousrefuelhrs").val();
    $('#resetgeneratorhours_modal').openModal({dismissible:false});
  });

  $("#reset_reason").change(function(){
    if ( $("#reset_reason").val() != "New generator installed") {
      $("#jobcard_newpreviousrefuelhrs").siblings('label').removeClass('hide');
      $("#jobcard_newpreviousrefuelhrs").removeClass("hide");
    }else if ($("#reset_reason").val() == "New generator installed") {
      $("#jobcard_newpreviousrefuelhrs").siblings('label').addClass('hide');
      $("#jobcard_newpreviousrefuelhrs").addClass("hide");
    }
  });

  $("#resetgeneratorhrs_confirm_btn").click(function() {
  
    $("#reset_reason").val();
    if( (($("#reset_reason").val() != "New generator installed") && ($("#jobcard_newpreviousrefuelhrs").val() == "")) || (($("#reset_reason").val() == null) && ($("#jobcard_newpreviousrefuelhrs").val() == "")) ){
      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
      $('#msg_modal').openModal();
    }else{

      if(validar()){
        $('#yes_no_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#yes_no_content_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Deseja realmente redefinir as horas de reabastecimento do gerador ':'Do you really want reset the generator hours <b>') + (($(".lang-picker > .selected").attr("value")=="pt")?'</b> ?':"</b>?"))
        $('#yes_no_modal').openModal({dismissible:false});
        $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
        $('#yes_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();

          var newgenhrs = $("#jobcard_newpreviousrefuelhrs").val();
 

          if ( $("#reset_reason").val() == "New generator installed") {
            $("#jobcard_previousgeneratorhrs").val("0");

          }else if( $("#reset_reason").val() == "Generator Swopped"){
            $("#jobcard_previousgeneratorhrs").siblings('label').addClass('active');
            $("#jobcard_previousgeneratorhrs").val(newgenhrs);
            $("#jobcard_currentgeneratorhours").siblings('label').addClass('active');
            $("#jobcard_currentgeneratorhours").val(newgenhrs);
            var runtimehrs1 = $("#jobcard_currentgeneratorhours").val() - $("#jobcard_previousgeneratorhrs").val();
            $("#jobcard_generatorruntimehours").siblings('label').addClass('active');
            $("#jobcard_generatorruntimehours").val(runtimehrs1);

          }else if ($("#reset_reason").val() == "Controller Replaced") {    
            $("#jobcard_currentgeneratorhours").siblings('label').addClass('active');
            $("#jobcard_currentgeneratorhours").val(newgenhrs);
            var runtimehrs1 = $("#jobcard_currentgeneratorhours").val() - $("#jobcard_previousgeneratorhrs").val();  
            $("#jobcard_generatorruntimehours").siblings('label').addClass('active');      
            $("#jobcard_generatorruntimehours").val(runtimehrs1);
            $("#jobcard_dsc").addClass("hide");
            $("#jobcard_dsc").siblings('label').addClass('hide');
          }

          $("#jobcard_previousrefuelhrs").val("0");
            console.log( $("#jobcard_previousrefuelhrs").val());
            console.log( $("#reset_reason").val());
            $("#yes_no_title_modal").closeModal();
            $("#resetgeneratorhours_modal").closeModal();
       });
      }
    }

   });




  $("#jobcard_generator").change(function(){
      var jobcard_generator = $("#jobcard_generator").val();
      var dadossiteinfo = JSON.parse($("#recolherdados").attr("detalhessiteinfo"));
      
      var posicaogerador= dadossiteinfo[0].siteinfo_generatorArray.findIndex(x => x._id === jobcard_generator);
     
      var previousgeneratorhours = dadossiteinfo[0].siteinfo_generatorArray[posicaogerador].siteinfo_generatorhours;
      $("#jobcard_previousgeneratorhrs").val(previousgeneratorhours);
      $("#jobcard_previousgeneratorhrs").siblings('label').addClass('active');

      var previousrefuelhours = dadossiteinfo[0].siteinfo_generatorArray[posicaogerador].siteinfo_generatorprevrefuelhours;
      $("#jobcard_previousrefuelhrs").val(previousrefuelhours);
      $("#jobcard_previousrefuelhrs").siblings('label').addClass('active');

  });

  $("#jobcard_generatormobilefixed1").change(function(){

      var jobcard_generatormobilefixed = $("#jobcard_generatormobilefixed1").val();
      var dadossiteinfo = JSON.parse($("#recolherdados").attr("detalhessiteinfo"));
      var dadosjobcard = JSON.parse($("#recolherdados").attr("dadosjobcard"));
      var datageradorarray = $("#recolherdados").attr("datageradorarray");

      var posicaogerador = dadosjobcard.generatorArrayJobcard.findIndex(x => x._id === datageradorarray);
      
      if(jobcard_generatormobilefixed == "Mobile"){

          if(dadosjobcard.generatorArrayJobcard[posicaogerador].jobcard_generatormobilefixed == "Mobile"){

             $("#jobcard_previousgeneratorhrs").val(dadosjobcard.generatorArrayJobcard[posicaogerador].jobcard_previousgeneratorhrs);
             $("#jobcard_previousgeneratorhrs").siblings('label').addClass('active');

             $("#jobcard_previousrefuelhrs").val(dadosjobcard.generatorArrayJobcard[posicaogerador].jobcard_previousrefuelhrs);
             $("#jobcard_previousrefuelhrs").siblings('label').addClass('active');

             $(".mostrargerador").addClass('hide');


          }else{

             $("#jobcard_previousgeneratorhrs").val("0");
             $("#jobcard_previousgeneratorhrs").siblings('label').addClass('active');

             $("#jobcard_previousrefuelhrs").val("0");
             $("#jobcard_previousrefuelhrs").siblings('label').addClass('active');

             $(".mostrargerador").addClass('hide');

          }

      }else{

          if(dadosjobcard.generatorArrayJobcard[posicaogerador].jobcard_generatormobilefixed == "Fixed"){

             $("#jobcard_previousgeneratorhrs").val(dadosjobcard.generatorArrayJobcard[posicaogerador].jobcard_previousgeneratorhrs);
             $("#jobcard_previousgeneratorhrs").siblings('label').addClass('active');

             $("#jobcard_previousrefuelhrs").val(dadosjobcard.generatorArrayJobcard[posicaogerador].jobcard_previousrefuelhrs);
             $("#jobcard_previousrefuelhrs").siblings('label').addClass('active');

             $(".mostrargerador").removeClass('hide');


             var jobcard_generator = document.getElementById("jobcard_generator");
                while (jobcard_generator.options.length > 0) { 
                  jobcard_generator.remove(0); 
                }

             var opt = document.createElement('option');
            opt.value = "Escolha a opção";
            opt.innerHTML = "Escolha a opção";
            opt.id = "segundo";
            jobcard_generator.appendChild(opt);

            // document.getElementById("segundo").selected = "true";
            document.getElementById("segundo").disabled = "true";

            var posicaotypegerador = dadossiteinfo[0].siteinfo_generatorArray.findIndex(x => x._id === dadosjobcard.generatorArrayJobcard[posicaogerador].jobcard_generator)
         
             for(var j = 0; j < dadossiteinfo[0].siteinfo_generatorArray.length; j++){

                var opt = document.createElement('option');
                opt.value = dadossiteinfo[0].siteinfo_generatorArray[j]._id;
                opt.innerHTML = dadossiteinfo[0].siteinfo_generatorArray[j].siteinfo_generatortype;
                if(j == posicaotypegerador){
                   opt.id = "opcaogeradortype";
                }
                jobcard_generator.appendChild(opt);
                //console.log(dadosclientessite[i].sites[j]);
             }

             document.getElementById("opcaogeradortype").selected = "true";

          }else{

             $("#jobcard_previousgeneratorhrs").val("");
             $("#jobcard_previousgeneratorhrs").siblings('label').removeClass('active');

             $("#jobcard_previousrefuelhrs").val("");
             $("#jobcard_previousrefuelhrs").siblings('label').removeClass('active');

             $(".mostrargerador").removeClass('hide');


             var jobcard_generator = document.getElementById("jobcard_generator");
                while (jobcard_generator.options.length > 0) { 
                  jobcard_generator.remove(0); 
                }

             var opt = document.createElement('option');
            opt.value = "Escolha a opção";
            opt.innerHTML = "Escolha a opção";
            opt.id = "segundo";
            jobcard_generator.appendChild(opt);

            document.getElementById("segundo").selected = "true";
            document.getElementById("segundo").disabled = "true";

         
             for(var j = 0; j < dadossiteinfo[0].siteinfo_generatorArray.length; j++){

                var opt = document.createElement('option');
                opt.value = dadossiteinfo[0].siteinfo_generatorArray[j]._id;
                opt.innerHTML = dadossiteinfo[0].siteinfo_generatorArray[j].siteinfo_generatortype;
                jobcard_generator.appendChild(opt);
                //console.log(dadosclientessite[i].sites[j]);
             }

          }


      }


  });

  $("#jobcard_generatormobilefixed").change(function(){

      var jobcard_generatormobilefixed = $("#jobcard_generatormobilefixed").val();
      var dadossiteinfo = JSON.parse($("#recolherdados").attr("detalhessiteinfo"));

      if(jobcard_generatormobilefixed == "Mobile"){
     
      
          $("#jobcard_previousgeneratorhrs").val("0");
          $("#jobcard_previousgeneratorhrs").siblings('label').addClass('active');

          $("#jobcard_previousrefuelhrs").val("0");
          $("#jobcard_previousrefuelhrs").siblings('label').addClass('active');

          $(".mostrargerador").addClass('hide');

      }else{

          $("#jobcard_previousgeneratorhrs").val("");
          $("#jobcard_previousgeneratorhrs").siblings('label').removeClass('active');

          $("#jobcard_previousrefuelhrs").val("");
          $("#jobcard_previousrefuelhrs").siblings('label').removeClass('active');

          $(".mostrargerador").removeClass('hide');


          var jobcard_generator = document.getElementById("jobcard_generator");
             while (jobcard_generator.options.length > 0) { 
               jobcard_generator.remove(0); 
             }

          var opt = document.createElement('option');
         opt.value = "Escolha a opção";
         opt.innerHTML = "Escolha a opção";
         opt.id = "segundo";
         jobcard_generator.appendChild(opt);

         document.getElementById("segundo").selected = "true";
         document.getElementById("segundo").disabled = "true";

      
          for(var j = 0; j < dadossiteinfo[0].siteinfo_generatorArray.length; j++){

             var opt = document.createElement('option');
             opt.value = dadossiteinfo[0].siteinfo_generatorArray[j]._id;
             opt.innerHTML = dadossiteinfo[0].siteinfo_generatorArray[j].siteinfo_generatortype;
             jobcard_generator.appendChild(opt);
             //console.log(dadosclientessite[i].sites[j]);
          }
          

      }

  });

  $("#jobcard_currentgeneratorhours").on("input",function(){
    var horasanteriores = parseInt($("#jobcard_previousgeneratorhrs").val());
    var horasactuais = parseInt($("#jobcard_currentgeneratorhours").val());
    var runtimehrs = 0;
    runtimehrs = horasactuais - horasanteriores;
    console.log(runtimehrs);
    $("#jobcard_generatorruntimehours").siblings('label').addClass('active');
    $("#jobcard_generatorruntimehours").val(runtimehrs);
    if (isNaN($("#jobcard_generatorruntimehours").val())) {
      $("#jobcard_generatorruntimehours").val(0);
    }
  });

 $('.detalhesChegadaSitePlanned').click(function(){
    var referencia =$(this).attr("data-user-new"); 
    $('#loading').fadeIn().delay(20000).fadeOut();
    window.location.href="/manutencao/detalhesChegadaSitePlanned/" + referencia;
    

 });

 $('.novocallout').click(function(){
    
    $('#loading').fadeIn().delay(20000).fadeOut();
    window.location.href="/manutencao/ttnumberhome/novocallout";



 });


 $('.detalhesJobcardCallOut').click(function(){
    var referencia =$(this).attr("data-user-new"); 
    $('#loading').fadeIn().delay(20000).fadeOut();

    window.location.href="/manutencao/detalhesJobcardCallOut/" + referencia;


 });


 $('.detalhesJobcardPlanned').click(function(){
    var referencia =$(this).attr("data-user-new"); 
    $('#loading').fadeIn().delay(20000).fadeOut();

    window.location.href="/manutencao/detalhesJobcardPlanned/" + referencia;


 });


 $('.credelecdetalhes').click(function(){

    var referencia =$(this).attr("datareferencia"); 

    window.location.href="/manutencao/detalhesCredelecJobcard/" + referencia;

 });

 $('#jobcardcredlecinfo_yes_btn').click(function(){

    
    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    

    if(($("#jobcard_currentkwh").val() == "") || ($("#jobcard_kwhafter").val() == "") || ($("#jobcard_amountadded").val() == "") || ($("#jobcard_transactionr").val() == "") || ($("#jobcard_credelecnr").val() == "") ){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

    }else{

       var jobcard_currentkwhcomparar = parseFloat($("#jobcard_currentkwh").val());
       var jobcard_kwhaftercomparar  = parseFloat($("#jobcard_kwhafter").val());

          if(jobcard_currentkwhcomparar > jobcard_kwhaftercomparar){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O valor posterior é menor que o valor actual. Por favor rectifique!':'The after value is lower than the current value. Please rectify!<b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
             $('#msg_modal').openModal({dismissible:false});

          }else{
             $('#loading').fadeIn().delay(20000).fadeOut();
             
             var jobcardformdata = new FormData();
             

              var rule="/manutencao/updatecredelecdetails";

              var jobcard_id = referencia;
              jobcardformdata.append("jobcard_id", jobcard_id);

              var jobcard_currentkwh = $("#jobcard_currentkwh").val();
              jobcardformdata.append("jobcard_currentkwh", jobcard_currentkwh);

              var jobcard_kwhafter = $("#jobcard_kwhafter").val();
              jobcardformdata.append("jobcard_kwhafter", jobcard_kwhafter);

              var jobcard_amountadded = $("#jobcard_amountadded").val();
              jobcardformdata.append("jobcard_amountadded", jobcard_amountadded);

              var jobcard_transactionr = $("#jobcard_transactionr").val();
              jobcardformdata.append("jobcard_transactionr", jobcard_transactionr);

              var jobcard_credelecnr = $("#jobcard_credelecnr").val();
              jobcardformdata.append("jobcard_credelecnr", jobcard_credelecnr);

              var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);


              if(dadojobtype == "Callout"){

                 setTimeout(function(){
                       window.location.href="/manutencao/ttnumberhome/inprogress";
                     }, 3500); 

              }else{
               
                setTimeout(function(){
                    window.location.href="/manutencao/preventativemaint/inprogress";
                  }, 3500);

              }
          }

    }


 });


 $('#jobcardcredlecinfo_update').click(function(){

    
    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var datacredelecarray = $("#recolherdados").attr("datacredelecarray");
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    

    if(($("#jobcard_currentkwh").val() == "") || ($("#jobcard_kwhafter").val() == "") || ($("#jobcard_amountadded").val() == "") || ($("#jobcard_transactionr").val() == "") || ($("#jobcard_credelecnr").val() == "") ){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

    }else{

       var jobcard_currentkwhcomparar = parseFloat($("#jobcard_currentkwh").val());
       var jobcard_kwhaftercomparar  = parseFloat($("#jobcard_kwhafter").val());

          if(jobcard_currentkwhcomparar > jobcard_kwhaftercomparar){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O valor posterior é menor que o valor actual. Por favor rectifique!':'The after value is lower than the current value. Please rectify!<b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
             $('#msg_modal').openModal({dismissible:false});

          }else{
             $('#loading').fadeIn().delay(20000).fadeOut();
             
             var jobcardformdata = new FormData();
             

              var rule="/manutencao/updatecredelecdetailsActualizar";

              var jobcard_id = referencia;
              jobcardformdata.append("jobcard_id", jobcard_id);

              var jobcard_credelecId = datacredelecarray;
              jobcardformdata.append("jobcard_credelecId", jobcard_credelecId);

              var jobcard_currentkwh = $("#jobcard_currentkwh").val();
              jobcardformdata.append("jobcard_currentkwh", jobcard_currentkwh);

              var jobcard_kwhafter = $("#jobcard_kwhafter").val();
              jobcardformdata.append("jobcard_kwhafter", jobcard_kwhafter);

              var jobcard_amountadded = $("#jobcard_amountadded").val();
              jobcardformdata.append("jobcard_amountadded", jobcard_amountadded);

              var jobcard_transactionr = $("#jobcard_transactionr").val();
              jobcardformdata.append("jobcard_transactionr", jobcard_transactionr);

              var jobcard_credelecnr = $("#jobcard_credelecnr").val();
              jobcardformdata.append("jobcard_credelecnr", jobcard_credelecnr);

              var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);


             if(dadojobtype == "Callout"){

                 setTimeout(function(){
                       window.location.href="/manutencao/detalhesJobcardCallOut/" + referencia;
                     }, 3500); 

              }else{
               
                setTimeout(function(){
                    window.location.href="/manutencao/detalhesJobcardPlanned/" + referencia;
                  }, 3500);

              }



          }

    }


 });

  
 $('.generatordetalhes').click(function(){

    var referencia =$(this).attr("datareferencia"); 

    window.location.href="/manutencao/detalhesGeradorJobcard/" + referencia;

 });

  $('#jobcardgenerator_yes_btn').click(function(){


    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadossiteinfo = JSON.parse($("#recolherdados").attr("detalhessiteinfo"));
    var runtimehrs = parseInt($('#jobcard_generatorruntimehours').val());
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    var dadoscall = JSON.parse($("#recolherdados").attr("detalhescall"));
    var tipogerador = $("#jobcard_generatormobilefixed").val();
    var pricepliter = "";
    var price = $("#jobcard_priceperliter").val() + "";
    // var calljobcard = ["Project"];
    var currentgenhrs = $("#jobcard_currentgeneratorhours").val().trim().match(/^[0-9]+$/) !=null; //verify if the string has only numbers
    var genrefuel = $("#jobcard_generatorrefuel").val().trim().match(/^[0-9]+$/) !=null;
    price = price.split("");
    // var pricepliter = $("#jobcard_priceperliter").val().slice(0,5).trim();
    console.log(price);
      for(var i = 0; i<price.length; i++){
        if (((price[i].match(/^[0-9]+$/) !=null) == true) || price[i] == ".") {
          pricepliter = pricepliter.concat(price[i]);
        }
      }

    if(($("#jobcard_generatormobilefixed").val() == "Fixed") && ($("#jobcard_generator").val() == null)){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

    }else if((runtimehrs > 900) && (tipogerador == "Fixed")){
      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O gerador não funciona por mais de 900 horas Por favor, revise a hora actual do gerador.':'Generator cannot run for more then 900 hours. Please revise you current hour.'))
      $('#msg_modal').openModal();
    }
    else if ( (currentgenhrs == false) || (genrefuel == false) ) {
      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor preencha os campos apenas com dígitos, sem letras ou palavras.':'Please fill out the fields only with digits, without letters or words.'));
        $('#msg_modal').openModal();
    }
    
    else


    if(($("#jobcard_generatormobilefixed").val() == "") || ($("#jobcard_previousgeneratorhrs").val() == "") || ($("#jobcard_currentgeneratorhours").val() == "") || ($("#jobcard_previousrefuelhrs").val() == "") || ($("#jobcard_generatorrefuel").val() == "") || ($("#jobcard_priceperliter").val() == "") || ($("#jobcard_litersoil").val() == "") || (($("#jobcard_dsc").val() == null) && $("#reset_reason").val() == null) || ($("#jobcard_refuelreason").val() == null) || ($("#jobcard_generatorbeenserviced").val() == null) ){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

    }else{

       var jobcard_previousgeneratorhrscomparar = parseFloat($("#jobcard_previousgeneratorhrs").val());
       var jobcard_currentgeneratorhourscomparar  = parseFloat($("#jobcard_currentgeneratorhours").val());

          if(jobcard_previousgeneratorhrscomparar > jobcard_currentgeneratorhourscomparar){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'As horas actuais do gerador são menores que as anteriores. Por favor rectifique!':'The current generator hours are shorter than the previous ones. Please rectify!<b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
             $('#msg_modal').openModal({dismissible:false});

          }else{
             $('#loading').fadeIn().delay(20000).fadeOut();
             
             var jobcardformdata = new FormData();
             console.log("Done")

              var rule="/manutencao/updategeneratordetails";

              var jobcard_id = referencia;
              jobcardformdata.append("jobcard_id", jobcard_id);

              var jobcard_generatormobilefixed = $("#jobcard_generatormobilefixed").val();
              jobcardformdata.append("jobcard_generatormobilefixed", jobcard_generatormobilefixed);

              if(jobcard_generatormobilefixed == "Mobile"){

                var jobcard_generator = "";
                jobcardformdata.append("jobcard_generator", jobcard_generator);

              }else{

                var jobcard_generator = $("#jobcard_generator").val();
                jobcardformdata.append("jobcard_generator", jobcard_generator);
              }

             
              var jobcard_siteid = dadossiteinfo[0]._id;
              jobcardformdata.append("jobcard_siteid", jobcard_siteid);

              

              var jobcard_generatorrefuel = $("#jobcard_generatorrefuel").val();
              jobcardformdata.append("jobcard_generatorrefuel", jobcard_generatorrefuel);

              var jobcard_litersoil = $("#jobcard_litersoil").val();
              jobcardformdata.append("jobcard_litersoil", jobcard_litersoil);

              var jobcard_refuelreason = $("#jobcard_refuelreason").val();;
              jobcardformdata.append("jobcard_refuelreason", jobcard_refuelreason);

              var jobcard_priceperliter = pricepliter;
              jobcardformdata.append("jobcard_priceperliter", jobcard_priceperliter);

              var jobcard_dsc = $("#jobcard_dsc").val();
              jobcardformdata.append("jobcard_dsc", jobcard_dsc);

              var jobcard_generatorbeenserviced = $("#jobcard_generatorbeenserviced").val();
              jobcardformdata.append("jobcard_generatorbeenserviced", jobcard_generatorbeenserviced);

              var jobcard_currentgeneratorhours = $("#jobcard_currentgeneratorhours").val();
              jobcardformdata.append("jobcard_currentgeneratorhours", jobcard_currentgeneratorhours);

              var reset_reason = $("#reset_reason").val();
              jobcardformdata.append("reset_reason", reset_reason);

              

              if((jobcard_dsc == "Yes") || (jobcard_generatorbeenserviced == "Yes")){

                var jobcard_previousgeneratorhrs = jobcard_currentgeneratorhours;
                jobcardformdata.append("jobcard_previousgeneratorhrs", jobcard_previousgeneratorhrs);

                var jobcard_previousrefuelhrs = jobcard_currentgeneratorhours;
                jobcardformdata.append("jobcard_previousrefuelhrs", jobcard_previousrefuelhrs);
                
              }else{

                var jobcard_previousgeneratorhrs = $("#jobcard_previousgeneratorhrs").val();
                jobcardformdata.append("jobcard_previousgeneratorhrs", jobcard_previousgeneratorhrs);

                var jobcard_previousrefuelhrs = $("#jobcard_previousrefuelhrs").val();
                jobcardformdata.append("jobcard_previousrefuelhrs", jobcard_previousrefuelhrs);
              }
              

              var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);


              if(dadojobtype == "Callout"){

                 setTimeout(function(){
                       window.location.href="/manutencao/ttnumberhome/inprogress";
                     }, 3500); 

              }else{
               
                setTimeout(function(){
                    window.location.href="/manutencao/preventativemaint/inprogress";
                  }, 3500);

              }
          }

    }



    

 });


  $('#jobcardgeneratordetalhesupdate').click(function(){

    
    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadosIdgeradorjobcard = $("#recolherdados").attr("datageradorarray");
    var dadossiteinfo = JSON.parse($("#recolherdados").attr("detalhessiteinfo"));
    var dadoinfogerador = JSON.parse($("#recolherdados").attr("dadoinfogerador"));
    
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    var dadoscall = JSON.parse($("#recolherdados").attr("detalhescall"));
    // var calljobcard = ["Project"];

    if(($("#jobcard_generatormobilefixed").val() == "Fixed") && ($("#jobcard_generator").val() == null)){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

    }else


    if(($("#jobcard_generatormobilefixed").val() == "") || ($("#jobcard_previousgeneratorhrs").val() == "") || ($("#jobcard_currentgeneratorhours").val() == "") || ($("#jobcard_previousrefuelhrs").val() == "") || ($("#jobcard_generatorrefuel").val() == "") || ($("#jobcard_priceperliter").val() == "") || ($("#jobcard_litersoil").val() == "") || ($("#jobcard_dsc").val() == null) || ($("#jobcard_refuelreason").val() == null) || ($("#jobcard_generatorbeenserviced").val() == null) ){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
         $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
         $('#msg_modal').openModal();

    }else{

       var jobcard_previousgeneratorhrscomparar = parseFloat($("#jobcard_previousgeneratorhrs").val());
       var jobcard_currentgeneratorhourscomparar  = parseFloat($("#jobcard_currentgeneratorhours").val());

          if((jobcard_previousgeneratorhrscomparar > jobcard_currentgeneratorhourscomparar) && ($("#jobcard_dsc").val() == "No")){

             $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
             $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'As horas actuais do gerador são menores que as anteriores. Por favor rectifique!':'The current generator hours are shorter than the previous ones. Please rectify!<b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
             $('#msg_modal').openModal({dismissible:false});

          }else{

             $('#loading').fadeIn().delay(20000).fadeOut();
             
             var jobcardformdata = new FormData();
             console.log("Done")

              var jobcard_id = referencia;
              jobcardformdata.append("jobcard_id", jobcard_id);

              jobcardformdata.append("dadosIdgeradorjobcard", dadosIdgeradorjobcard);

              var jobcard_generatormobilefixed = $("#jobcard_generatormobilefixed1").val();
              jobcardformdata.append("jobcard_generatormobilefixed", jobcard_generatormobilefixed);

              if(jobcard_generatormobilefixed == "Mobile"){

                var jobcard_generator = "";
                jobcardformdata.append("jobcard_generator", jobcard_generator);

              }else{

                var jobcard_generator = $("#jobcard_generator").val();
                jobcardformdata.append("jobcard_generator", jobcard_generator);
              }

             
              var jobcard_siteid = dadossiteinfo[0]._id;
              jobcardformdata.append("jobcard_siteid", jobcard_siteid);


              var jobcard_generatorrefuel = $("#jobcard_generatorrefuel").val();
              jobcardformdata.append("jobcard_generatorrefuel", jobcard_generatorrefuel);

              var jobcard_litersoil = $("#jobcard_litersoil").val();
              jobcardformdata.append("jobcard_litersoil", jobcard_litersoil);

              var jobcard_refuelreason = $("#jobcard_refuelreason").val();;
              jobcardformdata.append("jobcard_refuelreason", jobcard_refuelreason);

              var jobcard_priceperliter = $("#jobcard_priceperliter").val();
              jobcardformdata.append("jobcard_priceperliter", jobcard_priceperliter);

              var jobcard_dsc = $("#jobcard_dsc").val();
              jobcardformdata.append("jobcard_dsc", jobcard_dsc);

              var jobcard_generatorbeenserviced = $("#jobcard_generatorbeenserviced").val();
              jobcardformdata.append("jobcard_generatorbeenserviced", jobcard_generatorbeenserviced);

              var jobcard_currentgeneratorhours = $("#jobcard_currentgeneratorhours").val();
              jobcardformdata.append("jobcard_currentgeneratorhours", jobcard_currentgeneratorhours);

              
              if(jobcard_dsc == "Yes"){

                var jobcard_previousgeneratorhrs = jobcard_currentgeneratorhours;
                jobcardformdata.append("jobcard_previousgeneratorhrs", jobcard_previousgeneratorhrs);

                var jobcard_previousrefuelhrs = jobcard_currentgeneratorhours;
                jobcardformdata.append("jobcard_previousrefuelhrs", jobcard_previousrefuelhrs);
                
              }else{

                var jobcard_previousgeneratorhrs = $("#jobcard_previousgeneratorhrs").val();
                jobcardformdata.append("jobcard_previousgeneratorhrs", jobcard_previousgeneratorhrs);

                var jobcard_previousrefuelhrs = $("#jobcard_previousrefuelhrs").val();
                jobcardformdata.append("jobcard_previousrefuelhrs", jobcard_previousrefuelhrs);
              }

              
              
             if(jobcard_generator != dadoinfogerador.jobcard_generator){

                var rule="/manutencao/updategeneratordetailsGeradorDiferente";

             }else{
                var rule="/manutencao/updategeneratordetailsGeradorIgual";
             }

               var xhr = new XMLHttpRequest();
               // Add any event handlers here...
               xhr.open('POST',rule, true);
               xhr.send(jobcardformdata);

               if(dadojobtype == "Callout"){

                 setTimeout(function(){
                       window.location.href="/manutencao/detalhesJobcardCallOut/" + referencia;
                     }, 3500); 

              }else{
               
                setTimeout(function(){
                    window.location.href="/manutencao/detalhesJobcardPlanned/" + referencia;
                  }, 3500);

              }


              
          }

    }      

 });


   $('#reasonoptions').change(function(){
    var op = $("#reasonoptions").val();

      for(var j = 0; j < op.length; j++){

        if(op[j] == "Outros"){
          $('#mostrarOutros').removeClass('hide');
        }else{
          $("#reasonoutros").val("")
          $("#reasonoutros").siblings('label').removeClass('active');
          $('#mostrarOutros').addClass('hide');
          

        }

      }

      if(op.length == 0){
        $("#reasonoutros").val("")
        $("#reasonoutros").siblings('label').removeClass('active');
        $('#mostrarOutros').addClass('hide');
      }

  });

   $('.editCreditPettycash').click(function(){

    var referencia = $(this).attr("dataref");
    var creditovalor = $(this).attr("creditovalue");
    var saldovalor = $(this).attr("saldovalue");
    $("#pettycash_credito1").val(creditovalor);
    $("#pettycash_credito1").siblings('label').addClass('active');
    var dadoscaminho = $(this).attr("detalhescaminho");
    var definircaminho = dadoscaminho.split('/')[1];

    $('#pettycasheditcredit_modal').openModal({dismissible:false});
    $('#pettycasheditcredit_yes_btn_modal').click(function(e){

        e.stopPropagation();
        e.stopImmediatePropagation();

        var rule="/pettycash/editCreditPettycash/" + dadoscaminho + "/" + referencia;

        var pettycashopformdata = new FormData();

        var pettycashop_id = referencia;
        pettycashopformdata.append("pettycashop_id", pettycashop_id);

        var creditovalornovo = $("#pettycash_credito1").val();
        pettycashopformdata.append("creditovalornovo", creditovalornovo);

        var creditovalorantigo = creditovalor;
        pettycashopformdata.append("creditovalorantigo", creditovalorantigo);

        var saldovaloranterior = saldovalor;
        pettycashopformdata.append("saldovaloranterior", saldovaloranterior);

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(pettycashopformdata);

        setTimeout(function(){
          if(definircaminho != "range"){
            window.location.href="/pettycash/detalhesUso/" + dadoscaminho;
          }else{
            window.location.href="/pettycash/accountcontrol_home";
          }
          
        }, 1000);


    });


   });

  $('.refusepettycash').click(function(){

    var referencia = $(this).attr("dataref");
    var debitovalor = $(this).attr("debitovalue");
    var dadoscaminho = $(this).attr("detalhescaminho");
    var definircaminho = dadoscaminho.split('/')[1];
    // console.log(dadoscaminho)

    $('#pettycashreason_modal').openModal({dismissible:false});
    $('#pettycashreason_yes_btn_modal').click(function(e){
        e.stopPropagation();
        e.stopImmediatePropagation();

        var reasonoptions = $("#reasonoptions").val();
        var posicao = reasonoptions.indexOf("Outros");
        var reasonoutros = $("#reasonoutros").val();

        if((reasonoptions.length == 0) || ((posicao != -1) && (reasonoutros == ""))) {

          $('#pettycashreason_yes_btn_modal').addClass('apply-shake');
          $('#paragrafoatt2').removeClass('hide');

        }else{
          var rule="/pettycash/refusepettycash/" + dadoscaminho + "/" + referencia;

        var optionsformdata = new FormData();

        var operation_id = referencia;
        optionsformdata.append("operation_id", operation_id);

        if(reasonoutros != ""){
          // reasonoptions.push(reasonoutros);
          reasonoptions[posicao] = reasonoutros
        }
        optionsformdata.append("reasonoptions", JSON.stringify(reasonoptions));


        optionsformdata.append("debitovalor", debitovalor);

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(optionsformdata);

        setTimeout(function(){
          if(definircaminho != "range"){
            window.location.href="/pettycash/detalhesUso/" + dadoscaminho;
          }else{
            window.location.href="/pettycash/accountcontrol_home";
          }
          
        }, 1000);
        }

        

    });

  });

  const controle_modalpettycashrefuse = document.querySelector("button#pettycashreason_yes_btn_modal");

  controle_modalpettycashrefuse.addEventListener("animationend", (e) => {
    controle_modalpettycashrefuse.classList.remove("apply-shake");
    $('#paragrafoatt2').addClass('hide');
 });

  $('.equipmentrepairsproject').click(function(){

      var referencia = $(this).attr("data-user-new");

      window.location.href="/manutencao/detalhesEquipmentRepairsJobcardProject/" + referencia;
       
  });


  $('#jobcardequipmentproject_yes_btn').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciaprojecto");


    if(($("#jobcard_equiptype").val() == null) || ($("#jobcard_manufacturer").val() == null) || ($("#jobcard_model").val() == "") || ($("#jobcard_serialnumber").val() == "") || ($("#jobcard_capacity").val() == "") || ($("#jobcard_type").val() == "")){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
       $('#msg_modal').openModal();

    }else{
       $('#loading').fadeIn().delay(20000).fadeOut();

       var jobcardformdata = new FormData();

        var rule="/manutencao/updateequipmentrepairsproject";

        var jobcard_id = referencia;
        jobcardformdata.append("jobcard_id", jobcard_id);

        var jobcard_equiptype = $("#jobcard_equiptype").val();;
        jobcardformdata.append("jobcard_equiptype", jobcard_equiptype);

        var jobcard_manufacturer = $("#jobcard_manufacturer").val();;
        jobcardformdata.append("jobcard_manufacturer", jobcard_manufacturer);

        var jobcard_model = $("#jobcard_model").val();;
        jobcardformdata.append("jobcard_model", jobcard_model);

        var jobcard_serialnumber = $("#jobcard_serialnumber").val();;
        jobcardformdata.append("jobcard_serialnumber", jobcard_serialnumber);

        var jobcard_capacity = $("#jobcard_capacity").val();;
        jobcardformdata.append("jobcard_capacity", jobcard_capacity);

        var jobcard_type = $("#jobcard_type").val();;
        jobcardformdata.append("jobcard_type", jobcard_type);



        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(jobcardformdata);

        setTimeout(function(){
              window.location.href="/manutencao/jobcardprojectshome/inprogress";
            }, 3000);

    }



  });


  $('.equipmentrepairs').click(function(){

      var referencia = $(this).attr("data-user-new");

      window.location.href="/manutencao/detalhesEquipmentRepairsJobcard/" + referencia;
       
  });

  $('#jobcardequipment_yes_btn').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    

    if(($("#jobcard_equiptype").val() == null) || ($("#jobcard_manufacturer").val() == null) || ($("#jobcard_model").val() == "") || ($("#jobcard_serialnumber").val() == "") || ($("#jobcard_capacity").val() == "") || ($("#jobcard_type").val() == "")){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
       $('#msg_modal').openModal();

    }else{
       $('#loading').fadeIn().delay(20000).fadeOut();

       var jobcardformdata = new FormData();

        var rule="/manutencao/updateequipmentrepairs";

        var jobcard_id = referencia;
        jobcardformdata.append("jobcard_id", jobcard_id);

        var jobcard_equiptype = $("#jobcard_equiptype").val();;
        jobcardformdata.append("jobcard_equiptype", jobcard_equiptype);

        var jobcard_manufacturer = $("#jobcard_manufacturer").val();;
        jobcardformdata.append("jobcard_manufacturer", jobcard_manufacturer);

        var jobcard_model = $("#jobcard_model").val();;
        jobcardformdata.append("jobcard_model", jobcard_model);

        var jobcard_serialnumber = $("#jobcard_serialnumber").val();;
        jobcardformdata.append("jobcard_serialnumber", jobcard_serialnumber);

        var jobcard_capacity = $("#jobcard_capacity").val();;
        jobcardformdata.append("jobcard_capacity", jobcard_capacity);

        var jobcard_type = $("#jobcard_type").val();;
        jobcardformdata.append("jobcard_type", jobcard_type);



        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(jobcardformdata);

        if(dadojobtype == "Callout"){

          setTimeout(function(){
             window.location.href="/manutencao/ttnumberhome/inprogress";
         }, 3500);
            
        }else{
          
          setTimeout(function(){
              window.location.href="/manutencao/preventativemaint/inprogress";
            }, 3500);
        }
    }



  });


  $('#jobcardequipment_update').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    var dataequipmentarray = $("#recolherdados").attr("dataequipmentarray");
    

    if(($("#jobcard_equiptype").val() == null) || ($("#jobcard_manufacturer").val() == null) || ($("#jobcard_model").val() == "") || ($("#jobcard_serialnumber").val() == "") || ($("#jobcard_capacity").val() == "") || ($("#jobcard_type").val() == "")){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
       $('#msg_modal').openModal();

    }else{
       $('#loading').fadeIn().delay(20000).fadeOut();

       var jobcardformdata = new FormData();

        var rule="/manutencao/updateequipmentrepairsAlterar";

        var jobcard_id = referencia;
        jobcardformdata.append("jobcard_id", jobcard_id);

        var jobcard_equipId = dataequipmentarray;
        jobcardformdata.append("jobcard_equipId", jobcard_equipId);

        var jobcard_equiptype = $("#jobcard_equiptype").val();;
        jobcardformdata.append("jobcard_equiptype", jobcard_equiptype);

        var jobcard_manufacturer = $("#jobcard_manufacturer").val();;
        jobcardformdata.append("jobcard_manufacturer", jobcard_manufacturer);

        var jobcard_model = $("#jobcard_model").val();;
        jobcardformdata.append("jobcard_model", jobcard_model);

        var jobcard_serialnumber = $("#jobcard_serialnumber").val();;
        jobcardformdata.append("jobcard_serialnumber", jobcard_serialnumber);

        var jobcard_capacity = $("#jobcard_capacity").val();;
        jobcardformdata.append("jobcard_capacity", jobcard_capacity);

        var jobcard_type = $("#jobcard_type").val();;
        jobcardformdata.append("jobcard_type", jobcard_type);



        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(jobcardformdata);

          if(dadojobtype == "Callout"){

              setTimeout(function(){
                    window.location.href="/manutencao/detalhesJobcardCallOut/" + referencia;
                  }, 3500); 

           }else{
            
             setTimeout(function(){
                 window.location.href="/manutencao/detalhesJobcardPlanned/" + referencia;
               }, 3500);

           }

    }



  });


  $('.sparesusedproject').click(function(){

      var referenciaproject = $(this).attr("data-user-new");
      var referenciaidtecnico = $(this).attr("data-user-name");

      var dadosarmazem = JSON.parse($("#recolherdados").attr("detalhesstockpessoal"));
      
       if(dadosarmazem.length == 0){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Estoque pessoal indisponível!':'Personal stock unavailable!<b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
          $('#msg_modal').openModal({dismissible:false});

       }else{

          var posicaostock = dadosarmazem.findIndex(x => x.nome_ref === referenciaidtecnico);
          var controlastockdisponivel = [];

          if(posicaostock == -1){

              $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
              $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Estoque pessoal indisponível!':'Personal stock unavailable!<b>')+(($(".lang-picker > .selected").attr("value")=="pt")?'</b> ':"</b>"));
              $('#msg_modal').openModal({dismissible:false});

          }else{

             for(var j = 0; j < dadosarmazem[posicaostock].disponibilidade.length; j++){

                var disp = dadosarmazem[posicaostock].disponibilidade[j].disponivel;
                if(disp > 0 ){

                   controlastockdisponivel.push(1);
                }   
             }

             if(controlastockdisponivel.length == 0){

                $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
                $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Itens indisponíveis!':'Unavailable items!<b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
                $('#msg_modal').openModal({dismissible:false});

             }else{

                window.location.href="/manutencao/detalhesSparesUsedJobcardProject/" + referenciaproject + "/" + referenciaidtecnico;

             }

          }

       }
      
  });


  $('.sparesused').click(function(){

      var referenciajobcard = $(this).attr("data-user-new");
      var referenciaidtecnico = $(this).attr("data-user-name");

      window.location.href="/manutencao/detalhesSparesUsedJobcard/" + referenciajobcard + "/" + referenciaidtecnico;
      
  });

  $("#photoinfo").click(function(){
    var referenciajobcard = $("#photoinfo").attr("data-user-new");
    console.log(referenciajobcard);
    window.location.href="/manutencao/detalhesPhotoModal/" + referenciajobcard;
  });

  $(".photoinfohvac").click(function(){
    var referenciajobcard = $(this).attr("data-user-new");
    console.log(referenciajobcard);
    window.location.href="/climatizacao/detalhesPhotoModahvac/" + referenciajobcard;
  });


  $('#jobcardsparesproject_yes_btn').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciaproject");
    var dadosarmazem = JSON.parse($("#recolherdados").attr("dadosstockpessoal"));
    var controlador = 0;

    var jobcard_itemidcomp = $("#jobcard_itemid").val();
    var jobcard_quantityusecomp = $("#jobcard_quantityuse").val();
    var jobcard_itemnrseriecomp = $("#jobcard_itemnrserie").val();
    var jobcard_itemserialized = $("#jobcard_itemserialized").val();
    var jobcard_itemreplacephoto=$("#jobcard_itemreplacephoto").get(0).files;
    var jobcard_itemphoto=$("#jobcard_itemphoto").get(0).files;

    if(jobcard_itemidcomp != null){
       var posicaoitem = dadosarmazem.disponibilidade.findIndex(x => x.referencia === jobcard_itemidcomp);
    }
    
    if((jobcard_itemidcomp == null) || (jobcard_itemphoto.length == 0)){

       controlador = 1;
    }else
       if ((jobcard_quantityusecomp == "") && (jobcard_itemnrseriecomp == null)) {
          controlador = 1;
       }else
          if((dadosarmazem.disponibilidade[posicaoitem].serialized == "sim") && (dadosarmazem.disponibilidade[posicaoitem].num_serie.length != 0) && (dadosarmazem.disponibilidade[posicaoitem].num_serie[0] != null)){

             var jobcard_itemreplace = $("#jobcard_itemreplaceproject").val();

             if(jobcard_itemreplace == null){
                controlador = 1;
             }else
                if(jobcard_itemreplace == "Sim"){
                   var jobcard_itemreplacereason = $("#jobcard_itemreplacereason").val();

                   if(jobcard_itemreplacereason == ""){
                      controlador = 1;
                   }else
                      if(jobcard_itemreplacephoto.length == 0){
                         controlador = 1;
                      }else{
                         var jobcard_nomeitemreplaceinput = $("#jobcard_nomeitemreplaceinput").val();
                         var jobcard_nomeitemreplaceselect = $("#jobcard_nomeitemreplaceselect").val();

                         if((jobcard_nomeitemreplaceinput == "") && (jobcard_nomeitemreplaceselect == null)){
                            controlador = 1;
                         }
                   }
                }
          }

     if(controlador == 1){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
       $('#msg_modal').openModal();

    }else{
       $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja guardar esta informação ':'Do you want to save this information <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
       $('#yes_no_modal').openModal({dismissible:false});
       $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
       $('#yes_btn_modal').click(function(e){

          $('#loading').fadeIn().delay(20000).fadeOut();
          var jobcardformdata = new FormData();

             var jobcard_id = referencia;
             jobcardformdata.append("jobcard_id", jobcard_id);

             var jobcard_sitecontrolador = $("#jobcard_sitecontrolador").val();
             if(jobcard_sitecontrolador != undefined){
                jobcardformdata.append("jobcard_sitecontrolador", jobcard_sitecontrolador);
             }else{
                var jobcard_sitecontrolador1 = $("#jobcard_sitecontrolador1").val();
                jobcardformdata.append("jobcard_sitecontrolador", jobcard_sitecontrolador1);
             }

             var jobcard_tecnicoid = dadosarmazem.nome_ref;
             jobcardformdata.append("jobcard_tecnicoid", jobcard_tecnicoid);

             var jobcard_itemid = $("#jobcard_itemid").val();
             jobcardformdata.append("jobcard_itemid", jobcard_itemid);

             var jobcard_quantityhave = $("#jobcard_quantityhave").val();
             jobcardformdata.append("jobcard_quantityhave", jobcard_quantityhave);

             var jobcard_itemphoto=$("#jobcard_itemphoto").get(0).files;
             jobcardformdata.append('jobcard_itemphoto', jobcard_itemphoto[0]);

             var jobcard_itemnrserie = $("#jobcard_itemnrserie").val();
             

             if(jobcard_itemnrserie != null){

                jobcardformdata.append("jobcard_itemnrserie", jobcard_itemnrserie);
                
                var jobcard_quantityuse = 1;
                jobcardformdata.append("jobcard_quantityuse", jobcard_quantityuse);

                var jobcard_remaining = parseInt(jobcard_quantityhave) - 1;
                jobcardformdata.append("jobcard_remaining", jobcard_remaining);

             }else{
                var jobcard_quantityuse = $("#jobcard_quantityuse").val();
                jobcardformdata.append("jobcard_quantityuse", jobcard_quantityuse);

                var jobcard_remaining = parseFloat(jobcard_quantityhave) - jobcard_quantityuse;
                jobcardformdata.append("jobcard_remaining", jobcard_remaining);

             }

             if((dadosarmazem.disponibilidade[posicaoitem].serialized == "sim") && (dadosarmazem.disponibilidade[posicaoitem].num_serie.length != 0) && (dadosarmazem.disponibilidade[posicaoitem].num_serie[0] != null)){

                var jobcard_itemreplace = $("#jobcard_itemreplaceproject").val();
                jobcardformdata.append("jobcard_itemreplace", jobcard_itemreplace);

                if(jobcard_itemreplace == "Sim"){
                   var jobcard_itemreplacereason = $("#jobcard_itemreplacereason").val();
                   jobcardformdata.append("jobcard_itemreplacereason", jobcard_itemreplacereason);

                   var jobcard_itemreplacephoto=$("#jobcard_itemreplacephoto").get(0).files;
                   jobcardformdata.append('jobcard_itemreplacephoto', jobcard_itemreplacephoto[0]);
                  
                   var jobcard_nomeitemreplaceinput = $("#jobcard_nomeitemreplaceinput").val();
                   var jobcard_nomeitemreplaceselect = $("#jobcard_nomeitemreplaceselect").val();

                   if(jobcard_nomeitemreplaceinput != ""){
                      jobcardformdata.append("jobcard_nomeitemreplace", jobcard_nomeitemreplaceinput);
                   }else{
                      jobcardformdata.append("jobcard_nomeitemreplace", jobcard_nomeitemreplaceselect);
                   }
                }
             }
             

             var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
             var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
             var ano = (new Date()).getFullYear();
             var todaydate = dia + "/" + mes + "/" + ano;

             var jobcard_datauso = todaydate;
             jobcardformdata.append("jobcard_datauso", jobcard_datauso);

             if((dadosarmazem.disponibilidade[posicaoitem].serialized == "sim") && (dadosarmazem.disponibilidade[posicaoitem].num_serie.length != 0) && (dadosarmazem.disponibilidade[posicaoitem].num_serie[0] != null)){

               if(jobcard_itemreplace == "Sim"){

                 var rule="/manutencao/updatesparesusedserializereplaceproject";
                 // console.log("updatesparesusedserializereplace")
               }else{

                 var rule="/manutencao/updatesparesusedserializeNotreplaceproject";
                 // console.log("updatesparesusedserializeNotreplace")
               }

             }else{

                var rule="/manutencao/updatesparesusedNotreplaceproject";

             }
             

             var xhr = new XMLHttpRequest();
             // Add any event handlers here...
             xhr.open('POST',rule, true);
             xhr.send(jobcardformdata);

             setTimeout(function(){
              window.location.href="/manutencao/jobcardprojectshome/inprogress";
            }, 3000);

       });

    }
          
 });

 
 $('#jobcardspares_update').click(function(){

    // console.log($("#jobcard_itemreplace1").val());
    // console.log($("#jobcard_nomeitemreplaceselect").val());
    

    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    var dadosusedSpareJobcard = JSON.parse($("#recolherdados").attr("dadosusedSpareJobcard"));
    var dadosarmazem = JSON.parse($("#recolherdados").attr("dadosstockpessoal"));
    var dadosspareusedinfo = JSON.parse($("#recolherdados").attr("dadosspareusedinfo"));
    var posicaoitem = dadosarmazem[0].disponibilidade.findIndex(x => x.referencia === jobcard_itemid);
    var controlador = 0;
    var jobcard_itemid = $("#jobcard_itemid1").val();
    console.log(dadosspareusedinfo)
       
       var jobcard_quantityuse = $("#jobcard_quantityuse").val();
       var jobcard_itemnrserie = $("#jobcard_itemnrserie").val();
       var jobcard_itemphoto = $("#jobcard_itemphoto").get(0).files;
       var jobcard_itemreplace = $("#jobcard_itemreplace1").val();
       var jobcard_nomeitemreplaceinput = $("#jobcard_nomeitemreplaceinput").val();
       var jobcard_nomeitemreplaceselect = $("#jobcard_nomeitemreplaceselect").val();
       var jobcard_itemreplacephoto=$("#jobcard_itemreplacephoto").get(0).files;


       if((jobcard_quantityuse == "") && (jobcard_itemnrserie == null)){
          controlador = 1;
          
       }else
          if(($(".mostrarfotoitem").is(":hidden") == false) && (jobcard_itemphoto.length == 0)){
             
             controlador = 1;

          }else
             if(jobcard_itemreplace == "Sim"){

                var jobcard_itemreplacereason = $("#jobcard_itemreplacereason").val();

                if(jobcard_itemreplacereason == ""){
                   controlador = 1
                }else
                   if((jobcard_nomeitemreplaceinput == "") && (jobcard_nomeitemreplaceselect == null)){
                      controlador = 1
                   }else
                      if(($(".mostrarfotoitemreplace").is(":hidden") == false) && (jobcard_itemreplacephoto.length == 0)){
                         controlador = 1
                      }

             }


       if(controlador == 1){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
          $('#msg_modal').openModal();

       }else{

          $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja guardar esta informação ':'Do you want to save this information <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
          $('#yes_no_modal').openModal({dismissible:false});
          $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
          $('#yes_btn_modal').click(function(e){

                $('#loading').fadeIn().delay(20000).fadeOut();
                var jobcardformdata = new FormData();

                var jobcard_id = referencia;
                jobcardformdata.append("jobcard_id", jobcard_id);

                var jobcard_tecnicoid = dadosarmazem[0].nome_ref;
                jobcardformdata.append("jobcard_tecnicoid", jobcard_tecnicoid);

                var spareused_id = dadosusedSpareJobcard._id;
                jobcardformdata.append("spareused_id", spareused_id);

                var spareusedinfo_id = dadosspareusedinfo[0]._id;
                jobcardformdata.append("spareusedinfo_id", spareusedinfo_id);

                var jobcard_itemid = $("#jobcard_itemid1").val();
                jobcardformdata.append("jobcard_itemid", jobcard_itemid);

                var jobcard_quantityhave = $("#jobcard_quantityhave").val();
                jobcardformdata.append("jobcard_quantityhave", jobcard_quantityhave);

                var jobcard_itemowner = $("#jobcard_itemowner").val();
                jobcardformdata.append("jobcard_itemowner", jobcard_itemowner);

                var jobcard_itemnrserie = $("#jobcard_itemnrserie").val();

                if(jobcard_itemnrserie != null){

                   jobcardformdata.append("jobcard_itemnrserie", jobcard_itemnrserie);
                   
                   var jobcard_quantityuse = 1;
                   jobcardformdata.append("jobcard_quantityuse", jobcard_quantityuse);

                   var jobcard_remaining = parseInt(jobcard_quantityhave) - 1;
                   jobcardformdata.append("jobcard_remaining", jobcard_remaining);

                }else{
                   var jobcard_quantityuse = $("#jobcard_quantityuse").val();
                   jobcardformdata.append("jobcard_quantityuse", jobcard_quantityuse);

                   var jobcard_remaining = parseFloat(jobcard_quantityhave) - jobcard_quantityuse;
                   jobcardformdata.append("jobcard_remaining", jobcard_remaining);

                }

                if($(".mostrarfotoitem").is(":hidden") == false){
                   var jobcard_itemphoto=$("#jobcard_itemphoto").get(0).files;
                   jobcardformdata.append('jobcard_itemphoto', jobcard_itemphoto[0]);
                }else{
                   var jobcard_itemphoto=dadosusedSpareJobcard.jobcard_itemphoto;
                   jobcardformdata.append('jobcard_itemphoto', jobcard_itemphoto);
                }


                var jobcard_itemreplace = $("#jobcard_itemreplace1").val();
                if(jobcard_itemreplace == null){

                   var jobcard_itemreplace = "";
                   jobcardformdata.append("jobcard_itemreplace", jobcard_itemreplace);

                }else{

                   jobcardformdata.append("jobcard_itemreplace", jobcard_itemreplace);

                   if(jobcard_itemreplace == "Sim"){

                      var jobcard_itemreplacereason = $("#jobcard_itemreplacereason").val();
                      jobcardformdata.append("jobcard_itemreplacereason", jobcard_itemreplacereason);

                      var jobcard_nomeitemreplaceselect = $("#jobcard_nomeitemreplaceselect").val();
                      if(jobcard_nomeitemreplaceselect != null){
                         jobcardformdata.append("jobcard_nomeitemreplace", jobcard_nomeitemreplaceselect);
                      }else{
                         var jobcard_nomeitemreplaceinput = $("#jobcard_nomeitemreplaceinput").val();
                         jobcardformdata.append("jobcard_nomeitemreplace", jobcard_nomeitemreplaceinput);
                      }

                      if($(".mostrarfotoitemreplace").is(":hidden") == false){
                         var jobcard_itemreplacephoto=$("#jobcard_itemreplacephoto").get(0).files;
                         jobcardformdata.append('jobcard_itemreplacephoto', jobcard_itemreplacephoto[0]);
                      }else{
                         var jobcard_itemreplacephoto=dadosusedSpareJobcard.jobcard_itemreplacephoto;
                         jobcardformdata.append('jobcard_itemreplacephoto', jobcard_itemreplacephoto);
                      }

                   }

                }

                var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
                var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
                var ano = (new Date()).getFullYear();
                var todaydate = dia + "/" + mes + "/" + ano;

                var jobcard_datauso = todaydate;
                jobcardformdata.append("jobcard_datauso", jobcard_datauso);
                
                if(jobcard_itemid == dadosusedSpareJobcard.jobcard_itemid){
                   if(jobcard_itemreplace == "Sim"){
                      
                      var rule="/manutencao/updatesparesusedserializereplacesamespare";
                   }else
                      if(jobcard_itemreplace == "Nao"){
                         var rule="/manutencao/updatesparesusedserializeNotreplacesamespare";
                      }else{
                         var rule="/manutencao/updatesparesusedNotreplacesamespare";
                      }
                }else{
                   if(jobcard_itemreplace == "Sim"){
                      var rule="/manutencao/updatesparesusedserializereplacediffspare";
                   }else
                      if(jobcard_itemreplace == "Nao"){
                         var rule="/manutencao/updatesparesusedserializeNotreplacediffspare";
                      }else{
                         var rule="/manutencao/updatesparesusedNotreplacediffspare";
                      }
                }


                var xhr = new XMLHttpRequest();
             // Add any event handlers here...
             xhr.open('POST',rule, true);
             xhr.send(jobcardformdata);

              if(dadojobtype == "Callout"){

                 setTimeout(function(){
                       window.location.href="/manutencao/detalhesJobcardCallOut/" + referencia;
                     }, 3500); 

              }else{
               
                setTimeout(function(){
                    window.location.href="/manutencao/detalhesJobcardPlanned/" + referencia;
                  }, 3500);

              }


          });

       }



 });

 
 $('#jobcardspares_yes_btn').click(function(){

    var referencia = $("#recolherdados").attr("dadosreferenciajobcard");
    var dadojobtype = $("#recolherdados").attr("dadosjobtype");
    var dadosarmazem = JSON.parse($("#recolherdados").attr("dadosstockpessoal"));
   
    var controlador = 0;

    var jobcard_itemidcomp = $("#jobcard_itemid").val();
    var jobcard_quantityusecomp = $("#jobcard_quantityuse").val();
    var jobcard_itemnrseriecomp = $("#jobcard_itemnrserie").val();
    var jobcard_itemreplacephoto=$("#jobcard_itemreplacephoto").get(0).files;
    var jobcard_itemphoto=$("#jobcard_itemphoto").get(0).files;

    if(jobcard_itemidcomp != null){
       var posicaoitem = dadosarmazem[0].disponibilidade.findIndex(x => x.referencia === jobcard_itemidcomp);
    }
    
    
    if((jobcard_itemidcomp == null) || (jobcard_itemphoto.length == 0)){

       controlador = 1;
    }else
       if ((jobcard_quantityusecomp == "") && (jobcard_itemnrseriecomp == null)) {
          controlador = 1;
       }else
          if((dadosarmazem[0].disponibilidade[posicaoitem].serialized == "sim") && (dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length != 0) && (dadosarmazem[0].disponibilidade[posicaoitem].num_serie[0] != null)){

             var jobcard_itemreplace = $("#jobcard_itemreplace").val();

             if(jobcard_itemreplace == null){
                controlador = 1;
             }else
                if(jobcard_itemreplace == "Sim"){
                   var jobcard_itemreplacereason = $("#jobcard_itemreplacereason").val();
                   var jobcard_itemnotreplacereason = $("#jobcard_itemnotreplacereason").val();

                   if((jobcard_itemreplacereason == "") && (jobcard_itemnotreplacereason == "") && (jobcard_itemnotreplacereason == null)){
                      controlador = 1;
                   }else
                      if(jobcard_itemreplacephoto.length == 0){
                         controlador = 1;
                      }else{
                         var jobcard_nomeitemreplaceinput = $("#jobcard_nomeitemreplaceinput").val();
                         var jobcard_nomeitemreplaceselect = $("#jobcard_nomeitemreplaceselect").val();

                         if((jobcard_nomeitemreplaceinput == "") && (jobcard_nomeitemreplaceselect == null)){
                            controlador = 1;
                         }
                   }
                }
          }

     if(controlador == 1){

       $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
       $('#msg_modal').openModal();

    }else{
       $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
       $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja guardar esta informação ':'Do you want to save this information <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
       $('#yes_no_modal').openModal({dismissible:false});
       $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
       $('#yes_btn_modal').click(function(e){

          $('#loading').fadeIn().delay(20000).fadeOut();
          var jobcardformdata = new FormData();

             var jobcard_id = referencia;
             jobcardformdata.append("jobcard_id", jobcard_id);

             var jobcard_tecnicoid = dadosarmazem[0].nome_ref;
             jobcardformdata.append("jobcard_tecnicoid", jobcard_tecnicoid);

             var jobcard_itemid = $("#jobcard_itemid").val();
             jobcardformdata.append("jobcard_itemid", jobcard_itemid);

             var jobcard_quantityhave = $("#jobcard_quantityhave").val();
             jobcardformdata.append("jobcard_quantityhave", jobcard_quantityhave);

             var jobcard_itemowner = $("#jobcard_itemowner").val();
             jobcardformdata.append("jobcard_itemowner", jobcard_itemowner);

             var jobcard_itemphoto=$("#jobcard_itemphoto").get(0).files;
             jobcardformdata.append('jobcard_itemphoto', jobcard_itemphoto[0]);

             var jobcard_itemnrserie = $("#jobcard_itemnrserie").val();

             if(jobcard_itemnrserie != null){

                jobcardformdata.append("jobcard_itemnrserie", jobcard_itemnrserie);
                
                var jobcard_quantityuse = 1;
                jobcardformdata.append("jobcard_quantityuse", jobcard_quantityuse);

                var jobcard_remaining = parseInt(jobcard_quantityhave) - 1;
                jobcardformdata.append("jobcard_remaining", jobcard_remaining);

             }else{
                var jobcard_quantityuse = $("#jobcard_quantityuse").val();
                jobcardformdata.append("jobcard_quantityuse", jobcard_quantityuse);

                var jobcard_remaining = parseFloat(jobcard_quantityhave) - jobcard_quantityuse;
                jobcardformdata.append("jobcard_remaining", jobcard_remaining);

             }

             if((dadosarmazem[0].disponibilidade[posicaoitem].serialized == "sim") && (dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length != 0) && (dadosarmazem[0].disponibilidade[posicaoitem].num_serie[0] != null)){

                var jobcard_itemreplace = $("#jobcard_itemreplace").val();
                jobcardformdata.append("jobcard_itemreplace", jobcard_itemreplace);

                if(jobcard_itemreplace == "Sim"){
                  var jobcard_itemreplacereason = $("#jobcard_itemreplacereason").val();
                  jobcardformdata.append("jobcard_itemreplacereason", jobcard_itemreplacereason);

                  var jobcard_itemreplacephoto=$("#jobcard_itemreplacephoto").get(0).files;
                  jobcardformdata.append('jobcard_itemreplacephoto', jobcard_itemreplacephoto[0]);
                
                  var jobcard_nomeitemreplaceinput = $("#jobcard_nomeitemreplaceinput").val();
                  var jobcard_nomeitemreplaceselect = $("#jobcard_nomeitemreplaceselect").val();

                  if(jobcard_nomeitemreplaceinput != ""){
                    jobcardformdata.append("jobcard_nomeitemreplace", jobcard_nomeitemreplaceinput);
                  }else{
                    jobcardformdata.append("jobcard_nomeitemreplace", jobcard_nomeitemreplaceselect);
                  }
                }else{
                  console.log("Entrou no else");
                  var jobcard_itemnotreplacereason = $("#jobcard_itemnotreplacereason").val();
                  console.log(jobcard_itemnotreplacereason);
                  jobcardformdata.append("jobcard_itemreplacereason", jobcard_itemnotreplacereason);
                }
             }
             

             var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
             var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
             var ano = (new Date()).getFullYear();
             var todaydate = dia + "/" + mes + "/" + ano;

             var jobcard_datauso = todaydate;
             jobcardformdata.append("jobcard_datauso", jobcard_datauso);

             if((dadosarmazem[0].disponibilidade[posicaoitem].serialized == "sim") && (dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length != 0) && (dadosarmazem[0].disponibilidade[posicaoitem].num_serie[0] != null)){

               if(jobcard_itemreplace == "Sim"){

                 var rule="/manutencao/updatesparesusedserializereplace";
                 // console.log("updatesparesusedserializereplace")
               }else{

                 var rule="/manutencao/updatesparesusedserializeNotreplace";
                 // console.log("updatesparesusedserializeNotreplace")
               }

             }else{

                var rule="/manutencao/updatesparesusedNotreplace";

             }
             

             var xhr = new XMLHttpRequest();
             // Add any event handlers here...
             xhr.open('POST',rule, true);
             xhr.send(jobcardformdata);


             if(dadojobtype == "Callout"){

                setTimeout(function(){
                    window.location.href="/manutencao/ttnumberhome/inprogress";
                  }, 3000);

           }else{
             
             setTimeout(function(){
                 window.location.href="/manutencao/preventativemaint/inprogress";
               }, 3000);
           }

       });

    }
          

 });


 $('#eliminarJobcard_itemphoto').click(function(){

    $('.esconderfotoitem').addClass('hide');
    $("#jobcard_itemphoto").val("")
    $('.mostrarfotoitem').removeClass('hide');


 });


 $('#eliminarJobcard_itemreplacephoto').click(function(){
    $('.esconderfotoitemreplace').addClass('hide');
    $("#jobcard_itemreplacephoto").val("")
    $('.mostrarfotoitemreplace').removeClass('hide');


 });

 
 $('#jobcard_itemid1').change(function(){

      var jobcard_itemid = $("#jobcard_itemid1").val();
      var dadosarmazem = JSON.parse($("#recolherdados").attr("dadosstockpessoal"));
      var posicaoitem = dadosarmazem[0].disponibilidade.findIndex(x => x.referencia === jobcard_itemid);
      var dadosusedSpareJobcard = JSON.parse($("#recolherdados").attr("dadosusedSpareJobcard"));
      var dadosspareusedinfo = JSON.parse($("#recolherdados").attr("dadosspareusedinfo"));
      var posicaosparesite = $("#recolherdados").attr("posicaosparesite");

      $("#jobcard_quantityhave").val(dadosarmazem[0].disponibilidade[posicaoitem].disponivel);
      $("#jobcard_quantityhave").siblings('label').addClass('active');

      $("#jobcard_itemowner").val(dadosarmazem[0].disponibilidade[posicaoitem].cliente_name);
      $("#jobcard_itemowner").siblings('label').addClass('active');

      
      $("#jobcard_itemreplacephoto").val("");
      $("#jobcard_itemreplacereason").val("")
      $("#jobcard_itemreplacereason").siblings('label').removeClass('active');
      $('.mostrarRazaoReplaceSpareReason').addClass('hide');

      $("#jobcard_nomeitemreplaceinput").val("")
      $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
      $('#mostrarReplaceSpareNrSerieInput').addClass('hide');

      var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
       if(jobcard_nomeitemreplaceselect != null){
          while (jobcard_nomeitemreplaceselect.options.length > 0) { 
             jobcard_nomeitemreplaceselect.remove(0); 
          }
       }
      $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

      $('.mostrarfotoitemreplace').addClass('hide');
      $('.esconderfotoitemreplace').addClass('hide');

      


          if(jobcard_itemid == dadosusedSpareJobcard.jobcard_itemid){

             $("#jobcard_quantityuse").val("")
             $("#jobcard_quantityuse").siblings('label').removeClass('active');
             $("#jobcard_quantityuse").attr("max",dadosarmazem[0].disponibilidade[posicaoitem].disponivel);

             var jobcard_itemnrserie = document.getElementById("jobcard_itemnrserie");
             while (jobcard_itemnrserie.options.length > 0) { 
                jobcard_itemnrserie.remove(0); 
             }


             if((dadosusedSpareJobcard.jobcard_itemserialized == "nao") || (dadosusedSpareJobcard.jobcard_itemnrserie == null) || (dadosusedSpareJobcard.jobcard_itemnrserie == undefined)){

                $('#jobcard_quantityusefield').removeClass('hide');
                $("#jobcard_quantityuse").siblings('label').addClass('active');
                $("#jobcard_quantityuse").val(dadosusedSpareJobcard.jobcard_quantityuse)

                $('#jobcard_itemnrseriefield').addClass('hide');

                document.getElementById("jobcard_itemreplaceop11").selected = "true";
                $('#jobcard_itemreplacefield').addClass('hide');
             
             }else{

                $('#jobcard_itemreplacefield').removeClass('hide');

                if(dadosusedSpareJobcard.jobcard_itemreplace == "Sim"){

                   document.getElementById("jobcard_itemreplaceopsim1").selected = "true";

                   if(dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie.length == 1){

                      $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
                      $("#jobcard_nomeitemreplaceinput").siblings('label').addClass('active');
                      $("#jobcard_nomeitemreplaceinput").val(dadosusedSpareJobcard.jobcard_nomeitemreplace);

                      var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
                      while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                         jobcard_nomeitemreplaceselect.remove(0); 
                      }
                      $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

                   }else{

                      $("#jobcard_nomeitemreplaceinput").val("")
                      $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
                      $('#mostrarReplaceSpareNrSerieInput').addClass('hide');

                      $('#mostrarReplaceSpareNrSerieSelect').removeClass('hide');
                      var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
                      while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                         jobcard_nomeitemreplaceselect.remove(0); 
                      }

                      var opt3 = document.createElement('option');
                       opt3.value = "Escolha a opção";
                       opt3.innerHTML = "Escolha a opção";
                       opt3.id = "segundo12";
                       jobcard_nomeitemreplaceselect.appendChild(opt3);
                       document.getElementById("segundo12").disabled = "true";

                       var optjobcard_nomeitemreplaceselect = document.createElement('option');
                       optjobcard_nomeitemreplaceselect.value = dadosusedSpareJobcard.jobcard_nomeitemreplace;
                       optjobcard_nomeitemreplaceselect.innerHTML = dadosusedSpareJobcard.jobcard_nomeitemreplace;
                       optjobcard_nomeitemreplaceselect.id = "optjobcard_nomeitemreplaceselectid";
                       jobcard_nomeitemreplaceselect.appendChild(optjobcard_nomeitemreplaceselect);
                       document.getElementById("optjobcard_nomeitemreplaceselectid").selected = "true";

                       if(dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie.length != 0){
                         for(var i = 0; i < dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie.length; i++){

                            if(dadosusedSpareJobcard.jobcard_nomeitemreplace != dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i]){

                               var opt = document.createElement('option');
                               opt.value = dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i];
                               opt.innerHTML = dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i];
                               jobcard_nomeitemreplaceselect.appendChild(opt);
                            }

                           
                           
                         }

                       }

                   }

                   $('.mostrarRazaoReplaceSpareReason').removeClass('hide');
                   $("#jobcard_itemreplacereason").siblings('label').addClass('active');
                   $("#jobcard_itemreplacereason").val(dadosusedSpareJobcard.jobcard_itemreplacereason);

                   if((dadosusedSpareJobcard.jobcard_itemreplacephoto != "") && (dadosusedSpareJobcard.jobcard_itemreplacephoto != null) && (dadosusedSpareJobcard.jobcard_itemreplacephoto != undefined)){
                
                      $('.esconderfotoitemreplace').removeClass('hide');
                      $("#jobcard_itemreplacephoto").val("")
                      $('.mostrarfotoitemreplace').addClass('hide');

                   }else{

                      $('.mostrarRazaoReplaceSpareReason').removeClass('hide');
                      $("#jobcard_itemreplacephoto").val("");

                   }

                }else
                   if(dadosusedSpareJobcard.jobcard_itemreplace == "Nao"){

                      document.getElementById("jobcard_itemreplaceopnao1").selected = "true";

                      $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
                      $("#jobcard_nomeitemreplaceinput").val("");
                      $('#mostrarReplaceSpareNrSerieInput').addClass('hide');

                      var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
                      if(jobcard_nomeitemreplaceselect != null){
                         while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                            jobcard_nomeitemreplaceselect.remove(0); 
                         }
                      }
                      
                      $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

                      $("#jobcard_itemreplacereason").siblings('label').removeClass('active');
                      $("#jobcard_itemreplacereason").val("");
                      $('.esconderfotoitemreplace').addClass('hide');
                      $("#jobcard_itemreplacephoto").val("")
                      $('.mostrarRazaoReplaceSpareReason').addClass('hide');


                   }

                $('#jobcard_quantityusefield').addClass('hide');

                $('#jobcard_itemnrseriefield').removeClass('hide');
                var opt2 = document.createElement('option');
                 opt2.value = "Escolha a opção";
                 opt2.innerHTML = "Escolha a opção";
                 opt2.id = "segundo1";
                 jobcard_itemnrserie.appendChild(opt2);
                 document.getElementById("segundo1").disabled = "true";

                 var optjobcard_itemnrseriefield = document.createElement('option');
                 optjobcard_itemnrseriefield.value = dadosusedSpareJobcard.jobcard_itemnrserie;
                 optjobcard_itemnrseriefield.innerHTML = dadosusedSpareJobcard.jobcard_itemnrserie;
                 optjobcard_itemnrseriefield.id = "optjobcard_itemnrseriefieldid";
                 jobcard_itemnrserie.appendChild(optjobcard_itemnrseriefield);
                 document.getElementById("optjobcard_itemnrseriefieldid").selected = "true";

                 if(dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length != 0){
                   for(var i = 0; i < dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length; i++){

                     var opt = document.createElement('option');
                     opt.value = dadosarmazem[0].disponibilidade[posicaoitem].num_serie[i];
                     opt.innerHTML = dadosarmazem[0].disponibilidade[posicaoitem].num_serie[i];
                     jobcard_itemnrserie.appendChild(opt);
                     
                   }

                 }

             }

             if((dadosusedSpareJobcard.jobcard_itemphoto != "") && (dadosusedSpareJobcard.jobcard_itemphoto != null) && (dadosusedSpareJobcard.jobcard_itemphoto != undefined)){
                
                $('.esconderfotoitem').removeClass('hide');
                $("#jobcard_itemphoto").val("")
                $('.mostrarfotoitem').addClass('hide');

             }else{

                $('.jobcard_itemphotofield').removeClass('hide');
                $("#jobcard_itemphoto").val("");

             }


          }else{

                $("#jobcard_quantityuse").val("");
                $("#jobcard_quantityuse").siblings('label').removeClass('active');
                $("#jobcard_quantityuse").attr("max",dadosarmazem[0].disponibilidade[posicaoitem].disponivel);

                var jobcard_itemnrserie = document.getElementById("jobcard_itemnrserie");
                while (jobcard_itemnrserie.options.length > 0) { 
                   jobcard_itemnrserie.remove(0); 
                }

                $('.esconderfotoitem').addClass('hide');
                $('.mostrarfotoitem').removeClass('hide');
                $('.jobcard_itemphotofield').removeClass('hide');
                $("#jobcard_itemphoto").val("");

                var jobcard_itemserialized = dadosarmazem[0].disponibilidade[posicaoitem].serialized;

                if((jobcard_itemserialized == "nao") || (dadosarmazem[0].disponibilidade[posicaoitem].num_serie[0] == null) || (dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length == 0)){

                   $('#jobcard_quantityusefield').removeClass('hide');
                   $('#jobcard_itemnrseriefield').addClass('hide');

                   document.getElementById("jobcard_itemreplaceop11").selected = "true";
                   $('#jobcard_itemreplacefield').addClass('hide');

               }else{
                   $('#jobcard_itemreplacefield').removeClass('hide');
                   document.getElementById("jobcard_itemreplaceop11").selected = "true";
                   

                   $('#jobcard_quantityusefield').addClass('hide');
                   $('#jobcard_itemnrseriefield').removeClass('hide');

                   var opt2 = document.createElement('option');
                    opt2.value = "Escolha a opção";
                    opt2.innerHTML = "Escolha a opção";
                    opt2.id = "segundo1";
                    jobcard_itemnrserie.appendChild(opt2);
                    document.getElementById("segundo1").selected = "true";
                    document.getElementById("segundo1").disabled = "true";

                    if(dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length != 0){
                      for(var i = 0; i < dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length; i++){

                        var opt = document.createElement('option');
                        opt.value = dadosarmazem[0].disponibilidade[posicaoitem].num_serie[i];
                        opt.innerHTML = dadosarmazem[0].disponibilidade[posicaoitem].num_serie[i];
                        jobcard_itemnrserie.appendChild(opt);
                        
                      }

                    }

               }
          }
      

   });
    

   $('#jobcard_itemid').change(function(){

      var jobcard_itemid = $("#jobcard_itemid").val();
      var dadosarmazem = JSON.parse($("#recolherdados").attr("dadosstockpessoal"));
      var posicaoitem = dadosarmazem[0].disponibilidade.findIndex(x => x.referencia === jobcard_itemid);

      var jobcard_itemserialized = dadosarmazem[0].disponibilidade[posicaoitem].serialized;

      $("#jobcard_quantityhave").val(dadosarmazem[0].disponibilidade[posicaoitem].disponivel);
      $("#jobcard_quantityhave").siblings('label').addClass('active');

      $("#jobcard_itemowner").val(dadosarmazem[0].disponibilidade[posicaoitem].cliente_name);
      $("#jobcard_itemowner").siblings('label').addClass('active');

       $("#jobcard_itemreplacereason").val("")
       $("#jobcard_itemreplacereason").siblings('label').removeClass('active');
      $('.mostrarRazaoReplaceSpareReason').addClass('hide');

      var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
       while (jobcard_nomeitemreplaceselect.options.length > 0) { 
          jobcard_nomeitemreplaceselect.remove(0); 
       }
      $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

      $("#jobcard_nomeitemreplaceinput").val("")
       $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
      $('#mostrarReplaceSpareNrSerieInput').addClass('hide');
       
      if(jobcard_itemserialized == "sim"){

          $('.jobcard_itemphotofield').removeClass('hide');

          if(dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length == 0){

             $('#jobcard_itemreplacefield').addClass('hide');
             $('.jobcard_itemphotofield').removeClass('hide');

              var jobcard_itemnrserie = document.getElementById("jobcard_itemnrserie");
                while (jobcard_itemnrserie.options.length > 0) { 
                   jobcard_itemnrserie.remove(0); 
                }
              $('#jobcard_itemnrseriefield').addClass('hide');

              $('#jobcard_quantityusefield').removeClass('hide');
              $("#jobcard_quantityuse").val("")
              $("#jobcard_quantityuse").siblings('label').removeClass('active');
              $("#jobcard_quantityuse").attr("max",dadosarmazem[0].disponibilidade[posicaoitem].disponivel);

          }else
             if(dadosarmazem[0].disponibilidade[posicaoitem].num_serie[0] == null){
                $('#jobcard_itemreplacefield').addClass('hide');
                $('.jobcard_itemphotofield').removeClass('hide');

                 var jobcard_itemnrserie = document.getElementById("jobcard_itemnrserie");
                   while (jobcard_itemnrserie.options.length > 0) { 
                      jobcard_itemnrserie.remove(0); 
                   }
                 $('#jobcard_itemnrseriefield').addClass('hide');

                 $('#jobcard_quantityusefield').removeClass('hide');
                 $("#jobcard_quantityuse").val("")
                $("#jobcard_quantityuse").siblings('label').removeClass('active');
                 $("#jobcard_quantityuse").attr("max",dadosarmazem[0].disponibilidade[posicaoitem].disponivel);
             }else{

                $("#jobcard_quantityuse").val("")
                $("#jobcard_quantityuse").siblings('label').removeClass('active');
                $('#jobcard_quantityusefield').addClass('hide');
                $('#jobcard_itemreplacefield').removeClass('hide');
                document.getElementById("jobcard_itemreplaceop1").selected = "true";

                $('#jobcard_itemnrseriefield').removeClass('hide');
                var jobcard_itemnrserie = document.getElementById("jobcard_itemnrserie");

                while (jobcard_itemnrserie.options.length > 0) { 
                   jobcard_itemnrserie.remove(0); 
                }

                var opt2 = document.createElement('option');
                 opt2.value = "Escolha a opção";
                 opt2.innerHTML = "Escolha a opção";
                 opt2.id = "segundo1";
                 jobcard_itemnrserie.appendChild(opt2);
                 document.getElementById("segundo1").selected = "true";
                 document.getElementById("segundo1").disabled = "true";

                 if(dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length != 0){
                   for(var i = 0; i < dadosarmazem[0].disponibilidade[posicaoitem].num_serie.length; i++){

                     var opt = document.createElement('option');
                     opt.value = dadosarmazem[0].disponibilidade[posicaoitem].num_serie[i];
                     opt.innerHTML = dadosarmazem[0].disponibilidade[posicaoitem].num_serie[i];
                     jobcard_itemnrserie.appendChild(opt);
                     
                   }

                 }

             }

      }else{

          $('#jobcard_itemreplacefield').addClass('hide');
          $('.jobcard_itemphotofield').removeClass('hide');
           

           var jobcard_itemnrserie = document.getElementById("jobcard_itemnrserie");
             while (jobcard_itemnrserie.options.length > 0) { 
                jobcard_itemnrserie.remove(0); 
             }
           $('#jobcard_itemnrseriefield').addClass('hide');

           $('#jobcard_quantityusefield').removeClass('hide');
           $("#jobcard_quantityuse").val("")
          $("#jobcard_quantityuse").siblings('label').removeClass('active');
           $("#jobcard_quantityuse").attr("max",dadosarmazem[0].disponibilidade[posicaoitem].disponivel);
      }

   });

  
  $('#jobcard_itemreplaceproject').change(function(){
    var detalhesspareusedinfo = JSON.parse($("#recolherdados").attr("dadosspareusedinfo"));
    var jobcard_itemid = $("#jobcard_itemid").val();
    var jobcard_sitecontrolador = $("#jobcard_sitecontrolador").val();
    var jobcard_sitecontrolador1 = $("#jobcard_sitecontrolador1").val();

    var jobcard_site;
    if(jobcard_sitecontrolador != undefined){
      jobcard_site = jobcard_sitecontrolador;
    }else{
      jobcard_site = jobcard_sitecontrolador1;
    }

    var op = document.getElementById("jobcard_itemreplaceproject").value;
    
    if(op == "Sim"){
      $('.mostrarRazaoReplaceSpareReason').removeClass('hide');
      $("#jobcard_itemreplacereason").val("")
      $("#jobcard_itemreplacereason").siblings('label').removeClass('active');

       if(detalhesspareusedinfo.length == 0){

          var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
          while (jobcard_nomeitemreplaceselect.options.length > 0) { 
             jobcard_nomeitemreplaceselect.remove(0); 
          }
          $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

          $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
          $("#jobcard_nomeitemreplaceinput").val("")
          $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

       }else{

          var posicaosite = detalhesspareusedinfo.findIndex(x => x.spareusedinfo_site === jobcard_site);

          if(posicaosite == -1){
             var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
             while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                jobcard_nomeitemreplaceselect.remove(0); 
             }
             $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

             $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
             $("#jobcard_nomeitemreplaceinput").val("")
             $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
          }else{

             var posicaoitem = detalhesspareusedinfo[posicaosite].spareusedinfo_item.findIndex(x => x.referenciaitemid === jobcard_itemid);

             if(posicaoitem == -1){

                var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
                while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                   jobcard_nomeitemreplaceselect.remove(0); 
                }
                $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

                $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
                $("#jobcard_nomeitemreplaceinput").val("")
                $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

             }else{

                if(detalhesspareusedinfo[posicaosite].spareusedinfo_item[posicaoitem].num_serie.length == 0){
                   var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
                   while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                      jobcard_nomeitemreplaceselect.remove(0); 
                   }
                  $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

                  $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
                  $("#jobcard_nomeitemreplaceinput").val("")
                  $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

                }else{

                   $("#jobcard_nomeitemreplaceinput").val("")
                   $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
                   $('#mostrarReplaceSpareNrSerieInput').addClass('hide');
                   $('#mostrarReplaceSpareNrSerieSelect').removeClass('hide');

                   var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");

                   while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                      jobcard_nomeitemreplaceselect.remove(0); 
                   }

                     var opt2 = document.createElement('option');
                    opt2.value = "Escolha a opção";
                    opt2.innerHTML = "Escolha a opção";
                    opt2.id = "optjobcard_nomeitemreplaceselect";
                    jobcard_nomeitemreplaceselect.appendChild(opt2);
                    document.getElementById("optjobcard_nomeitemreplaceselect").selected = "true";
                    document.getElementById("optjobcard_nomeitemreplaceselect").disabled = "true";

                   for(var i = 0; i < detalhesspareusedinfo[posicaosite].spareusedinfo_item[posicaoitem].num_serie.length; i++){

                     var opt = document.createElement('option');
                     opt.value = detalhesspareusedinfo[posicaosite].spareusedinfo_item[posicaoitem].num_serie[i];
                     opt.innerHTML = detalhesspareusedinfo[posicaosite].spareusedinfo_item[posicaoitem].num_serie[i];
                     jobcard_nomeitemreplaceselect.appendChild(opt);
                     
                   }

                }

             }

          }

      }

    }else{

       $("#jobcard_itemreplacereason").val("")
       $("#jobcard_itemreplacereason").siblings('label').removeClass('active');
       $('.mostrarRazaoReplaceSpareReason').addClass('hide');
       $('.mostrarRazaoNotReplaceSpareReason').removeClass('hide');

       var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
       while (jobcard_nomeitemreplaceselect.options.length > 0) { 
          jobcard_nomeitemreplaceselect.remove(0); 
       }

       $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

       $("#jobcard_nomeitemreplaceinput").val("")
       $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
       $('#mostrarReplaceSpareNrSerieInput').addClass('hide');

    }

  });


 $('#jobcard_itemreplace1').change(function(){
    console.log(0)

      var op = document.getElementById("jobcard_itemreplace1").value;
      var jobcard_itemid = $("#jobcard_itemid1").val();
      var dadosusedSpareJobcard = JSON.parse($("#recolherdados").attr("dadosusedSpareJobcard"));
      var dadosspareusedinfo = JSON.parse($("#recolherdados").attr("dadosspareusedinfo"));
      var posicaosparesite = $("#recolherdados").attr("posicaosparesite");

      var dadosarmazem = JSON.parse($("#recolherdados").attr("dadosstockpessoal"));
      var posicaoitem = dadosarmazem[0].disponibilidade.findIndex(x => x.referencia === jobcard_itemid);
      
        $("#jobcard_nomeitemreplaceinput").val("");
        $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
        $('#mostrarReplaceSpareNrSerieInput').addClass('hide');

       var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
       if(jobcard_nomeitemreplaceselect != null){
          while (jobcard_nomeitemreplaceselect.options.length > 0) { 
             jobcard_nomeitemreplaceselect.remove(0); 
          }
       }
       $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

       $("#jobcard_itemreplacereason").val("");
       $("#jobcard_itemreplacereason").siblings('label').removeClass('active');

       $('.esconderfotoitemreplace').addClass('hide');
       $('.mostrarfotoitemreplace').addClass('hide');
       $("#jobcard_itemreplacephoto").val("");
       $('.mostrarRazaoReplaceSpareReason').addClass('hide');

        if(op == "Sim"){
       

          if(jobcard_itemid == dadosusedSpareJobcard.jobcard_itemid){
             $('.mostrarRazaoReplaceSpareReason').removeClass('hide');
             $("#jobcard_itemreplacereason").val(dadosusedSpareJobcard.jobcard_itemreplacereason);
             $("#jobcard_itemreplacereason").siblings('label').addClass('active');

             if((dadosusedSpareJobcard.jobcard_itemreplacephoto != "") && (dadosusedSpareJobcard.jobcard_itemreplacephoto != null) && (dadosusedSpareJobcard.jobcard_itemreplacephoto != undefined)){
                
                $('.esconderfotoitemreplace').removeClass('hide');

             }else{
                $('.mostrarfotoitemreplace').removeClass('hide');
                $("#jobcard_itemreplacephoto").val("");

             }

             if(dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie.length == 1){

                $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
                $("#jobcard_nomeitemreplaceinput").val(dadosusedSpareJobcard.jobcard_nomeitemreplace);
                $("#jobcard_nomeitemreplaceinput").siblings('label').addClass('active');

             }else{

                $('#mostrarReplaceSpareNrSerieSelect').removeClass('hide');

                var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
                if(jobcard_nomeitemreplaceselect != null){
                   while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                      jobcard_nomeitemreplaceselect.remove(0); 
                   }
                }

                var opt3 = document.createElement('option');
                 opt3.value = "Escolha a opção";
                 opt3.innerHTML = "Escolha a opção";
                 opt3.id = "segundo12";
                 jobcard_nomeitemreplaceselect.appendChild(opt3);
                 document.getElementById("segundo12").disabled = "true";

                 if(dadosusedSpareJobcard.jobcard_nomeitemreplace != ""){
                   var optjobcard_nomeitemreplaceselect = document.createElement('option');
                   optjobcard_nomeitemreplaceselect.value = dadosusedSpareJobcard.jobcard_nomeitemreplace;
                   optjobcard_nomeitemreplaceselect.innerHTML = dadosusedSpareJobcard.jobcard_nomeitemreplace;
                   optjobcard_nomeitemreplaceselect.id = "optjobcard_nomeitemreplaceselectid";
                   jobcard_nomeitemreplaceselect.appendChild(optjobcard_nomeitemreplaceselect);
                   document.getElementById("optjobcard_nomeitemreplaceselectid").selected = "true";

                   if(dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie.length != 0){
                      for(var i = 0; i < dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie.length; i++){

                         if(dadosusedSpareJobcard.jobcard_nomeitemreplace != dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i]){

                            var opt = document.createElement('option');
                            opt.value = dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i];
                            opt.innerHTML = dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i];
                            jobcard_nomeitemreplaceselect.appendChild(opt);
                         }
                        
                      }

                   }

                 }else{

                   if(dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie.length != 0){
                      for(var i = 0; i < dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie.length; i++){

                         if(dadosusedSpareJobcard.jobcard_itemnrserie != dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i]){

                            var opt = document.createElement('option');
                            opt.value = dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i];
                            opt.innerHTML = dadosspareusedinfo[0].spareusedinfo_item[posicaosparesite].num_serie[i];
                            jobcard_nomeitemreplaceselect.appendChild(opt);
                         }
                        
                      }

                   }
                 }
                 

                

             }

          }else{

             $('.mostrarRazaoReplaceSpareReason').removeClass('hide');
             $("#jobcard_itemreplacereason").val("");
             $("#jobcard_itemreplacereason").siblings('label').removeClass('active');

             $('.mostrarfotoitemreplace').removeClass('hide');
              $("#jobcard_itemreplacephoto").val("");

              if(dadosspareusedinfo.length == 0){

                $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
                $("#jobcard_nomeitemreplaceinput").val("");
                $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

              }else{

                var posicaoitem = dadosspareusedinfo[0].spareusedinfo_item.findIndex(x => x.referenciaitemid === jobcard_itemid);

                if(posicaoitem == -1){

                   $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
                   $("#jobcard_nomeitemreplaceinput").val("")
                   $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

                }else{

                   if(dadosspareusedinfo[0].spareusedinfo_item[posicaoitem].num_serie.length == 0){

                      $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
                      $("#jobcard_nomeitemreplaceinput").val("")
                      $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

                   }else{

                      $('#mostrarReplaceSpareNrSerieSelect').removeClass('hide');

                      var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
                      while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                            jobcard_nomeitemreplaceselect.remove(0); 
                         }
                      // if(jobcard_nomeitemreplaceselect != null){
                         
                      // }

                      var opt2 = document.createElement('option');
                       opt2.value = "Escolha a opção";
                       opt2.innerHTML = "Escolha a opção";
                       opt2.id = "optjobcard_nomeitemreplaceselect";
                       jobcard_nomeitemreplaceselect.appendChild(opt2);
                       document.getElementById("optjobcard_nomeitemreplaceselect").selected = "true";
                       document.getElementById("optjobcard_nomeitemreplaceselect").disabled = "true";

                      for(var i = 0; i < dadosspareusedinfo[0].spareusedinfo_item[posicaoitem].num_serie.length; i++){

                        var opt = document.createElement('option');
                        opt.value = dadosspareusedinfo[0].spareusedinfo_item[posicaoitem].num_serie[i];
                        opt.innerHTML = dadosspareusedinfo[0].spareusedinfo_item[posicaoitem].num_serie[i];
                        jobcard_nomeitemreplaceselect.appendChild(opt);
                        
                      }
                   }


                }
             }
          }

       }

    
  });
    

    $('#jobcard_itemreplace').change(function(){
   
    var detalhesspareusedinfo = JSON.parse($("#recolherdados").attr("dadosspareusedinfo"));
    var jobcard_itemid = $("#jobcard_itemid").val();
    var op = document.getElementById("jobcard_itemreplace").value;
    
    if(op == "Sim"){
      $('.mostrarRazaoReplaceSpareReason').removeClass('hide');
      $("#jobcard_itemreplacereason").val("")
       $("#jobcard_itemreplacereason").siblings('label').removeClass('active');

      if(detalhesspareusedinfo.length == 0){

       var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
       while (jobcard_nomeitemreplaceselect.options.length > 0) { 
          jobcard_nomeitemreplaceselect.remove(0); 
       }
       $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

        $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
        $("#jobcard_nomeitemreplaceinput").val("")
        $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

      }else{
          var posicaoitem = detalhesspareusedinfo[0].spareusedinfo_item.findIndex(x => x.referenciaitemid === jobcard_itemid);

       if(posicaoitem == -1){

          var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
          if(jobcard_nomeitemreplaceselect != null){
             while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                jobcard_nomeitemreplaceselect.remove(0); 
             }
          }
          
          $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

          $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
          $("#jobcard_nomeitemreplaceinput").val("")
          $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

       }else{

          if(detalhesspareusedinfo[0].spareusedinfo_item[posicaoitem].num_serie.length == 0){
             var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
             while (jobcard_nomeitemreplaceselect.options.length > 0) { 
                jobcard_nomeitemreplaceselect.remove(0); 
             }
            $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

            $('#mostrarReplaceSpareNrSerieInput').removeClass('hide');
            $("#jobcard_nomeitemreplaceinput").val("")
            $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');

          }else{

             $("#jobcard_nomeitemreplaceinput").val("")
             $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
             $('#mostrarReplaceSpareNrSerieInput').addClass('hide');
             $('#mostrarReplaceSpareNrSerieSelect').removeClass('hide');

             var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");

             while (jobcard_nomeitemreplaceselect.options.length > 0) { 
              jobcard_nomeitemreplaceselect.remove(0); 
            }

               var opt2 = document.createElement('option');
              opt2.value = "Escolha a opção";
              opt2.innerHTML = "Escolha a opção";
              opt2.id = "optjobcard_nomeitemreplaceselect";
              jobcard_nomeitemreplaceselect.appendChild(opt2);
              document.getElementById("optjobcard_nomeitemreplaceselect").selected = "true";
              document.getElementById("optjobcard_nomeitemreplaceselect").disabled = "true";

             for(var i = 0; i < detalhesspareusedinfo[0].spareusedinfo_item[posicaoitem].num_serie.length; i++){

               var opt = document.createElement('option');
               opt.value = detalhesspareusedinfo[0].spareusedinfo_item[posicaoitem].num_serie[i];
               opt.innerHTML = detalhesspareusedinfo[0].spareusedinfo_item[posicaoitem].num_serie[i];
               jobcard_nomeitemreplaceselect.appendChild(opt);
               
             }

          }

        }

      }
      

    }else{

       $("#jobcard_itemreplacereason").val("")
       $("#jobcard_itemreplacereason").siblings('label').removeClass('active');
      $('.mostrarRazaoReplaceSpareReason').addClass('hide');
      $('.mostrarRazaoNotReplaceSpareReason').removeClass('hide');

      
      var jobcard_nomeitemreplaceselect = document.getElementById("jobcard_nomeitemreplaceselect");
       if(jobcard_nomeitemreplaceselect != null){
          while (jobcard_nomeitemreplaceselect.options.length > 0) { 
          jobcard_nomeitemreplaceselect.remove(0); 
          }
       }
       
      $('#mostrarReplaceSpareNrSerieSelect').addClass('hide');

      $("#jobcard_nomeitemreplaceinput").val("")
       $("#jobcard_nomeitemreplaceinput").siblings('label').removeClass('active');
      $('#mostrarReplaceSpareNrSerieInput').addClass('hide');
    }

  });

  $('#jobcard_healthsafety').change(function(){

    var op = document.getElementById("jobcard_healthsafety").value;

    if(op == "Yes"){

      $('.verrazaohs').removeClass('hide');

    }else{
      $('.verrazaohs').addClass('hide');
    }

  });

  $('#jobcard_healthsafety1').change(function(){
    var op = document.getElementById("jobcard_healthsafety1").value;

    if(op == "Yes"){
      $('#mostrarrazaoHS').removeClass('hide');
    }else{
      $('#mostrarrazaoHS').addClass('hide');
    }
  });


  $('.mostrardetalhesGeradoresSiteInfo').click(function(){

    var referencia = $(this).attr("data-user-new");

    var referenciaArray = $(this).attr("data-array-new");

     var detalhesSiteInfoGenerator = JSON.parse($(this).attr("dadosSiteInfo"));

     $("#siteinfo_generatortype").val(detalhesSiteInfoGenerator.siteinfo_generatortype);

      $("#siteinfo_generatoroutputkw").val(detalhesSiteInfoGenerator.siteinfo_generatoroutputkw);
      $("#siteinfo_generatoroutputkw").siblings('label').addClass('active');

      $("#siteinfo_generatormodelno").val(detalhesSiteInfoGenerator.siteinfo_generatormodelno);
      $("#siteinfo_generatormodelno").siblings('label').addClass('active');

      $("#siteinfo_generatorengineserialnumber").val(detalhesSiteInfoGenerator.siteinfo_generatorengineserialnumber);
      $("#siteinfo_generatorengineserialnumber").siblings('label').addClass('active');

      $("#siteinfo_generatorenginecapacity").val(detalhesSiteInfoGenerator.siteinfo_generatorenginecapacity);
      $("#siteinfo_generatorstartertype").val(detalhesSiteInfoGenerator.siteinfo_generatorstartertype);

      $("#siteinfo_generatorfuelconsumption").val(detalhesSiteInfoGenerator.siteinfo_generatorfuelconsumption);
      $("#siteinfo_generatorfuelconsumption").siblings('label').addClass('active');

      $('#siteinfogeneratorinfo_yes_btn_modal').addClass('hide');
      $('#siteinfogeneratorinfo_update_btn_modal').addClass('hide');
      $('#siteinfogeneratorinfo_modal').openModal({dismissible:false});

  });

  $('.mostrardetalhesACSiteInfo').click(function(){

    var referencia = $(this).attr("data-user-new");

    var referenciaArray = $(this).attr("data-array-new");

     var detalhesSiteInfoAC = JSON.parse($(this).attr("dadosSiteInfo"));

     $("#siteinfo_acmanufacturer").val(detalhesSiteInfoAC.siteinfo_acmanufacturer);
      $("#siteinfo_actype").val(detalhesSiteInfoAC.siteinfo_actype);

      $("#siteinfo_acmodel").val(detalhesSiteInfoAC.siteinfo_acmodel);
      $("#siteinfo_acmodel").siblings('label').addClass('active');

      $("#siteinfo_acnumber").val(detalhesSiteInfoAC.siteinfo_acnumber);
      $("#siteinfo_acnumber").siblings('label').addClass('active');

      $("#siteinfo_acserialnumber").val(detalhesSiteInfoAC.siteinfo_acserialnumber);
      $("#siteinfo_acserialnumber").siblings('label').addClass('active');

      $("#siteinfo_acbtu").val(detalhesSiteInfoAC.siteinfo_acbtu);
      $("#siteinfo_acbtu").siblings('label').addClass('active');

      $("#siteinfo_accageinstalled").val(detalhesSiteInfoAC.siteinfo_accageinstalled);
      $("#siteinfo_acsleeveinstalled").val(detalhesSiteInfoAC.siteinfo_acsleeveinstalled);
      $("#siteinfo_acunitcontrolltype").val(detalhesSiteInfoAC.siteinfo_acunitcontrolltype);

      $("#siteinfo_accontrollermodel").val(detalhesSiteInfoAC.siteinfo_accontrollermodel);
      $("#siteinfo_accontrollermodel").siblings('label').addClass('active');

      $('#siteinfoacinfo_yes_btn_modal').addClass('hide');
      $('#siteinfoacinfo_update_btn_modal').addClass('hide');
      $('#siteinfoacinfo_modal').openModal({dismissible:false});

  });

  $('.mostrardetalhesRectifierSiteInfo').click(function(){

    var referencia = $(this).attr("data-user-new");

    var referenciaArray = $(this).attr("data-array-new");

     var detalhesSiteInfoRectifier = JSON.parse($(this).attr("dadosSiteInfo"));

     $("#siteinfo_rectcabcabinetmodelno").val(detalhesSiteInfoRectifier.siteinfo_rectcabcabinetmodelno);
      $("#siteinfo_rectcabcabinetmodelno").siblings('label').addClass('active');

      $("#siteinfo_rectcabcabinetnumber").val(detalhesSiteInfoRectifier.siteinfo_rectcabcabinetnumber);
      $("#siteinfo_rectcabtype").val(detalhesSiteInfoRectifier.siteinfo_rectcabtype);
      $("#siteinfo_rectcabinputtype").val(detalhesSiteInfoRectifier.siteinfo_rectcabinputtype);

      $("#siteinfo_rectcabnobatteries").val(detalhesSiteInfoRectifier.siteinfo_rectcabnobatteries);
      $("#siteinfo_rectcabnobatteries").siblings('label').addClass('active');

      $("#siteinfo_rectcabbatterycapac").val(detalhesSiteInfoRectifier.siteinfo_rectcabbatterycapac);
      $("#siteinfo_rectcabbatterycapac").siblings('label').addClass('active');

      $('#siteinforectifierinfo_yes_btn_modal').addClass('hide');
      $('#siteinforectifierinfo_update_btn_modal').addClass('hide');
      $('#siteinforectifierinfo_modal').openModal({dismissible:false});

  });

  $('.mostrardetalhesGuardaSiteInfo').click(function(){

    var referencia = $(this).attr("data-user-new");

    var referenciaArray = $(this).attr("data-array-new");

     var detalhesSiteInfoGuarda = JSON.parse($(this).attr("dadosSiteInfo"));

     $("#siteinfo_secguardname").val(detalhesSiteInfoGuarda.siteinfo_secguardname);
      $("#siteinfo_secguardname").siblings('label').addClass('active');

      $("#siteinfo_secbinumber").val(detalhesSiteInfoGuarda.siteinfo_secbinumber);
      $("#siteinfo_secbinumber").siblings('label').addClass('active');

      $("#siteinfo_secnib").val(detalhesSiteInfoGuarda.siteinfo_secnib);
      $("#siteinfo_secnib").siblings('label').addClass('active');

      $("#siteinfo_secvalue").val(detalhesSiteInfoGuarda.siteinfo_secvalue);
      $("#siteinfo_secvalue").siblings('label').addClass('active');

      $('#siteinfoguardainfo_yes_btn_modal').addClass('hide');
      $('#siteinfoguardainfo_update_btn_modal').addClass('hide');
      $('#siteinfoguardainfo_modal').openModal({dismissible:false});

  });


  $('.mostrardetalhesTravel').click(function(){

    var referencia = $(this).attr("data-user-new");

    var referenciaArray = $(this).attr("data-array-new");

     var dadosjobcard = JSON.parse($("#recolherdados2").attr("detalhejobcard"));


    // pegar os valores dda tabela/array/base de dados e colocar no pop up para editar/visualizar as infos
     $("#jobcard_sitearrivaldate").val(dadosjobcard[0].travelinfoArrayJobcard[0].jobcard_sitearrivaldate);
     $("#jobcard_sitearrivaldate").siblings('label').addClass('active');

     $("#jobcard_sitearrivaltime").val(dadosjobcard[0].travelinfoArrayJobcard[0].jobcard_sitearrivaltime);
     $("#jobcard_sitearrivaltime").siblings('label').addClass('active');

     $("#jobcard_remedialaction1").val(dadosjobcard[0].travelinfoArrayJobcard[0].jobcard_remedialaction);
     $("#jobcard_remedialaction1").siblings('label').addClass('active');

     $("div.jobcard_healthsafety11 select").val(dadosjobcard[0].travelinfoArrayJobcard[0].jobcard_healthsafety);
     var op = dadosjobcard[0].travelinfoArrayJobcard[0].jobcard_healthsafety;
    
      if(op == "No"){
        $('#mostrarrazaoHS').addClass('hide');
      }else{
        $('#mostrarrazaoHS').removeClass('hide');
      }

     $("#jobcard_hsreason1").val(dadosjobcard[0].travelinfoArrayJobcard[0].jobcard_hsreason);
     $("#jobcard_hsreason1").siblings('label').addClass('active');

     $("#jobcard_sitedeparturedate").val(dadosjobcard[0].travelinfoArrayJobcard[0].jobcard_sitedeparturedate);
     $("#jobcard_sitedeparturedate").siblings('label').addClass('active');

     $("#jobcard_sitedeparturetime").val(dadosjobcard[0].travelinfoArrayJobcard[0].jobcard_sitedeparturetime);
     $("#jobcard_sitedeparturetime").siblings('label').addClass('active');


    $('#traveldetail_modal').openModal({dismissible:false});
    $('#traveldetail_cancel_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#traveldetail_yes_btn_modal').click(function(e){

      var jobcardformdata = new FormData();

      var rule="/manutencao/updatetabletravel";

      var jobcard_id = referencia;
      jobcardformdata.append("jobcard_id", jobcard_id);

      var jobcard_travelid = referenciaArray;
      jobcardformdata.append("jobcard_travelid", jobcard_travelid);

      var jobcard_remedialaction = $("#jobcard_remedialaction1").val();
      jobcardformdata.append("jobcard_remedialaction", jobcard_remedialaction);

      var jobcard_healthsafety = $("#jobcard_healthsafety1").val();
      jobcardformdata.append("jobcard_healthsafety", jobcard_healthsafety);

      var jobcard_hsreason;

      if(jobcard_healthsafety == "No"){
         jobcard_hsreason = "";
      }else{
        jobcard_hsreason = $("#jobcard_hsreason1").val();
      }
      
      jobcardformdata.append("jobcard_hsreason", jobcard_hsreason);

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST',rule, true);
      xhr.send(jobcardformdata);

      setTimeout(function(){
        window.location.href="/manutencao/detalhesJobcard/" + referencia;
      }, 1000);

    });

  });

   $('.mostrardetalhesGenerator').click(function(){

       var referenciajobcard = $(this).attr("datareferencia");
       var index = $(this).attr("datageradorarray");
       console.log(index)
       var caminho = "/manutencao/detalhesJobcardGerador/" + referenciajobcard + "/" + index;

       // window.open(caminho);
       window.location.href="/manutencao/detalhesJobcardGerador/" + referenciajobcard + "/" + index;
    

  });

   $('.mostrardetalhesCredelecInfo').click(function(){

       var referenciajobcard = $(this).attr("data-user-new");
       var index = $(this).attr("data-array-new");
       console.log(index)
       var caminho = "/manutencao/detalhesCredelecJobcard/" + referenciajobcard + "/" + index;

       // window.open(caminho);
       window.location.href="/manutencao/detalhesCredelecJobcard/" + referenciajobcard + "/" + index;
    

  });
  

  $('.mostrardetalhesEquipment').click(function(){

     var referenciajobcard = $(this).attr("data-user-new");
       var index = $(this).attr("data-array-new");
       console.log(index)
       var caminho = "/manutencao/detalhesEquipmentRepairsJobcard/" + referenciajobcard + "/" + index;

       // window.open(caminho);
       window.location.href="/manutencao/detalhesEquipmentRepairsJobcard/" + referenciajobcard + "/" + index;


  });

  $('.mostrardetalhesSpares').click(function(){

     var referenciajobcard = $(this).attr("datareferencia");
     var referenciaidtecnico = $(this).attr("data-user-name");
     var index = $(this).attr("dataspareusadoarray");
       console.log(index)
       var caminho = "/manutencao/detalhesSparesUsedJobcard/" + referenciajobcard + "/" + referenciaidtecnico + "/" + index;

       // window.open(caminho);
       window.location.href="/manutencao/detalhesSparesUsedJobcard/" + referenciajobcard + "/" + referenciaidtecnico + "/" + index;

  });


   $('.mostrarDetalhesMapa').click(function(){

     var referencia = $(this).attr("data-user-new");
     var detalhesgpsinfo = JSON.parse($(this).attr("datagpsinfo"));
       console.log(detalhesgpsinfo)
       var caminho ="/manutencao/detalhesMapa/" + referencia;

       // window.open(caminho);

      window.location.href="/manutencao/detalhesMapa/" + referencia;
     

    
  });

  $('#addphotoButton').click(function() {
    var referencia = $(this).attr("data-user-new");
    console.log(referencia);
    window.location.href="/manutencao/detalhesPhotoModal/"+referencia;
  });

  
  $('.signageModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesSignageModal/" + referencia;

  });


  $('#jobcardsignage_yes_btn').click(function(){
    $('#loading').fadeIn().delay(20000).fadeOut();

       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateSignageInfo/" + referencia;

       var jobcard_idpresent=$("input[name='jobcard_idpresent']:checked").val();
       jobcardformdata.append("jobcard_idpresent", jobcard_idpresent);

       var jobcard_vmlogopresent=$("input[name='jobcard_vmlogopresent']:checked").val();
       jobcardformdata.append("jobcard_vmlogopresent", jobcard_vmlogopresent);

       var jobcard_signnotice=$("input[name='jobcard_signnotice']:checked").val();
       jobcardformdata.append("jobcard_signnotice", jobcard_signnotice);

       var jobcard_cautionladder=$("input[name='jobcard_cautionladder']:checked").val();
       jobcardformdata.append("jobcard_cautionladder", jobcard_cautionladder);

       var jobcard_cautioncabletray=$("input[name='jobcard_cautioncabletray']:checked").val();
       jobcardformdata.append("jobcard_cautioncabletray", jobcard_cautioncabletray);

       var jobcard_noticedoor=$("input[name='jobcard_noticedoor']:checked").val();
       jobcardformdata.append("jobcard_noticedoor", jobcard_noticedoor);

       var jobcard_warningstick=$("input[name='jobcard_warningstick']:checked").val();
       jobcardformdata.append("jobcard_warningstick", jobcard_warningstick);

       var jobcard_rooftopdoorlocked=$("input[name='jobcard_rooftopdoorlocked']:checked").val();
       jobcardformdata.append("jobcard_rooftopdoorlocked", jobcard_rooftopdoorlocked);

       var jobcard_accesscontrolrooftop=$("input[name='jobcard_accesscontrolrooftop']:checked").val();
       jobcardformdata.append("jobcard_accesscontrolrooftop", jobcard_accesscontrolrooftop);

       var jobcard_signagecomments=$("#jobcard_signagecomments").val();
       jobcardformdata.append("jobcard_signagecomments", jobcard_signagecomments);


        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

           
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });


  $('.containerModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesContainerModal/" + referencia;

  });


  $('#jobcardcontainer_yes_btn').click(function(){
    $('#loading').fadeIn().delay(20000).fadeOut();
    var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateContainerInfo/" + referencia;


        var jobcard_containerligth=$("input[name='jobcard_containerligth']:checked").val();
        jobcardformdata.append("jobcard_containerligth", jobcard_containerligth);

        var jobcard_testemergency=$("input[name='jobcard_testemergency']:checked").val();
        jobcardformdata.append("jobcard_testemergency", jobcard_testemergency);

        var jobcard_powersockets=$("input[name='jobcard_powersockets']:checked").val();
        jobcardformdata.append("jobcard_powersockets", jobcard_powersockets);

        var jobcard_testearth=$("input[name='jobcard_testearth']:checked").val();
        jobcardformdata.append("jobcard_testearth", jobcard_testearth);

        var jobcard_circuitbreakers=$("input[name='jobcard_circuitbreakers']:checked").val();
        jobcardformdata.append("jobcard_circuitbreakers", jobcard_circuitbreakers);

        var jobcard_surgearrestors=$("input[name='jobcard_surgearrestors']:checked").val();
        jobcardformdata.append("jobcard_surgearrestors", jobcard_surgearrestors);

        var jobcard_electricalconnections=$("input[name='jobcard_electricalconnections']:checked").val();
        jobcardformdata.append("jobcard_electricalconnections", jobcard_electricalconnections);

        var jobcard_labelling=$("input[name='jobcard_labelling']:checked").val();
        jobcardformdata.append("jobcard_labelling", jobcard_labelling);

        var jobcard_earthconnections=$("input[name='jobcard_earthconnections']:checked").val();
        jobcardformdata.append("jobcard_earthconnections", jobcard_earthconnections);

        var jobcard_powerskirting=$("input[name='jobcard_powerskirting']:checked").val();
        jobcardformdata.append("jobcard_powerskirting", jobcard_powerskirting);


        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });


  $('.mastModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesMastModal/" + referencia;

  });


  $('#jobcardmast_yes_btn').click(function(){
       $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateMastInfo/" + referencia;


        var jobcard_awlight=$("input[name='jobcard_awlight']:checked").val();
        jobcardformdata.append("jobcard_awlight", jobcard_awlight);

        var jobcard_connectligthswitches=$("input[name='jobcard_connectligthswitches']:checked").val();
        jobcardformdata.append("jobcard_connectligthswitches", jobcard_connectligthswitches);

        var jobcard_surgeprotection=$("input[name='jobcard_surgeprotection']:checked").val();
        jobcardformdata.append("jobcard_surgeprotection", jobcard_surgeprotection);

        var jobcard_cleaninside=$("input[name='jobcard_cleaninside']:checked").val();
        jobcardformdata.append("jobcard_cleaninside", jobcard_cleaninside);

        var jobcard_reportdamage=$("input[name='jobcard_reportdamage']:checked").val();
        jobcardformdata.append("jobcard_reportdamage", jobcard_reportdamage);

        var jobcard_sealentries=$("input[name='jobcard_sealentries']:checked").val();
        jobcardformdata.append("jobcard_sealentries", jobcard_sealentries);

        var jobcard_mountingsfeeders=$("input[name='jobcard_mountingsfeeders']:checked").val();
        jobcardformdata.append("jobcard_mountingsfeeders", jobcard_mountingsfeeders);

        var jobcard_rustcable=$("input[name='jobcard_rustcable']:checked").val();
        jobcardformdata.append("jobcard_rustcable", jobcard_rustcable);

        var jobcard_mastcomments=$("#jobcard_mastcomments").val();
        jobcardformdata.append("jobcard_mastcomments", jobcard_mastcomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });


  $('.cleaningModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesCleaningModal/" + referencia;

  });

  $('#jobcardcleaning_yes_btn').click(function(){
       $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");
        

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateCleaningInfo/" + referencia;

        var jobcard_servicefence=$("input[name='jobcard_servicefence']:checked").val();
        jobcardformdata.append("jobcard_servicefence", jobcard_servicefence);

        var jobcard_cleansite=$("input[name='jobcard_cleansite']:checked").val();
        jobcardformdata.append("jobcard_cleansite", jobcard_cleansite);

        var jobcard_cleanweed=$("input[name='jobcard_cleanweed']:checked").val();
        jobcardformdata.append("jobcard_cleanweed", jobcard_cleanweed);

        var jobcard_poisontreament=$("input[name='jobcard_poisontreament']:checked").val();
        jobcardformdata.append("jobcard_poisontreament", jobcard_poisontreament);

        var jobcard_removerubbish=$("input[name='jobcard_removerubbish']:checked").val();
        jobcardformdata.append("jobcard_removerubbish", jobcard_removerubbish);

        var jobcard_anydefects=$("input[name='jobcard_anydefects']:checked").val();
        jobcardformdata.append("jobcard_anydefects", jobcard_anydefects);

        var jobcard_cleaningcomments=$("#jobcard_cleaningcomments").val();
        jobcardformdata.append("jobcard_cleaningcomments", jobcard_cleaningcomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.locksModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesLocksModal/" + referencia;


  });

  $('#jobcardlocks_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateLocksInfo/" + referencia;

        var jobcard_locksgate=$("input[name='jobcard_locksgate']:checked").val();
        jobcardformdata.append("jobcard_locksgate", jobcard_locksgate);

        var jobcard_locksP3=$("input[name='jobcard_locksP3']:checked").val();
        jobcardformdata.append("jobcard_locksP3", jobcard_locksP3);

        var jobcard_locksgenset=$("input[name='jobcard_locksgenset']:checked").val();
        jobcardformdata.append("jobcard_locksgenset", jobcard_locksgenset);

        var jobcard_lockscontainer=$("input[name='jobcard_lockscontainer']:checked").val();
        jobcardformdata.append("jobcard_lockscontainer", jobcard_lockscontainer);

        var jobcard_locksM3=$("input[name='jobcard_locksM3']:checked").val();
        jobcardformdata.append("jobcard_locksM3", jobcard_locksM3);

        var jobcard_lockscomments=$("#jobcard_lockscomments").val();
        jobcardformdata.append("jobcard_lockscomments", jobcard_lockscomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.environmentalModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesEnvironmentalModal/" + referencia;

  });

  $('#jobcardenvironmental_yes_btn').click(function(){
       $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

     var jobcardformdata = new FormData();

     var rule="/manutencao/updateEnvironmentalInfo/" + referencia;

     var jobcard_siteerosion=$("input[name='jobcard_siteerosion']:checked").val();
     jobcardformdata.append("jobcard_siteerosion", jobcard_siteerosion);

     var jobcard_groundcover=$("input[name='jobcard_groundcover']:checked").val();
     jobcardformdata.append("jobcard_groundcover", jobcard_groundcover);

     var jobcard_oildiesel=$("input[name='jobcard_oildiesel']:checked").val();
     jobcardformdata.append("jobcard_oildiesel", jobcard_oildiesel);

     var jobcard_overallsite=$("input[name='jobcard_overallsite']:checked").val();
     jobcardformdata.append("jobcard_overallsite", jobcard_overallsite);

     var jobcard_environmentalcomments=$("#jobcard_environmentalcomments").val();
     jobcardformdata.append("jobcard_environmentalcomments", jobcard_environmentalcomments);


     var xhr = new XMLHttpRequest();
         // Add any event handlers here...
         xhr.open('POST',rule, true);
         xhr.send(jobcardformdata);

         
         setTimeout(function(){
        window.location.href="/manutencao/menuMaintPlan/" + referencia;
       }, 1000);


    });

  $('.fallarrestModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesFallarrestModal/" + referencia;

  });

  $('#jobcardfallarrest_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateFallArrestInfo/" + referencia;

        var jobcard_visiblestate=$("input[name='jobcard_visiblestate']:checked").val();
        jobcardformdata.append("jobcard_visiblestate", jobcard_visiblestate);

        var jobcard_fallarrestcomments=$("#jobcard_fallarrestcomments").val();
        jobcardformdata.append("jobcard_fallarrestcomments", jobcard_fallarrestcomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

   $('.generatorinfojobcardModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesGeneratorInfojobcardModal/" + referencia;

  });

 
 $('#jobcardgeneratorinfo_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateGenaratorInfoJobcardInfo/" + referencia;

        var jobcard_startupdelay=$("#jobcard_startupdelay").val();
        jobcardformdata.append("jobcard_startupdelay", jobcard_startupdelay);

        var jobcard_mainsrestore=$("#jobcard_mainsrestore").val();
        jobcardformdata.append("jobcard_mainsrestore", jobcard_mainsrestore);

        var jobcard_loadR=$("#jobcard_loadR").val();
        jobcardformdata.append("jobcard_loadR", jobcard_loadR);

        var jobcard_loadwhiteS=$("#jobcard_loadwhiteS").val();
        jobcardformdata.append("jobcard_loadwhiteS", jobcard_loadwhiteS);

        var jobcard_loadblueT=$("#jobcard_loadblueT").val();
        jobcardformdata.append("jobcard_loadblueT", jobcard_loadblueT);

        var jobcard_frequency=$("#jobcard_frequency").val();
        jobcardformdata.append("jobcard_frequency", jobcard_frequency);

        var jobcard_batteryvoltage=$("#jobcard_batteryvoltage").val();
        jobcardformdata.append("jobcard_batteryvoltage", jobcard_batteryvoltage);

        var jobcard_batterycharging=$("#jobcard_batterycharging").val();
        jobcardformdata.append("jobcard_batterycharging", jobcard_batterycharging);

        var jobcard_coolantlevel=$("input[name='jobcard_coolantlevel']:checked").val();
        jobcardformdata.append("jobcard_coolantlevel", jobcard_coolantlevel);

        var jobcard_oilpressure=$("#jobcard_oilpressure").val();
        jobcardformdata.append("jobcard_oilpressure", jobcard_oilpressure);

        var jobcard_generatorinfocomments=$("#jobcard_generatorinfocomments").val();
        jobcardformdata.append("jobcard_generatorinfocomments", jobcard_generatorinfocomments);

        var jobcard_oilfilter=$("input[name='jobcard_oilfilter']:checked").val();
        jobcardformdata.append("jobcard_oilfilter", jobcard_oilfilter);

        var jobcard_oillevel=$("input[name='jobcard_oillevel']:checked").val();
        jobcardformdata.append("jobcard_oillevel", jobcard_oillevel);

        var jobcard_oilleaks=$("input[name='jobcard_oilleaks']:checked").val();
        jobcardformdata.append("jobcard_oilleaks", jobcard_oilleaks);

        var jobcard_radiatorhoses=$("input[name='jobcard_radiatorhoses']:checked").val();
        jobcardformdata.append("jobcard_radiatorhoses", jobcard_radiatorhoses);

        var jobcard_airfilter=$("input[name='jobcard_airfilter']:checked").val();
        jobcardformdata.append("jobcard_airfilter", jobcard_airfilter);

        var jobcard_coolantleaks=$("input[name='jobcard_coolantleaks']:checked").val();
        jobcardformdata.append("jobcard_coolantleaks", jobcard_coolantleaks);

        var jobcard_fuelfilter=$("input[name='jobcard_fuelfilter']:checked").val();
        jobcardformdata.append("jobcard_fuelfilter", jobcard_fuelfilter);

        var jobcard_vbelt=$("input[name='jobcard_vbelt']:checked").val();
        jobcardformdata.append("jobcard_vbelt", jobcard_vbelt);

        var jobcard_fuelleaks=$("input[name='jobcard_fuelleaks']:checked").val();
        jobcardformdata.append("jobcard_fuelleaks", jobcard_fuelleaks);

        var jobcard_preruncontrol=$("input[name='jobcard_preruncontrol']:checked").val();
        jobcardformdata.append("jobcard_preruncontrol", jobcard_preruncontrol);

        var jobcard_chargeralarms=$("input[name='jobcard_chargeralarms']:checked").val();
        jobcardformdata.append("jobcard_chargeralarms", jobcard_chargeralarms);

        var jobcard_failmains=$("input[name='jobcard_failmains']:checked").val();
        jobcardformdata.append("jobcard_failmains", jobcard_failmains);

        var jobcard_abnormalvibrations=$("input[name='jobcard_abnormalvibrations']:checked").val();
        jobcardformdata.append("jobcard_abnormalvibrations", jobcard_abnormalvibrations);

        var jobcard_airflowradiator=$("input[name='jobcard_airflowradiator']:checked").val();
        jobcardformdata.append("jobcard_airflowradiator", jobcard_airflowradiator);

        var jobcard_waterpump=$("input[name='jobcard_waterpump']:checked").val();
        jobcardformdata.append("jobcard_waterpump", jobcard_waterpump);

        var jobcard_externalalarms=$("input[name='jobcard_externalalarms']:checked").val();
        jobcardformdata.append("jobcard_externalalarms", jobcard_externalalarms);

        var jobcard_testruncomments=$("#jobcard_testruncomments").val();
        jobcardformdata.append("jobcard_testruncomments", jobcard_testruncomments);

        var jobcard_switchauto=$("input[name='jobcard_switchauto']:checked").val();
        jobcardformdata.append("jobcard_switchauto", jobcard_switchauto);

        var jobcard_externalclear=$("input[name='jobcard_externalclear']:checked").val();
        jobcardformdata.append("jobcard_externalclear", jobcard_externalclear);

        var jobcard_postruncomments=$("#jobcard_postruncomments").val();
        jobcardformdata.append("jobcard_postruncomments", jobcard_postruncomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  
  $('.edBoardModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesEdBoardModal/" + referencia;

  });


  $('#jobcardedBoard_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");


        var jobcardformdata = new FormData();

        var rule="/manutencao/updateedBoardJobcardInfo/" + referencia;
        
        var jobcard_tightenconnect=$("input[name='jobcard_tightenconnect']:checked").val();
        jobcardformdata.append("jobcard_tightenconnect", jobcard_tightenconnect);

        var jobcard_energymeters=$("input[name='jobcard_energymeters']:checked").val();
        jobcardformdata.append("jobcard_energymeters", jobcard_energymeters);

        var jobcard_unauthorizedconnect=$("input[name='jobcard_unauthorizedconnect']:checked").val();
        jobcardformdata.append("jobcard_unauthorizedconnect", jobcard_unauthorizedconnect);

        var jobcard_holessealed=$("input[name='jobcard_holessealed']:checked").val();
        jobcardformdata.append("jobcard_holessealed", jobcard_holessealed);

        var jobcard_sitelight=$("input[name='jobcard_sitelight']:checked").val();
        jobcardformdata.append("jobcard_sitelight", jobcard_sitelight);

        var jobcard_meterbox=$("input[name='jobcard_meterbox']:checked").val();
        jobcardformdata.append("jobcard_meterbox", jobcard_meterbox);

        var jobcard_autorearm=$("input[name='jobcard_autorearm']:checked").val();
        jobcardformdata.append("jobcard_autorearm", jobcard_autorearm);

        var jobcard_edBoardcomments=$("#jobcard_edBoardcomments").val();
        jobcardformdata.append("jobcard_edBoardcomments", jobcard_edBoardcomments);

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });


  $('.electricalModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesElectricalModal/" + referencia;

  });

  $('#jobcardelectrical_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateelectricalJobcardInfo/" + referencia;
        
        var jobcard_currentreadingsred=$("#jobcard_currentreadingsred").val();
        jobcardformdata.append("jobcard_currentreadingsred", jobcard_currentreadingsred);

        var jobcard_currentreadingswhite=$("#jobcard_currentreadingswhite").val();
        jobcardformdata.append("jobcard_currentreadingswhite", jobcard_currentreadingswhite);

        var jobcard_currentreadingsblue=$("#jobcard_currentreadingsblue").val();
        jobcardformdata.append("jobcard_currentreadingsblue", jobcard_currentreadingsblue);

        var jobcard_currentreadingsneutral=$("#jobcard_currentreadingsneutral").val();
        jobcardformdata.append("jobcard_currentreadingsneutral", jobcard_currentreadingsneutral);

        var jobcard_voltagereadingRW=$("#jobcard_voltagereadingRW").val();
        jobcardformdata.append("jobcard_voltagereadingRW", jobcard_voltagereadingRW);

        var jobcard_voltagereadingRN=$("#jobcard_voltagereadingRN").val();
        jobcardformdata.append("jobcard_voltagereadingRN", jobcard_voltagereadingRN);

        var jobcard_voltagereadingRE=$("#jobcard_voltagereadingRE").val();
        jobcardformdata.append("jobcard_voltagereadingRE", jobcard_voltagereadingRE);

        var jobcard_voltagereadingRB=$("#jobcard_voltagereadingRB").val();
        jobcardformdata.append("jobcard_voltagereadingRB", jobcard_voltagereadingRB);

        var jobcard_voltagereadingWN=$("#jobcard_voltagereadingWN").val();
        jobcardformdata.append("jobcard_voltagereadingWN", jobcard_voltagereadingWN);

        var jobcard_voltagereadingWE=$("#jobcard_voltagereadingWE").val();
        jobcardformdata.append("jobcard_voltagereadingWE", jobcard_voltagereadingWE);

        var jobcard_voltagereadingWB=$("#jobcard_voltagereadingWB").val();
        jobcardformdata.append("jobcard_voltagereadingWB", jobcard_voltagereadingWB);

        var jobcard_voltagereadingBN=$("#jobcard_voltagereadingBN").val();
        jobcardformdata.append("jobcard_voltagereadingBN", jobcard_voltagereadingBN);

        var jobcard_voltagereadingBE=$("#jobcard_voltagereadingBE").val();
        jobcardformdata.append("jobcard_voltagereadingBE", jobcard_voltagereadingBE);

        var jobcard_voltagereadingNE=$("#jobcard_voltagereadingNE").val();
        jobcardformdata.append("jobcard_voltagereadingNE", jobcard_voltagereadingNE);

        var jobcard_electricalcomments=$("#jobcard_electricalcomments").val();
        jobcardformdata.append("jobcard_electricalcomments", jobcard_electricalcomments);

        var jobcard_earthleakage=$("input[name='jobcard_earthleakage']:checked").val();
        jobcardformdata.append("jobcard_earthleakage", jobcard_earthleakage);

        var jobcard_earthohm=$("#jobcard_earthohm").val();
        jobcardformdata.append("jobcard_earthohm", jobcard_earthohm);

        var jobcard_earthcomments=$("#jobcard_earthcomments").val();
        jobcardformdata.append("jobcard_earthcomments", jobcard_earthcomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

           
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.rectifierModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesRectifierModal/" + referencia;

  });


  $('#jobcardrectifier_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updaterectifierJobcardInfo/" + referencia;

        var jobcard_rectmake=$("#jobcard_rectmake").val();
        jobcardformdata.append("jobcard_rectmake", jobcard_rectmake);

        var jobcard_opproperly=$("input[name='jobcard_opproperly']:checked").val();
        jobcardformdata.append("jobcard_opproperly", jobcard_opproperly);

        var jobcard_slotspopulated=$("input[name='jobcard_slotspopulated']:checked").val();
        jobcardformdata.append("jobcard_slotspopulated", jobcard_slotspopulated);

        var jobcard_parametersokay=$("input[name='jobcard_parametersokay']:checked").val();
        jobcardformdata.append("jobcard_parametersokay", jobcard_parametersokay);

        var jobcard_systemupgrade=$("input[name='jobcard_systemupgrade']:checked").val();
        jobcardformdata.append("jobcard_systemupgrade", jobcard_systemupgrade);

        var jobcard_slotsburn=$("input[name='jobcard_slotsburn']:checked").val();
        jobcardformdata.append("jobcard_slotsburn", jobcard_slotsburn);

        var jobcard_supervisormodule=$("input[name='jobcard_supervisormodule']:checked").val();
        jobcardformdata.append("jobcard_supervisormodule", jobcard_supervisormodule);

        var jobcard_lvdokay=$("input[name='jobcard_lvdokay']:checked").val();
        jobcardformdata.append("jobcard_lvdokay", jobcard_lvdokay);

        var jobcard_pldokay=$("input[name='jobcard_pldokay']:checked").val();
        jobcardformdata.append("jobcard_pldokay", jobcard_pldokay);

        var jobcard_AcDcCbOkay=$("input[name='jobcard_AcDcCbOkay']:checked").val();
        jobcardformdata.append("jobcard_AcDcCbOkay", jobcard_AcDcCbOkay);

        var jobcard_alarmcommport=$("input[name='jobcard_alarmcommport']:checked").val();
        jobcardformdata.append("jobcard_alarmcommport", jobcard_alarmcommport);

        var jobcard_rectifiercomments=$("#jobcard_rectifiercomments").val();
        jobcardformdata.append("jobcard_rectifiercomments", jobcard_rectifiercomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.batterybanksModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesBatteryBanksModal/" + referencia;

  });

 $('#jobcardbatterybanks_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updatebatterybanksJobcardInfo/" + referencia;

        //Battery Bank 1
          //Test 1
          var jobcard_batterybank1_test1_cell1=$("#jobcard_batterybank1_test1_cell1").val();
          jobcardformdata.append("jobcard_batterybank1_test1_cell1", jobcard_batterybank1_test1_cell1);

          var jobcard_batterybank1_test1_cell2=$("#jobcard_batterybank1_test1_cell2").val();
          jobcardformdata.append("jobcard_batterybank1_test1_cell2", jobcard_batterybank1_test1_cell2);

          var jobcard_batterybank1_test1_cell3=$("#jobcard_batterybank1_test1_cell3").val();
          jobcardformdata.append("jobcard_batterybank1_test1_cell3", jobcard_batterybank1_test1_cell3);

          var jobcard_batterybank1_test1_cell4=$("#jobcard_batterybank1_test1_cell4").val();
          jobcardformdata.append("jobcard_batterybank1_test1_cell4", jobcard_batterybank1_test1_cell4);
          
          //Test 2
          var jobcard_batterybank1_test2_cell1=$("#jobcard_batterybank1_test2_cell1").val();
          jobcardformdata.append("jobcard_batterybank1_test2_cell1", jobcard_batterybank1_test2_cell1);

          var jobcard_batterybank1_test2_cell2=$("#jobcard_batterybank1_test2_cell2").val();
          jobcardformdata.append("jobcard_batterybank1_test2_cell2", jobcard_batterybank1_test2_cell2);

          var jobcard_batterybank1_test2_cell3=$("#jobcard_batterybank1_test2_cell3").val();
          jobcardformdata.append("jobcard_batterybank1_test2_cell3", jobcard_batterybank1_test2_cell3);

          var jobcard_batterybank1_test2_cell4=$("#jobcard_batterybank1_test2_cell4").val();
          jobcardformdata.append("jobcard_batterybank1_test2_cell4", jobcard_batterybank1_test2_cell4);

        //Battery Bank 2
          //Test 1
          var jobcard_batterybank2_test1_cell5=$("#jobcard_batterybank2_test1_cell5").val();
          jobcardformdata.append("jobcard_batterybank2_test1_cell5", jobcard_batterybank2_test1_cell5);

          var jobcard_batterybank2_test1_cell6=$("#jobcard_batterybank2_test1_cell6").val();
          jobcardformdata.append("jobcard_batterybank2_test1_cell6", jobcard_batterybank2_test1_cell6);

          var jobcard_batterybank2_test1_cell7=$("#jobcard_batterybank2_test1_cell7").val();
           jobcardformdata.append("jobcard_batterybank2_test1_cell7", jobcard_batterybank2_test1_cell7);

          var jobcard_batterybank2_test1_cell8=$("#jobcard_batterybank2_test1_cell8").val();
          jobcardformdata.append("jobcard_batterybank2_test1_cell8", jobcard_batterybank2_test1_cell8);
          
          //Test 2
          var jobcard_batterybank2_test2_cell5=$("#jobcard_batterybank2_test2_cell5").val();
          jobcardformdata.append("jobcard_batterybank2_test2_cell5", jobcard_batterybank2_test2_cell5);

          var jobcard_batterybank2_test2_cell6=$("#jobcard_batterybank2_test2_cell6").val();
          jobcardformdata.append("jobcard_batterybank2_test2_cell6", jobcard_batterybank2_test2_cell6);

          var jobcard_batterybank2_test2_cell7=$("#jobcard_batterybank2_test2_cell7").val();
          jobcardformdata.append("jobcard_batterybank2_test2_cell7", jobcard_batterybank2_test2_cell7);

          var jobcard_batterybank2_test2_cell8=$("#jobcard_batterybank2_test2_cell8").val();
          jobcardformdata.append("jobcard_batterybank2_test2_cell8", jobcard_batterybank2_test2_cell8);


        //Battery Bank 3
          //Test 1
          var jobcard_batterybank3_test1_cell9=$("#jobcard_batterybank3_test1_cell9").val();
          jobcardformdata.append("jobcard_batterybank3_test1_cell9", jobcard_batterybank3_test1_cell9);

          var jobcard_batterybank3_test1_cell10=$("#jobcard_batterybank3_test1_cell10").val();
          jobcardformdata.append("jobcard_batterybank3_test1_cell10", jobcard_batterybank3_test1_cell10);

          var jobcard_batterybank3_test1_cell11=$("#jobcard_batterybank3_test1_cell11").val();
          jobcardformdata.append("jobcard_batterybank3_test1_cell11", jobcard_batterybank3_test1_cell11);

          var jobcard_batterybank3_test1_cell12=$("#jobcard_batterybank3_test1_cell12").val();
          jobcardformdata.append("jobcard_batterybank3_test1_cell12", jobcard_batterybank3_test1_cell12);
          
          //Test 2
          var jobcard_batterybank3_test2_cell9=$("#jobcard_batterybank3_test2_cell9").val();
          jobcardformdata.append("jobcard_batterybank3_test2_cell9", jobcard_batterybank3_test2_cell9);

          var jobcard_batterybank3_test2_cell10=$("#jobcard_batterybank3_test2_cell10").val();
          jobcardformdata.append("jobcard_batterybank3_test2_cell10", jobcard_batterybank3_test2_cell10);

          var jobcard_batterybank3_test2_cell11=$("#jobcard_batterybank3_test2_cell11").val();
          jobcardformdata.append("jobcard_batterybank3_test2_cell11", jobcard_batterybank3_test2_cell11);

          var jobcard_batterybank3_test2_cell12=$("#jobcard_batterybank3_test2_cell12").val();
          jobcardformdata.append("jobcard_batterybank3_test2_cell12", jobcard_batterybank3_test2_cell12);

         //Battery Bank 4
          //Test 1
          var jobcard_batterybank4_test1_cell13=$("#jobcard_batterybank4_test1_cell13").val();
          jobcardformdata.append("jobcard_batterybank4_test1_cell13", jobcard_batterybank4_test1_cell13);

          var jobcard_batterybank4_test1_cell14=$("#jobcard_batterybank4_test1_cell14").val();
          jobcardformdata.append("jobcard_batterybank4_test1_cell14", jobcard_batterybank4_test1_cell14);

          var jobcard_batterybank4_test1_cell15=$("#jobcard_batterybank4_test1_cell15").val();
          jobcardformdata.append("jobcard_batterybank4_test1_cell15", jobcard_batterybank4_test1_cell15);

          var jobcard_batterybank4_test1_cell16=$("#jobcard_batterybank4_test1_cell16").val();
          jobcardformdata.append("jobcard_batterybank4_test1_cell16", jobcard_batterybank4_test1_cell16);
          
          //Test 2
          var jobcard_batterybank4_test2_cell13=$("#jobcard_batterybank4_test2_cell13").val();
          jobcardformdata.append("jobcard_batterybank4_test2_cell13", jobcard_batterybank4_test2_cell13);

          var jobcard_batterybank4_test2_cell14=$("#jobcard_batterybank4_test2_cell14").val();
          jobcardformdata.append("jobcard_batterybank4_test2_cell14", jobcard_batterybank4_test2_cell14);

          var jobcard_batterybank4_test2_cell15=$("#jobcard_batterybank4_test2_cell15").val();
          jobcardformdata.append("jobcard_batterybank4_test2_cell15", jobcard_batterybank4_test2_cell15);

          var jobcard_batterybank4_test2_cell16=$("#jobcard_batterybank4_test2_cell16").val();
          jobcardformdata.append("jobcard_batterybank4_test2_cell16", jobcard_batterybank4_test2_cell16);

        //Battery Bank 5
          //Test 1
          var jobcard_batterybank5_test1_cell17=$("#jobcard_batterybank5_test1_cell17").val();
          jobcardformdata.append("jobcard_batterybank5_test1_cell17", jobcard_batterybank5_test1_cell17);

          var jobcard_batterybank5_test1_cell18=$("#jobcard_batterybank5_test1_cell18").val();
          jobcardformdata.append("jobcard_batterybank5_test1_cell18", jobcard_batterybank5_test1_cell18);

          var jobcard_batterybank5_test1_cell19=$("#jobcard_batterybank5_test1_cell19").val();
          jobcardformdata.append("jobcard_batterybank5_test1_cell19", jobcard_batterybank5_test1_cell19);

          var jobcard_batterybank5_test1_cell20=$("#jobcard_batterybank5_test1_cell20").val();
          jobcardformdata.append("jobcard_batterybank5_test1_cell20", jobcard_batterybank5_test1_cell20);
          
          //Test 2
          var jobcard_batterybank5_test2_cell17=$("#jobcard_batterybank5_test2_cell17").val();
          jobcardformdata.append("jobcard_batterybank5_test2_cell17", jobcard_batterybank5_test2_cell17);

          var jobcard_batterybank5_test2_cell18=$("#jobcard_batterybank5_test2_cell18").val();
          jobcardformdata.append("jobcard_batterybank5_test2_cell18", jobcard_batterybank5_test2_cell18);

          var jobcard_batterybank5_test2_cell19=$("#jobcard_batterybank5_test2_cell19").val();
          jobcardformdata.append("jobcard_batterybank5_test2_cell19", jobcard_batterybank5_test2_cell19);

          var jobcard_batterybank5_test2_cell20=$("#jobcard_batterybank5_test2_cell20").val();
          jobcardformdata.append("jobcard_batterybank5_test2_cell20", jobcard_batterybank5_test2_cell20);

        //Battery Bank 6
          //Test 1
          var jobcard_batterybank6_test1_cell21=$("#jobcard_batterybank6_test1_cell21").val();
          jobcardformdata.append("jobcard_batterybank6_test1_cell21", jobcard_batterybank6_test1_cell21);

          var jobcard_batterybank6_test1_cell22=$("#jobcard_batterybank6_test1_cell22").val();
          jobcardformdata.append("jobcard_batterybank6_test1_cell22", jobcard_batterybank6_test1_cell22);

          var jobcard_batterybank6_test1_cell23=$("#jobcard_batterybank6_test1_cell23").val();
          jobcardformdata.append("jobcard_batterybank6_test1_cell23", jobcard_batterybank6_test1_cell23);

          var jobcard_batterybank6_test1_cell24=$("#jobcard_batterybank6_test1_cell24").val();
          jobcardformdata.append("jobcard_batterybank6_test1_cell24", jobcard_batterybank6_test1_cell24);
          
          //Test 2
          var jobcard_batterybank6_test2_cell21=$("#jobcard_batterybank6_test2_cell21").val();
          jobcardformdata.append("jobcard_batterybank6_test2_cell21", jobcard_batterybank6_test2_cell21);

          var jobcard_batterybank6_test2_cell22=$("#jobcard_batterybank6_test2_cell22").val();
          jobcardformdata.append("jobcard_batterybank6_test2_cell22", jobcard_batterybank6_test2_cell22);

          var jobcard_batterybank6_test2_cell23=$("#jobcard_batterybank6_test2_cell23").val();
          jobcardformdata.append("jobcard_batterybank6_test2_cell23", jobcard_batterybank6_test2_cell23);

          var jobcard_batterybank6_test2_cell24=$("#jobcard_batterybank6_test2_cell24").val();
          jobcardformdata.append("jobcard_batterybank6_test2_cell24", jobcard_batterybank6_test2_cell24);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.aircondModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesAircondModal/" + referencia;


  });


  $('#jobcardaircond_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateaircondJobcardInfo/" + referencia;

        var jobcard_noisevibration=$("input[name='jobcard_noisevibration']:checked").val();
        jobcardformdata.append("jobcard_noisevibration", jobcard_noisevibration);

        var jobcard_cleanfilter=$("input[name='jobcard_cleanfilter']:checked").val();
        jobcardformdata.append("jobcard_cleanfilter", jobcard_cleanfilter);

        var jobcard_hightemperature=$("input[name='jobcard_hightemperature']:checked").val();
        jobcardformdata.append("jobcard_hightemperature", jobcard_hightemperature);

        var jobcard_operatingtime=$("input[name='jobcard_operatingtime']:checked").val();
        jobcardformdata.append("jobcard_operatingtime", jobcard_operatingtime);

        var jobcard_accooling=$("input[name='jobcard_accooling']:checked").val();
        jobcardformdata.append("jobcard_accooling", jobcard_accooling);

        var jobcard_acmodelcapacity=$("#jobcard_acmodelcapacity").val();
        jobcardformdata.append("jobcard_acmodelcapacity", jobcard_acmodelcapacity);

        var jobcard_accageinst=$("input[name='jobcard_accageinst']:checked").val();
        jobcardformdata.append("jobcard_accageinst", jobcard_accageinst);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.antennasModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesAntennasModal/" + referencia;

  });

  $('#jobcardantennas_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateantennasJobcardInfo/" + referencia;

        var jobcardantennasinfo = {};

        
        var jobcard_antennasecure=$("input[name='jobcard_antennasecure']:checked").val();
        jobcardformdata.append("jobcard_antennasecure", jobcard_antennasecure);

        var jobcard_bracketscond=$("input[name='jobcard_bracketscond']:checked").val();
        jobcardformdata.append("jobcard_bracketscond", jobcard_bracketscond);

        var jobcard_clampcond=$("input[name='jobcard_clampcond']:checked").val();
         jobcardformdata.append("jobcard_clampcond", jobcard_clampcond);

        var jobcard_opticfibercond=$("input[name='jobcard_opticfibercond']:checked").val();
        jobcardformdata.append("jobcard_opticfibercond", jobcard_opticfibercond);

        var jobcard_rrucables=$("input[name='jobcard_rrucables']:checked").val();
        jobcardformdata.append("jobcard_rrucables", jobcard_rrucables);

        var jobcard_rrucond=$("input[name='jobcard_rrucond']:checked").val();
        jobcardformdata.append("jobcard_rrucond", jobcard_rrucond);

        var jobcard_aauearth=$("input[name='jobcard_aauearth']:checked").val();
        jobcardformdata.append("jobcard_aauearth", jobcard_aauearth);

        var jobcard_jumpercond=$("input[name='jobcard_jumpercond']:checked").val();
        jobcardformdata.append("jobcard_jumpercond", jobcard_jumpercond);

        var jobcard_dcducables=$("input[name='jobcard_dcducables']:checked").val();
        jobcardformdata.append("jobcard_dcducables", jobcard_dcducables);

        var jobcard_cablesdamages=$("input[name='jobcard_cablesdamages']:checked").val();
        jobcardformdata.append("jobcard_cablesdamages", jobcard_cablesdamages);

        var jobcard_opticLabels=$("input[name='jobcard_opticLabels']:checked").val();
        jobcardformdata.append("jobcard_opticLabels", jobcard_opticLabels);

        var jobcard_constructionradius=$("input[name='jobcard_constructionradius']:checked").val();
        jobcardformdata.append("jobcard_constructionradius", jobcard_constructionradius);

        var jobcard_radiocomments=$("#jobcard_radiocomments").val();
        jobcardformdata.append("jobcard_radiocomments", jobcard_radiocomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.eainfoModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesEaInfoModal/" + referencia;

  });

  $('#jobcardeainfo_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateeainfoJobcardInfo/" + referencia;

        
        var jobcard_acmains=$("input[name='jobcard_acmains']:checked").val();
        jobcardformdata.append("jobcard_acmains", jobcard_acmains);

        var jobcard_ac1=$("input[name='jobcard_ac1']:checked").val();
        jobcardformdata.append("jobcard_ac1", jobcard_ac1);

        var jobcard_ac2=$("input[name='jobcard_ac2']:checked").val();
        jobcardformdata.append("jobcard_ac2", jobcard_ac2);

        var jobcard_doorswitch=$("input[name='jobcard_doorswitch']:checked").val();
        jobcardformdata.append("jobcard_doorswitch", jobcard_doorswitch);

        var jobcard_genabnormal=$("input[name='jobcard_genabnormal']:checked").val();
        jobcardformdata.append("jobcard_genabnormal", jobcard_genabnormal);

        var jobcard_genlowfuel=$("input[name='jobcard_genlowfuel']:checked").val();
        jobcardformdata.append("jobcard_genlowfuel", jobcard_genlowfuel);

        var jobcard_genrunning=$("input[name='jobcard_genrunning']:checked").val();
        jobcardformdata.append("jobcard_genrunning", jobcard_genrunning);

        var jobcard_rectmodule=$("input[name='jobcard_rectmodule']:checked").val();
        jobcardformdata.append("jobcard_rectmodule", jobcard_rectmodule);

        var jobcard_rectsystem=$("input[name='jobcard_rectsystem']:checked").val();
        jobcardformdata.append("jobcard_rectsystem", jobcard_rectsystem);

        var jobcard_hightemp=$("input[name='jobcard_hightemp']:checked").val();
        jobcardformdata.append("jobcard_hightemp", jobcard_hightemp);

        var jobcard_eainfocomments=$("#jobcard_eainfocomments").val();
        jobcardformdata.append("jobcard_eainfocomments", jobcard_eainfocomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            
            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.txinfoModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesTxInfoModal/" + referencia;

  });


  $('#jobcardtxinfo_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updatetxinfoJobcardInfo/" + referencia;
        
        var jobcard_internalearth=$("input[name='jobcard_internalearth']:checked").val();
        jobcardformdata.append("jobcard_internalearth", jobcard_internalearth);

       var jobcard_internelectconnect=$("input[name='jobcard_internelectconnect']:checked").val();
        jobcardformdata.append("jobcard_internelectconnect", jobcard_internelectconnect);

        var jobcard_internallabels=$("input[name='jobcard_internallabels']:checked").val();
        jobcardformdata.append("jobcard_internallabels", jobcard_internallabels);

        var jobcard_internalddf=$("input[name='jobcard_internalddf']:checked").val();
        jobcardformdata.append("jobcard_internalddf", jobcard_internalddf);

        var jobcard_internalconnecttight=$("input[name='jobcard_internalconnecttight']:checked").val();
        jobcardformdata.append("jobcard_internalconnecttight", jobcard_internalconnecttight);

        var jobcard_internalIFlabels=$("input[name='jobcard_internalIFlabels']:checked").val();
        jobcardformdata.append("jobcard_internalIFlabels", jobcard_internalIFlabels);

        var jobcard_txinternalcomm=$("#jobcard_txinternalcomm").val();
        jobcardformdata.append("jobcard_txinternalcomm", jobcard_txinternalcomm);

        var jobcard_externalbrackets=$("input[name='jobcard_externalbrackets']:checked").val();
        jobcardformdata.append("jobcard_externalbrackets", jobcard_externalbrackets);

        var jobcard_externalnutstight=$("input[name='jobcard_externalnutstight']:checked").val();
        jobcardformdata.append("jobcard_externalnutstight", jobcard_externalnutstight);

        var jobcard_externalearth=$("input[name='jobcard_externalearth']:checked").val();
        jobcardformdata.append("jobcard_externalearth", jobcard_externalearth);

        var jobcard_externalIFconntight=$("input[name='jobcard_externalIFconntight']:checked").val();
        jobcardformdata.append("jobcard_externalIFconntight", jobcard_externalIFconntight);

        var jobcard_externallabels=$("input[name='jobcard_externallabels']:checked").val();
        jobcardformdata.append("jobcard_externallabels", jobcard_externallabels);

        var jobcard_externalwaterproof=$("input[name='jobcard_externalwaterproof']:checked").val();
        jobcardformdata.append("jobcard_externalwaterproof", jobcard_externalwaterproof);

        var jobcard_externalcomm=$("#jobcard_externalcomm").val();
        jobcardformdata.append("jobcard_externalcomm", jobcard_externalcomm);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.vsatinfoModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesVsatInfoModal/" + referencia;


  });

  $('#jobcardvsatinfo_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updatevsatinfoJobcardInfo/" + referencia;

        
        var jobcard_vsatlinkfrom=$("#jobcard_vsatlinkfrom").val();
        jobcardformdata.append("jobcard_vsatlinkfrom", jobcard_vsatlinkfrom);

        var jobcard_vsatlinkto=$("#jobcard_vsatlinkto").val();
        jobcardformdata.append("jobcard_vsatlinkto", jobcard_vsatlinkto);

        var jobcard_ebno=$("#jobcard_ebno").val();
        jobcardformdata.append("jobcard_ebno", jobcard_ebno);

        var jobcard_txlevel=$("#jobcard_txlevel").val();
        jobcardformdata.append("jobcard_txlevel", jobcard_txlevel);

        var jobcard_equipmentlabels=$("input[name='jobcard_equipmentlabels']:checked").val();
        jobcardformdata.append("jobcard_equipmentlabels", jobcard_equipmentlabels);

        var jobcard_cableslabels=$("input[name='jobcard_cableslabels']:checked").val();
        jobcardformdata.append("jobcard_cableslabels", jobcard_cableslabels);

        var jobcard_entrysealed=$("input[name='jobcard_entrysealed']:checked").val();
        jobcardformdata.append("jobcard_entrysealed", jobcard_entrysealed);

        var jobcard_conduittrunksclean=$("input[name='jobcard_conduittrunksclean']:checked").val();
        jobcardformdata.append("jobcard_conduittrunksclean", jobcard_conduittrunksclean);

        var jobcard_230vrecLN=$("#jobcard_230vrecLN").val();
        jobcardformdata.append("jobcard_230vrecLN", jobcard_230vrecLN);

        var jobcard_230vrecLE=$("#jobcard_230vrecLE").val();
        jobcardformdata.append("jobcard_230vrecLE", jobcard_230vrecLE);

        var jobcard_230vrecNE=$("#jobcard_230vrecNE").val();
        jobcardformdata.append("jobcard_230vrecNE", jobcard_230vrecNE);

        var jobcard_230vrecEEBar=$("#jobcard_230vrecEEBar").val();
        jobcardformdata.append("jobcard_230vrecEEBar", jobcard_230vrecEEBar);

        var jobcard_downloadmodemconfig=$("input[name='jobcard_downloadmodemconfig']:checked").val();
        jobcardformdata.append("jobcard_downloadmodemconfig", jobcard_downloadmodemconfig);

        var jobcard_checkplugsconntight=$("input[name='jobcard_checkplugsconntight']:checked").val();
        jobcardformdata.append("jobcard_checkplugsconntight", jobcard_checkplugsconntight);

        var jobcard_checkdishplunthclean=$("input[name='jobcard_checkdishplunthclean']:checked").val();
        jobcardformdata.append("jobcard_checkdishplunthclean", jobcard_checkdishplunthclean);

        var jobcard_checkdishcracksagg=$("input[name='jobcard_checkdishcracksagg']:checked").val();
        jobcardformdata.append("jobcard_checkdishcracksagg", jobcard_checkdishcracksagg);

        var jobcard_checkgalvaniseditems=$("input[name='jobcard_checkgalvaniseditems']:checked").val();
        jobcardformdata.append("jobcard_checkgalvaniseditems", jobcard_checkgalvaniseditems);

        var jobcard_checkdishdentsbumpsplit=$("input[name='jobcard_checkdishdentsbumpsplit']:checked").val();
        jobcardformdata.append("jobcard_checkdishdentsbumpsplit", jobcard_checkdishdentsbumpsplit);

        var jobcard_checkfanintsakevent=$("input[name='jobcard_checkfanintsakevent']:checked").val();
        jobcardformdata.append("jobcard_checkfanintsakevent", jobcard_checkfanintsakevent);

        var jobcard_checkdishearthdensorpaste=$("input[name='jobcard_checkdishearthdensorpaste']:checked").val();
        jobcardformdata.append("jobcard_checkdishearthdensorpaste", jobcard_checkdishearthdensorpaste);

        var jobcard_checkdishtight=$("input[name='jobcard_checkdishtight']:checked").val();
        jobcardformdata.append("jobcard_checkdishtight", jobcard_checkdishtight);

        var jobcard_checkconnsealed=$("input[name='jobcard_checkconnsealed']:checked").val();
        jobcardformdata.append("jobcard_checkconnsealed", jobcard_checkconnsealed);

        var jobcard_checkentrysealed=$("input[name='jobcard_checkentrysealed']:checked").val();
        jobcardformdata.append("jobcard_checkentrysealed", jobcard_checkentrysealed);

        var jobcard_checksignalpathobst=$("input[name='jobcard_checksignalpathobst']:checked").val();
        jobcardformdata.append("jobcard_checksignalpathobst", jobcard_checksignalpathobst);

        var jobcard_vsatcomments=$("#jobcard_vsatcomments").val();
        jobcardformdata.append("jobcard_vsatcomments", jobcard_vsatcomments);
        

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.photoModal').click(function(){

    var referencia = $(this).attr("dataref");
    
    window.location.href="/manutencao/detalhesPhotoModal/" + referencia;

  });

  
  $('#jobcardphotoinfo_yes_btn').click(function(){
    var jobcardphotoinfo = arrJobcard_photoMaint;
    var timett = jobcardphotoinfo.length*120000;
     $('#loading').fadeIn().delay(timett).fadeOut();
    var referencia = $("#formulario2").attr("dataref");
    var tipojobcard = $("#formulario2").attr("datajobtype");
    console.log(tipojobcard);

     var jobcardformdata = new FormData();

     var rule="/manutencao/updatephotoinfoJobcardInfo/" + referencia;


     
    
     if(jobcardphotoinfo.length!=0){
       for(let i = 0, j = jobcardphotoinfo.length; i<j;i++){
         jobcardformdata.append('jobcardphotoinfo', jobcardphotoinfo[i]);
       }
     }

     
     var xhr = new XMLHttpRequest();
         // Add any event handlers here...
         xhr.open('POST',rule, true);
         xhr.send(jobcardformdata);


        

     if (tipojobcard == "Callout") {

      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) { // When data is received successfully
            
            Materialize.toast("gravado com sucesso", 2000, "rounded");
            setTimeout(function(){window.location.href="/manutencao/ttnumberhome/inprogress/"}, 1000)
          }
        }
      };

      //  setTimeout(function(){
      //    window.location.href="/manutencao/ttnumberhome/inprogress/";
      //   }, 10000);
     } else {

      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) { // When data is received successfully
            
            Materialize.toast("gravado com sucesso", 2000, "rounded");
            setTimeout(function(){window.location.href="/manutencao/menuMaintPlan/" + referencia}, 1000)
          }
        }
      };
        //  setTimeout(function(){
        //    window.location.href="/manutencao/menuMaintPlan/" + referencia;
        //  }, timett); 
     }


 });





//   $('#jobcardphotoinfo_yes_btn').click(function(){
//     var jobcardphotoinfo = arrJobcard_photoMaint;
//     var timett = jobcardphotoinfo.length*8000;
//      $('#loading').fadeIn().delay(timett).fadeOut();
//     var referencia = $("#formulario2").attr("dataref");
//     var tipojobcard = $("#formulario2").attr("datajobtype");
//     console.log(tipojobcard);

//      var jobcardformdata = new FormData();

//      var rule="/manutencao/updatephotoinfoJobcardInfo/" + referencia;


     
    
//      if(jobcardphotoinfo.length!=0){
//        for(let i = 0, j = jobcardphotoinfo.length; i<j;i++){
//          jobcardformdata.append('jobcardphotoinfo', jobcardphotoinfo[i]);
//        }
//      }

     
//      var xhr = new XMLHttpRequest();
//          // Add any event handlers here...
//          xhr.open('POST',rule, true);
//          xhr.send(jobcardformdata);

//      if (tipojobcard == "Callout") {
//        setTimeout(function(){
//          window.location.href="/manutencao/ttnumberhome/inprogress/";
//         }, 10000);
//      } else {
//          setTimeout(function(){
//            window.location.href="/manutencao/menuMaintPlan/" + referencia;
//          }, timett); 
//      }


//  });
 
 // $('#jobcardphotoinfo_yes_btn').click(function(){
 //        $('#loading').fadeIn().delay(20000).fadeOut();
 //       var referencia = $("#formulario2").attr("dataref");
 //       var tipojobcard = $("#formulario2").attr("datajobtype");
 //       var fotoscomprimidas = [];
 //       console.log(tipojobcard);

 //        var jobcardformdata = new FormData();

 //        var rule="/manutencao/updatephotoinfoJobcardInfo/" + referencia;
        
 //        var jobcardphotoinfo = arrJobcard_photoMaint;

 //        if(jobcardphotoinfo.length!=0){
 //          // for(let i = 0, j = jobcardphotoinfo.length; i<j;i++)
 //            jobcardphotoinfo.forEach(async(df,i)=>{
 //            //compressing the target image
 //            var imageFile = await arrJobcard_photoMaint[i];
 //            console.log('Este é o file original em blob', imageFile instanceof Blob);
 //            console.log("este é o tamanho original " + imageFile.size / 1024 / 1024 +" MB");

 //            var options = {
 //              maxSizeMb: 1,
 //              maxWidthOrHeight: 1920,
 //              useWebWorker: true
 //            }

 //            imageCompression(imageFile, options)
 //              .then(function (compressedFile) {
 //                console.log("compressedFile instanceof Blob ", compressedFile instanceof Blob);
 //                console.log("compressedFile size " + compressedFile.size /1024 / 1024 + "MB");
 //                //console.log(compressedFile);
 //                jobcardphotoinfo[i] = compressedFile;
 //                return compressedFile;
 //            }).then(()=>{
 //              jobcardformdata.append('jobcardphotoinfo', jobcardphotoinfo[i]);
 //              console.log("Sucesso!")
 //            }).then(()=>{
 //              // var xhr = new XMLHttpRequest();
 //              // // Add any event handlers here...
 //              // xhr.open('POST',rule, true);
 //              // xhr.send(jobcardformdata);
 //            })
 //            .catch(function (error) {
 //              console.log("Deu algum erro aqui   " + error);
 //            });
            
 //          })
 //        }

 //        if (tipojobcard == "Callout") {
 //          setTimeout(function(){
 //            window.location.href="/manutencao/ttnumberhome/inprogress/";
 //           }, 5000);
 //        } else {
 //            setTimeout(function(){
 //              var xhr = new XMLHttpRequest();
 //              // Add any event handlers here...
 //              xhr.open('POST',rule, true);
 //              xhr.send(jobcardformdata);
 //              // window.location.href="/manutencao/menuMaintPlan/" + referencia;
 //            }, 20000); 
 //        }
 //    });


  $('#hvacphotoinfo_yes_btn').click(function(){
    var jobcardphotoinfo = arrJobcard_photoMaint;
    var timett = jobcardphotoinfo.length*120000;
     $('#loading').fadeIn().delay(timett).fadeOut();
    var referencia = $("#formulario2").attr("dataref");
    var tipojobcard = $("#formulario2").attr("datajobtype");
    console.log(tipojobcard);
    console.log(referencia);

     var jobcardformdata = new FormData();

     var rule="/climatizacao/updatephotoinfoHvacInfo/" + referencia;


     
    
     if(jobcardphotoinfo.length!=0){
       for(let i = 0, j = jobcardphotoinfo.length; i<j;i++){
         jobcardformdata.append('jobcardphotoinfo', jobcardphotoinfo[i]);
       }
     }

     
     var xhr = new XMLHttpRequest();
         // Add any event handlers here...
         xhr.open('POST',rule, true);
         xhr.send(jobcardformdata);


        

     if (tipojobcard == "Callout") {

      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) { // When data is received successfully
            
            Materialize.toast("gravado com sucesso", 2000, "rounded");
            setTimeout(function(){window.location.href="/climatizacao/correctivainprogress"}, 1000)
          }
        }
      };

      
     } else {

      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) { // When data is received successfully
            
            Materialize.toast("gravado com sucesso", 2000, "rounded");
            setTimeout(function(){window.location.href="/climatizacao/correctivainprogress/"}, 1000)
          }
        }
      };
        
     }


 });

  $('.concernsModal').click(function(){

    var referencia = $(this).attr("dataref");
    console.log(referencia);

    window.location.href="/manutencao/detalhesConcernsModal/" + referencia;

  });

  $('#jobcardconcernsinfo_yes_btn').click(function(){
        $('#loading').fadeIn().delay(20000).fadeOut();
       var referencia = $("#formulario2").attr("dataref");

        var jobcardformdata = new FormData();

        var rule="/manutencao/updateconcernsinfoJobcardInfo/" + referencia;
        
        var jobcard_concernsmaintnumber=$("#jobcard_concernsmaintnumber").val();
        jobcardformdata.append("jobcard_concernsmaintnumber", jobcard_concernsmaintnumber);

        var jobcard_concernstype=$("#jobcard_concernstype").val();
        jobcardformdata.append("jobcard_concernstype", jobcard_concernstype);

        var jobcard_concernsdescription=$("#jobcard_concernsdescription").val();
        jobcardformdata.append("jobcard_concernsdescription", jobcard_concernsdescription);

        var jobcard_concernsdate=$("#jobcard_concernsdate").val();
        jobcardformdata.append("jobcard_concernsdate", jobcard_concernsdate);

        var jobcard_concernsacknowledged=$("#jobcard_concernsacknowledged").val();
        jobcardformdata.append("jobcard_concernsacknowledged", jobcard_concernsacknowledged);

        var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(jobcardformdata);

            setTimeout(function(){
           window.location.href="/manutencao/menuMaintPlan/" + referencia;
          }, 1000);


    });

  $('.voltaraomenuprev').click(function(){

    window.location.href="/manutencao/preventativemaint/inprogress";

  });

  $('.signageModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardsignage");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Sinalização não disponível':'Signage information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        window.location.href="/manutencao/detalhesSignageModal/" + referencia;
    }
    


  });


  $('.containerModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardcontainer");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Contentor não disponível':'Container information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
      window.location.href="/manutencao/detalhesContainerModal/" + referencia;
    }


      
    
    


  });

  $('.mastModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardmast");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Mastro não disponível':'Mast information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
      window.location.href="/manutencao/detalhesMastModal/" + referencia;
    }


  });

  $('.cleaningModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardcleaning");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Mastro não disponível':'Mast information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
      window.location.href="/manutencao/detalhesCleaningModal/" + referencia;
    }


  });


  $('.locksModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardlocks");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Fechaduras não disponível':'Locks information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
      window.location.href="/manutencao/detalhesLocksModal/" + referencia;
    }

  });


  $('.environmentalModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardenvironmental");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Meio Ambiente não disponível':'Environmental information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
      window.location.href="/manutencao/detalhesEnvironmentalModal/" + referencia;
    }

  });


  $('.fallarrestModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardfallarrest");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Protecção contra queda não disponível':'Fall Arrest information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{

        window.location.href="/manutencao/detalhesFallarrestModal/" + referencia;
    }

  });


  $('.generatorinfojobcardModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardgeneratorinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Gerador não disponível':'Generator information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{

        window.location.href="/manutencao/detalhesGeneratorInfojobcardModal/" + referencia;
    }

  });


  $('.edBoardModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardedBoardinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre EDBoard não disponível':'EDBoard information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{

         window.location.href="/manutencao/detalhesEdBoardModal/" + referencia;
    }

  });



  $('.electricalModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardelectricalinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação Eléctrica não disponível':'Electrical information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
        window.location.href="/manutencao/detalhesElectricalModal/" + referencia;
      
      }

  });


  $('.rectifierModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardrectifierinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Rectificador não disponível':'Rectifier information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
        window.location.href="/manutencao/detalhesRectifierModal/" + referencia;
      
    }

  });



  $('.batterybanksModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardbatterybanksinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Bancos de Bateria não disponível':'Battery Banks information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
         
         window.location.href="/manutencao/detalhesBatteryBanksModal/" + referencia;
      
    }

  });

  

  $('.aircondModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardaircondinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre AC não disponível':'AC information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
        window.location.href="/manutencao/detalhesAircondModal/" + referencia;
      
    }

  });


  $('.antennasModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardantennasinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre Antenas não disponível':'Antennas information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
        window.location.href="/manutencao/detalhesAntennasModal/" + referencia;
      
      }

  });


  $('.eainfoModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardeainfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre EA não disponível':'EA information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
        window.location.href="/manutencao/detalhesEaInfoModal/" + referencia;
      
    }

  });


  $('.txinfoModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardtxinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Informação sobre TX não disponível':'TX information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
         
         window.location.href="/manutencao/detalhesTxInfoModal/" + referencia;
      
    }

  });


  
  $('.vsatinfoModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardvsatinfo");
    var referencia = $("#recolherid").attr("data_id");

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Informação sobre VSAT não disponível':'VSAT information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
        window.location.href="/manutencao/detalhesVsatInfoModal/" + referencia;
      
    }

  });



  $('.photoModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardphotoinfo");
    var referencia = $("#recolherid").attr("data_id");
    // console.log(JSON.parse(comparador))

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Informação sobre Fotos não disponível':'Photos information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
        window.location.href="/manutencao/detalhesPhotoModal/" + referencia;
        
      
      }

  });


  $('.concernsModalDetails').click(function(){

    var comparador = $(this).attr("datajobcardconcernsinfo");
    var referencia = $("#recolherid").attr("data_id");
    // console.log(JSON.parse(comparador))

    if(comparador === "{}"){

      $('#msg_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
      $('#msg_content_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Informação sobre Preocupações não disponível':'Concerns information not available'))
      $('#msg_modal').openModal({dismissible:false});

    }else{
        
        window.location.href="/manutencao/detalhesConcernsModal/" + referencia;
      
      }

  });
  

  $('#pergunta3yes').click(function(){

    $('#mostrardetalhespergunta3').removeClass('hide');

  });

  $('#pergunta3no').click(function(){

    $('#mostrardetalhespergunta3').addClass('hide');

  });


  $('#pergunta5yes').click(function(){

    $('#mostrardetalhespergunta5').removeClass('hide');

  });

  $('#pergunta5no').click(function(){

    $('#mostrardetalhespergunta5').addClass('hide');

  });

  $('#pergunta6yes').click(function(){

    $('#mostrardetalhespergunta6').removeClass('hide');

  });

  $('#pergunta6no').click(function(){

    $('#mostrardetalhespergunta6').addClass('hide');

  });

  $('#pergunta7yes').click(function(){

    $('#mostrardetalhespergunta7').removeClass('hide');

  });

  $('#pergunta7no').click(function(){

    $('#mostrardetalhespergunta7').addClass('hide');

  });

  $('#pergunta8yes').click(function(){

    $('#mostrardetalhespergunta8').removeClass('hide');

  });

  $('#pergunta8no').click(function(){

    $('#mostrardetalhespergunta8').addClass('hide');

  });

  $('#pergunta9yes').click(function(){

    $('#mostrardetalhespergunta9').removeClass('hide');

  });

  $('#pergunta9no').click(function(){

    $('#mostrardetalhespergunta9').addClass('hide');

  });

  $('#trocabotoes').click(function(){

    var pergunta1=$("input[name='pergunta1']:checked").val();
    var pergunta2=$("input[name='pergunta2']:checked").val();
    var pergunta4=$("input[name='pergunta4']:checked").val();

    if((pergunta1 == "Yes") || (pergunta2 == "Yes") || (pergunta4 == "Yes")){
      $('.captarinquerito').addClass('hide');
      $('#verAnexo').removeClass('hide');
    }

  });

  $('#verAnexo').click(function(){

    $('.captarinquerito').removeClass('hide');

  });

  $('#voltarPergunta8').click(function(){

    $('.captarinquerito').addClass('hide');
    
  });

  $('.captarinquerito').click(function(){

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a informação ':'Do you really want to save <b>') +(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){

      var rule="/inquerito/novo";
      var inqueritoformdata = new FormData();
      

      var pergunta1=$("input[name='pergunta1']:checked").val();
      inqueritoformdata.append("pergunta1", pergunta1);

      var anexo = {};

      anexo.companyname=$("#companyname").val();
      anexo.companyresgistnum=$("#companyresgistnum").val();
      anexo.surname=$("#surname").val();
      anexo.fornames=$("#fornames").val();
      anexo.residentialadd=$("#residentialadd").val();
      anexo.businessadd=$("#businessadd").val();
      anexo.postaladd=$("#postaladd").val();
      anexo.nationality=$("#nationality").val();
      anexo.datebirth=$("#datebirth").val();
      anexo.passportnum=$("#passportnum").val();
      anexo.occupation=$("#occupation").val();

      inqueritoformdata.append("anexo", JSON.stringify(anexo));

      var pergunta2=$("input[name='pergunta2']:checked").val();
      inqueritoformdata.append("pergunta2", pergunta2);

      var pergunta3=$("input[name='pergunta3']:checked").val();
      inqueritoformdata.append("pergunta3", pergunta3);

      var pergunta3details=$("#pergunta3details").val();
      inqueritoformdata.append("pergunta3details", pergunta3details);

      var pergunta4=$("input[name='pergunta4']:checked").val();
      inqueritoformdata.append("pergunta4", pergunta4);

      var pergunta5=$("input[name='pergunta5']:checked").val();
      inqueritoformdata.append("pergunta5", pergunta5);

      var pergunta5details=$("#pergunta5details").val();
      inqueritoformdata.append("pergunta5details", pergunta5details);

      var pergunta6=$("input[name='pergunta6']:checked").val();
      inqueritoformdata.append("pergunta6", pergunta6);

      var pergunta6details=$("#pergunta6details").val();
      inqueritoformdata.append("pergunta6details", pergunta6details);

      var pergunta7=$("input[name='pergunta6']:checked").val();
      inqueritoformdata.append("pergunta7", pergunta7);

      var pergunta7details=$("#pergunta7details").val();
      inqueritoformdata.append("pergunta7details", pergunta7details);

      var pergunta8=$("input[name='pergunta8']:checked").val();
      inqueritoformdata.append("pergunta8", pergunta8);

      var pergunta8details=$("#pergunta8details").val();
      inqueritoformdata.append("pergunta8details", pergunta8details);

      var pergunta9=$("input[name='pergunta9']:checked").val();
      inqueritoformdata.append("pergunta9", pergunta9);

      var pergunta9details=$("#pergunta9details").val();
      inqueritoformdata.append("pergunta9details", pergunta9details);


      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var data=dia + "/" + mes + "/" + ano;
      inqueritoformdata.append("data", data);

      
      var signature=$("#recolherdados").attr("detalhessession");
      inqueritoformdata.append("signature", signature);
      

      var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(inqueritoformdata);

         setTimeout(function(){
            window.location.href="/inquerito";
        }, 1000);

    });

  });


  $('#captarCliente').click(function(){
    var codigo = $("#cliente_cod").val();
    var dadoscomp=JSON.parse($("#captarCliente").attr("recolhadados"));
    var comparador = false;

      for(var i = 0, j = dadoscomp.length; i<j;i++){

        if(codigo == dadoscomp[i].cliente_cod){
          comparador = true;
        }
      }

    if(comparador == true){

        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O código do cliente já se encontra registado.':'The client code is already registered.'));
        $('#msg_modal').openModal();

    }else{

      if(validar()){
        $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a informação ':'Do you really want to save <b>') +$('#cliente_nome').val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
        $('#yes_no_modal').openModal({dismissible:false});
        // $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
        $('#yes_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();

          var clienteformdata = new FormData();
          var rule="/cliente/novo";

          var cliente_cod=$("#cliente_cod").val();
          clienteformdata.append("cliente_cod", cliente_cod);

          var cliente_nome=$("#cliente_nome").val();
          clienteformdata.append("cliente_nome", cliente_nome);

          var cliente_nuit=$("#cliente_nuit").val();
          clienteformdata.append("cliente_nuit", cliente_nuit);

          var cliente_filial=$("#cliente_filial").val();
          clienteformdata.append("cliente_filial", cliente_filial);

          var cliente_telefone=$("#cliente_telefone").val();
          clienteformdata.append("cliente_telefone", cliente_telefone);

          var cliente_web=$("#cliente_web").val();
          clienteformdata.append("cliente_web", cliente_web);

          var cliente_outros=$("#cliente_outros").val();
          clienteformdata.append("cliente_outros", cliente_outros);

          var cliente_endfisico=$("#cliente_endfisico").val();
          clienteformdata.append("cliente_endfisico", cliente_endfisico);

          var cliente_bairrofisico=$("#cliente_bairrofisico").val();
          clienteformdata.append("cliente_bairrofisico", cliente_bairrofisico);

          var cliente_cidadefisico=$("#cliente_cidadefisico").val();
          clienteformdata.append("cliente_cidadefisico", cliente_cidadefisico);

          var cliente_provinciafisico=$("#cliente_provinciafisico").val();
          clienteformdata.append("cliente_provinciafisico", cliente_provinciafisico);

          var cliente_codpostalfisico=$("#cliente_codpostalfisico").val();
          clienteformdata.append("cliente_codpostalfisico", cliente_codpostalfisico);

          var cliente_paisfisico=$("#cliente_paisfisico").val();
          clienteformdata.append("cliente_paisfisico", cliente_paisfisico);

          var cliente_endpostal=$("#cliente_endpostal").val();
          clienteformdata.append("cliente_endpostal", cliente_endpostal);

          var cliente_bairropostal=$("#cliente_bairropostal").val();
          clienteformdata.append("cliente_bairropostal", cliente_bairropostal);

          var cliente_cidadepostal=$("#cliente_cidadepostal").val();
          clienteformdata.append("cliente_cidadepostal", cliente_cidadepostal);

          var cliente_provinciapostal=$("#cliente_provinciapostal").val();
          clienteformdata.append("cliente_provinciapostal", cliente_provinciapostal);

          var cliente_codpostalpostal=$("#cliente_codpostalpostal").val();
          clienteformdata.append("cliente_codpostalpostal", cliente_codpostalpostal);

          var cliente_paispostal=$("#cliente_paispostal").val();
          clienteformdata.append("cliente_paispostal", cliente_paispostal);

          var dataregistocliente = new Date();
          clienteformdata.append("dataregistocliente", dataregistocliente);

          var contactosArrayCliente = contactosArray;
          clienteformdata.append("contactosArrayCliente", JSON.stringify(contactosArrayCliente));

          //console.log(contactosArray);

          var xhr = new XMLHttpRequest();
              // Add any event handlers here...
              xhr.open('POST',rule, true);
              xhr.send(clienteformdata);

              setTimeout(function(){
             window.location.href="/cliente/clientesupplier/client_home";
            }, 1000);

        });
      }
    }
});


$("#departamento").change(function(){
  if($(this).val()=="Telco")
  $(".avacseccao ").addClass("hide")
if($(this).val()!="Telco")
  $(".avacseccao ").removeClass("hide")
})


  $('#captarFornecedor').click(function(){

      var codigo = $("#fornecedor_cod").val();
      var dadoscomp=JSON.parse($("#captarFornecedor").attr("recolhadados"));
      var comparador = false;

      for(var i = 0, j = dadoscomp.length; i<j;i++){

        if(codigo == dadoscomp[i].fornecedor_cod){
          comparador = true;
        }
      }

      if(comparador == true){
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O código do fornecedor já se encontra registado.':'The supplier code is already registered.'));
        $('#msg_modal').openModal();
      }
      else if($("#cliente_termos").val() == null){
        $('#msg_title_modal').html('Campo Não Preenchido')
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor preencha os Termos ':'Please fill Terms <b>') + (($(".lang-picker").attr("value")=="pt")?'</b> !':"</b>!"));
        $('#msg_modal').openModal();
      }else{

        if(validar()){
          $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a informação ':'Do you really want to save <b>') +$('#cliente_nome').val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
          $('#yes_no_modal').openModal({dismissible:false});
          // $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
          $('#yes_btn_modal').click(function(e){
                e.stopPropagation();
                e.stopImmediatePropagation();

                
                var fornecedorformdata= new FormData();

                var fornecedor_cod=$("#fornecedor_cod").val();
                fornecedorformdata.append("fornecedor_cod", fornecedor_cod);

                var rule="/cliente/novofornecedor/" + fornecedor_cod;

                var cliente_nome=$("#cliente_nome").val();
                fornecedorformdata.append("cliente_nome", cliente_nome);

                var cliente_nuit=$("#cliente_nuit").val();
                fornecedorformdata.append("cliente_nuit", cliente_nuit);

                var cliente_filial=$("#cliente_filial").val();
                fornecedorformdata.append("cliente_filial", cliente_filial);

                var cliente_telefone=$("#cliente_telefone").val();
                fornecedorformdata.append("cliente_telefone", cliente_telefone);

                var cliente_web=$("#cliente_web").val();
                fornecedorformdata.append("cliente_web", cliente_web);

                var cliente_outros=$("#cliente_outros").val();
                fornecedorformdata.append("cliente_outros", cliente_outros);

                var cliente_endfisico=$("#cliente_endfisico").val();
                fornecedorformdata.append("cliente_endfisico", cliente_endfisico);

                var cliente_bairrofisico=$("#cliente_bairrofisico").val();
                fornecedorformdata.append("cliente_bairrofisico", cliente_bairrofisico);

                var cliente_cidadefisico=$("#cliente_cidadefisico").val();
                fornecedorformdata.append("cliente_cidadefisico", cliente_cidadefisico);

                var cliente_provinciafisico=$("#cliente_provinciafisico").val();
                fornecedorformdata.append("cliente_provinciafisico", cliente_provinciafisico);

                var cliente_codpostalfisico=$("#cliente_codpostalfisico").val();
                fornecedorformdata.append("cliente_codpostalfisico", cliente_codpostalfisico);

                var cliente_paisfisico=$("#cliente_paisfisico").val();
                fornecedorformdata.append("cliente_paisfisico", cliente_paisfisico);

                var cliente_endpostal=$("#cliente_endpostal").val();
                fornecedorformdata.append("cliente_endpostal", cliente_endpostal);

                var cliente_bairropostal=$("#cliente_bairropostal").val();
                fornecedorformdata.append("cliente_bairropostal", cliente_bairropostal);

                var cliente_cidadepostal=$("#cliente_cidadepostal").val();
                fornecedorformdata.append("cliente_cidadepostal", cliente_cidadepostal);

                var cliente_provinciapostal=$("#cliente_provinciapostal").val();
                fornecedorformdata.append("cliente_provinciapostal", cliente_provinciapostal);

                var cliente_codpostalpostal=$("#cliente_codpostalpostal").val();
                fornecedorformdata.append("cliente_codpostalpostal", cliente_codpostalpostal);

                var cliente_paispostal=$("#cliente_paispostal").val();
                fornecedorformdata.append("cliente_paispostal", cliente_paispostal);

                var dataregistocliente = new Date();
                fornecedorformdata.append("dataregistocliente", dataregistocliente);

                var cliente_termos=$("#cliente_termos").val();
                fornecedorformdata.append("cliente_termos", cliente_termos);

                var contactosArrayCliente = contactosArray;
                fornecedorformdata.append("contactosArrayCliente", JSON.stringify(contactosArrayCliente));

                var carta_apresentacao_empresa=$("#carta_apresentacao_empresa").get(0).files;
                fornecedorformdata.append('carta_apresentacao_empresa', carta_apresentacao_empresa[0]);

                var alvara=$("#alvara").get(0).files;
                fornecedorformdata.append('alvara', alvara[0]);

                var certidao_entidades_legais=$("#certidao_entidades_legais").get(0).files;
                fornecedorformdata.append('certidao_entidades_legais', certidao_entidades_legais[0]);

                var nuit=$("#nuit").get(0).files;
                fornecedorformdata.append('nuit', nuit[0]);

                var nuel=$("#nuel").get(0).files;
                fornecedorformdata.append('nuel', nuel[0]);

                var carta_confirmacao_banco=$("#carta_confirmacao_banco").get(0).files;
                fornecedorformdata.append('carta_confirmacao_banco', carta_confirmacao_banco[0]);


                  var xhr = new XMLHttpRequest();
                    // Add any event handlers here...
                    xhr.open('POST',rule, true);
                    xhr.send(fornecedorformdata);

                    setTimeout(function(){
                   window.location.href="/cliente/clientesupplier/supplier_home";
                  }, 1000);

              });
            }
        }
});


  $('#editarCliente').click(function(){

      var dadosclientes =JSON.parse($("#editarCliente").attr("dadosclientes"));
      var referenciaCliente=$("#referenciarCliente").attr("data");
      var comparador = false;
      var codigo = $("#cliente_cod").val();

      var posicao = dadosclientes.findIndex(x => x._id === referenciaCliente);
      dadosclientes.splice(posicao, 1);

      for(var i = 0, j = dadosclientes.length; i<j;i++){

        if(codigo == dadosclientes[i].cliente_cod){
          comparador = true;
        }
      }
      
      if(comparador == true){
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O código do cliente já se encontra registado no sistema. Escolha outro':'The client code is already registered in the system. Choose another.'));
        $('#msg_modal').openModal();
      }else{

          if(validar()){
            $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
            $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente actualizar a informação de ':'Do you really want to update the information of <b>') +$('#cliente_nome').val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
            $('#yes_no_modal').openModal({dismissible:false});
            // $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
            $('#yes_btn_modal').click(function(e){
              e.stopPropagation();
              e.stopImmediatePropagation();

              var clienteformdata = new FormData();
              var rule="/cliente/editarCliente/" + referenciaCliente;

              var cliente_cod=$("#cliente_cod").val();
              clienteformdata.append("cliente_cod", cliente_cod);

              var cliente_nome=$("#cliente_nome").val();
              clienteformdata.append("cliente_nome", cliente_nome);

              var cliente_nuit=$("#cliente_nuit").val();
              clienteformdata.append("cliente_nuit", cliente_nuit);

              var cliente_filial=$("#cliente_filial").val();
              clienteformdata.append("cliente_filial", cliente_filial);

              var cliente_telefone=$("#cliente_telefone").val();
              clienteformdata.append("cliente_telefone", cliente_telefone);

              var cliente_web=$("#cliente_web").val();
              clienteformdata.append("cliente_web", cliente_web);

              var cliente_outros=$("#cliente_outros").val();
              clienteformdata.append("cliente_outros", cliente_outros);

              var cliente_endfisico=$("#cliente_endfisico").val();
              clienteformdata.append("cliente_endfisico", cliente_endfisico);

              var cliente_bairrofisico=$("#cliente_bairrofisico").val();
              clienteformdata.append("cliente_bairrofisico", cliente_bairrofisico);

              var cliente_cidadefisico=$("#cliente_cidadefisico").val();
              clienteformdata.append("cliente_cidadefisico", cliente_cidadefisico);

              var cliente_provinciafisico=$("#cliente_provinciafisico").val();
              clienteformdata.append("cliente_provinciafisico", cliente_provinciafisico);

              var cliente_codpostalfisico=$("#cliente_codpostalfisico").val();
              clienteformdata.append("cliente_codpostalfisico", cliente_codpostalfisico);

              var cliente_paisfisico=$("#cliente_paisfisico").val();
              clienteformdata.append("cliente_paisfisico", cliente_paisfisico);

              var cliente_endpostal=$("#cliente_endpostal").val();
              clienteformdata.append("cliente_endpostal", cliente_endpostal);

              var cliente_bairropostal=$("#cliente_bairropostal").val();
              clienteformdata.append("cliente_bairropostal", cliente_bairropostal);

              var cliente_cidadepostal=$("#cliente_cidadepostal").val();
              clienteformdata.append("cliente_cidadepostal", cliente_cidadepostal);

              var cliente_provinciapostal=$("#cliente_provinciapostal").val();
              clienteformdata.append("cliente_provinciapostal", cliente_provinciapostal);

              var cliente_codpostalpostal=$("#cliente_codpostalpostal").val();
              clienteformdata.append("cliente_codpostalpostal", cliente_codpostalpostal);

              var cliente_paispostal=$("#cliente_paispostal").val();
              clienteformdata.append("cliente_paispostal", cliente_paispostal);

              var dataedicaocliente = new Date();
              clienteformdata.append("dataedicaocliente", dataedicaocliente);

              var contactosArrayCliente = editarContactosArray;
              clienteformdata.append("contactosArrayCliente", JSON.stringify(contactosArrayCliente));

              var xhr = new XMLHttpRequest();
              // Add any event handlers here...
              xhr.open('POST',rule, true);
              xhr.send(clienteformdata);

              setTimeout(function(){
             window.location.href="/cliente/clientesupplier/client_home";
            }, 1000);

            });
          }
      }
});


  $('#editarFornecedor').click(function(){

      var dadosfornecedores =JSON.parse($("#editarFornecedor").attr("dadosfornecedores"));
      var referenciaFornecedor=$("#referenciarFornecedor").attr("data");
      var comparador = false;
      var codigo = $("#fornecedor_cod").val();

      var posicao = dadosfornecedores.findIndex(x => x._id === referenciaFornecedor);
      dadosfornecedores.splice(posicao, 1);

      for(var i = 0, j = dadosfornecedores.length; i<j;i++){

        if(codigo == dadosfornecedores[i].fornecedor_cod){
          comparador = true;
        }
      }

      if(comparador == true){
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O código do fornecedor já se encontra registado no sistema. Escolha outro':'The supplier code is already registered in the system. Choose another.'));
        $('#msg_modal').openModal();
      }else{

          if(validar()){
            $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
            $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente actualizar a informação ':'Do you really want to update <b>') +$('#cliente_nome').val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
            $('#yes_no_modal').openModal({dismissible:false});
            // $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
            $('#yes_btn_modal').click(function(e){
              e.stopPropagation();
              e.stopImmediatePropagation();

              var fornecedorformdata= new FormData();
              var rule="/cliente/editarFornecedor/" + referenciaFornecedor;;

              var fornecedor_cod=$("#fornecedor_cod").val();
              fornecedorformdata.append("fornecedor_cod", fornecedor_cod);

              var cliente_nome=$("#cliente_nome").val();
              fornecedorformdata.append("cliente_nome", cliente_nome);

              var cliente_nuit=$("#cliente_nuit").val();
              fornecedorformdata.append("cliente_nuit", cliente_nuit);

              var cliente_filial=$("#cliente_filial").val();
              fornecedorformdata.append("cliente_filial", cliente_filial);

              var cliente_telefone=$("#cliente_telefone").val();
              fornecedorformdata.append("cliente_telefone", cliente_telefone);

              var cliente_web=$("#cliente_web").val();
              fornecedorformdata.append("cliente_web", cliente_web);

              var cliente_outros=$("#cliente_outros").val();
              fornecedorformdata.append("cliente_outros", cliente_outros);

              var cliente_endfisico=$("#cliente_endfisico").val();
              fornecedorformdata.append("cliente_endfisico", cliente_endfisico);

              var cliente_bairrofisico=$("#cliente_bairrofisico").val();
              fornecedorformdata.append("cliente_bairrofisico", cliente_bairrofisico);

              var cliente_cidadefisico=$("#cliente_cidadefisico").val();
              fornecedorformdata.append("cliente_cidadefisico", cliente_cidadefisico);

              var cliente_provinciafisico=$("#cliente_provinciafisico").val();
              fornecedorformdata.append("cliente_provinciafisico", cliente_provinciafisico);

              var cliente_codpostalfisico=$("#cliente_codpostalfisico").val();
              fornecedorformdata.append("cliente_codpostalfisico", cliente_codpostalfisico);

              var cliente_paisfisico=$("#cliente_paisfisico").val();
              fornecedorformdata.append("cliente_paisfisico", cliente_paisfisico);

              var cliente_endpostal=$("#cliente_endpostal").val();
              fornecedorformdata.append("cliente_endpostal", cliente_endpostal);

              var cliente_bairropostal=$("#cliente_bairropostal").val();
              fornecedorformdata.append("cliente_bairropostal", cliente_bairropostal);

              var cliente_cidadepostal=$("#cliente_cidadepostal").val();
              fornecedorformdata.append("cliente_cidadepostal", cliente_cidadepostal);

              var cliente_provinciapostal=$("#cliente_provinciapostal").val();
              fornecedorformdata.append("cliente_provinciapostal", cliente_provinciapostal);

              var cliente_codpostalpostal=$("#cliente_codpostalpostal").val();
              fornecedorformdata.append("cliente_codpostalpostal", cliente_codpostalpostal);

              var cliente_paispostal=$("#cliente_paispostal").val();
              fornecedorformdata.append("cliente_paispostal", cliente_paispostal);

              var dataedicaocliente = new Date();
              fornecedorformdata.append("dataedicaocliente", dataedicaocliente);

              var cliente_termos=$("#cliente_termos").val();
              fornecedorformdata.append("cliente_termos", cliente_termos);

              var contactosArrayCliente = editarContactosArray;
              fornecedorformdata.append("contactosArrayCliente", JSON.stringify(contactosArrayCliente));

                  var xhr = new XMLHttpRequest();
                    // Add any event handlers here...
                    xhr.open('POST',rule, true);
                    xhr.send(fornecedorformdata);

                    setTimeout(function(){
                   window.location.href="/cliente/clientesupplier/supplier_home";
                  }, 1000);

              
            });
          }
    }
});


  // $('#captarSiteInfo').click(function(){
  //   var nomesession = $("#captarSiteInfo").attr("detalhessession");

  //   if(validar()){
  //     $('#yes_no_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  //     $('#yes_no_content_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Deseja realmente gravar a informação ':'Do you really want to save <b>') + (($(".lang-picker > .selected").attr("value")=="pt")?'</b> ?':"</b>?"))
  //     $('#yes_no_modal').openModal({dismissible:false});
  //     $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
  //     $('#yes_btn_modal').click(function(e){
  //       e.stopPropagation();
  //       e.stopImmediatePropagation();

  //        // var nm = document.getElementById("siteinfo_client").value;
  //        // var dadosclientes = JSON.parse($("#contain3").attr("detalhesclientes"));

  //        // var posicaonomecliente = dadosclientes.findIndex(x => x.cliente_nome === nm);

  //        var rule="/manutencao/novositeinfo";
  //        var siteinfoformdata= new FormData();

  //     var siteinfo_clientid=$("#siteinfo_clientid").val();
  //     siteinfoformdata.append("siteinfo_clientid", siteinfo_clientid);

  //     var siteinfo_sitename=$("#siteinfo_sitename").val();
  //     siteinfoformdata.append("siteinfo_sitename", siteinfo_sitename);

  //     var siteinfo_sitenum=$("#siteinfo_sitenum").val();
  //     siteinfoformdata.append("siteinfo_sitenum", siteinfo_sitenum);

  //     var siteinfo_typesite=$("#siteinfo_typesite").val();
  //     if(siteinfo_typesite == null){
  //       siteinfo_typesite = "";
  //     }
  //     siteinfoformdata.append("siteinfo_typesite", siteinfo_typesite);

  //     var siteinfo_phasenum=$("#siteinfo_phasenum").val();
  //     siteinfoformdata.append("siteinfo_phasenum", siteinfo_phasenum);

  //     var siteinfo_siteclassif=$("#siteinfo_siteclassif").val();
  //     siteinfoformdata.append("siteinfo_siteclassif", siteinfo_siteclassif);

  //     var siteinfo_radiotec=$("#siteinfo_radiotec").val();
  //     siteinfoformdata.append("siteinfo_radiotec", siteinfo_radiotec);

  //     var siteinfo_maintoffid=$("#siteinfo_maintoffid").val();
  //     if(siteinfo_maintoffid == null){
  //       siteinfo_maintoffid = "";
  //     }
  //     siteinfoformdata.append("siteinfo_maintoffid", siteinfo_maintoffid);

  //     var siteinfo_techcontactnum=$("#siteinfo_techcontactnum").val();
  //     siteinfoformdata.append("siteinfo_techcontactnum", siteinfo_techcontactnum);

  //     var siteinfo_regiao=$("#siteinfo_regiao").val();
  //     if(siteinfo_regiao == null){
  //       siteinfo_regiao = "";
  //     }
  //     siteinfoformdata.append("siteinfo_regiao", siteinfo_regiao);

  //     var siteinfo_area=$("#siteinfo_area").val();
  //     if(siteinfo_area == null){
  //       siteinfo_area = "";
  //     }
  //     siteinfoformdata.append("siteinfo_area", siteinfo_area);

  //     var siteinfo_regiaoselmec=$("#siteinfo_regiaoselmec").val();
  //     if(siteinfo_regiaoselmec == null){
  //       siteinfo_regiaoselmec = "";
  //     }
  //     siteinfoformdata.append("siteinfo_regiaoselmec", siteinfo_regiaoselmec);

  //     var siteinfo_gps=[];
  //     var siteinfo_gpsObject={};

  //     siteinfo_gpsObject.siteinfo_gpslatitude=$("#siteinfo_gpslatitude").val();
  //     siteinfo_gpsObject.siteinfo_gpslongitude=$("#siteinfo_gpslongitude").val();
  //     siteinfo_gps.push(siteinfo_gpsObject);
  //     siteinfoformdata.append("siteinfo_gps", JSON.stringify(siteinfo_gps));

  //     var siteinfo_planmaintdate=$("#siteinfo_planmaintdate").val();
  //     siteinfoformdata.append("siteinfo_planmaintdate", siteinfo_planmaintdate);

  //     var siteinfo_siteonairdate=$("#siteinfo_siteonairdate").val();
  //     siteinfoformdata.append("siteinfo_siteonairdate", siteinfo_siteonairdate);

  //     var siteinfo_siteannoucdate=$("#siteinfo_siteannoucdate").val();
  //     siteinfoformdata.append("siteinfo_siteannoucdate", siteinfo_siteannoucdate);
      
  //     var siteinfo_twinbts=$("#siteinfo_twinbts").val();
  //     if(siteinfo_twinbts == null){
  //       siteinfo_twinbts = "";
  //     }
  //     siteinfoformdata.append("siteinfo_twinbts", siteinfo_twinbts);

  //     var siteinfo_btslinkedsite=$("#siteinfo_btslinkedsite").val();
  //     if(siteinfo_btslinkedsite == null){
  //       siteinfo_btslinkedsite = "";
  //     }
  //     siteinfoformdata.append("siteinfo_btslinkedsite", siteinfo_btslinkedsite);

  //     //gerador
  //       var siteinfo_generator=$("input[name='siteinfo_generator']:checked").val();
  //       siteinfoformdata.append("siteinfo_generator", siteinfo_generator);

        
  //         var siteinfo_generatorArray = generatorArray;
  //         if(siteinfo_generatorArray.length != 0){

  //           for(var i = 0; i < siteinfo_generatorArray.length; i++){

  //               var siteinfo_generatorhours = siteinfo_generatorArray[i].siteinfo_generatorhours
  //               siteinfoformdata.append("siteinfo_generatorhours", siteinfo_generatorhours);

  //               var siteinfo_generatortype = siteinfo_generatorArray[i].siteinfo_generatortype
  //               siteinfoformdata.append("siteinfo_generatortype", siteinfo_generatortype);

  //               var siteinfo_generatoroutputkw = siteinfo_generatorArray[i].siteinfo_generatoroutputkw
  //               siteinfoformdata.append("siteinfo_generatoroutputkw", siteinfo_generatoroutputkw);

  //               var siteinfo_generatormodelno = siteinfo_generatorArray[i].siteinfo_generatormodelno
  //               siteinfoformdata.append("siteinfo_generatormodelno", siteinfo_generatormodelno);

  //               var siteinfo_generatorengineserialnumber = siteinfo_generatorArray[i].siteinfo_generatorengineserialnumber
  //               siteinfoformdata.append("siteinfo_generatorengineserialnumber", siteinfo_generatorengineserialnumber);

  //               var siteinfo_generatorenginecapacity = siteinfo_generatorArray[i].siteinfo_generatorenginecapacity
  //               siteinfoformdata.append("siteinfo_generatorenginecapacity", siteinfo_generatorenginecapacity);

  //               var siteinfo_generatorstartertype = siteinfo_generatorArray[i].siteinfo_generatorstartertype
  //               siteinfoformdata.append("siteinfo_generatorstartertype", siteinfo_generatorstartertype);

  //               var siteinfo_generatorfuelconsumption = siteinfo_generatorArray[i].siteinfo_generatorfuelconsumption
  //               siteinfoformdata.append("siteinfo_generatorfuelconsumption", siteinfo_generatorfuelconsumption);

  //           }
  //         }
          
          
        

        

  //     //ac
  //       var siteinfo_ac=$("input[name='siteinfo_ac']:checked").val();
  //       siteinfoformdata.append("siteinfo_ac", siteinfo_ac);

  //       // if(siteinfo_ac == "No"){
  //       //    var siteinfo_acArray = [];
  //       //    siteinfoformdata.append("siteinfo_acArray", JSON.stringify(siteinfo_acArray));
  //       // }else{
  //       //  var siteinfo_acArray = acArray;
  //       //   siteinfoformdata.append("siteinfo_acArray", JSON.stringify(siteinfo_acArray));
  //       // }


  //       var siteinfo_acArray = acArray;
  //         if(siteinfo_acArray.length != 0){

  //           for(var i = 0; i < siteinfo_acArray.length; i++){

  //               var siteinfo_acmanufacturer = siteinfo_acArray[i].siteinfo_acmanufacturer
  //               siteinfoformdata.append("siteinfo_acmanufacturer", siteinfo_acmanufacturer);

  //               var siteinfo_actype = siteinfo_acArray[i].siteinfo_actype
  //               siteinfoformdata.append("siteinfo_actype", siteinfo_actype);

  //               var siteinfo_acmodel = siteinfo_acArray[i].siteinfo_acmodel
  //               siteinfoformdata.append("siteinfo_acmodel", siteinfo_acmodel);

  //               var siteinfo_acnumber = siteinfo_acArray[i].siteinfo_acnumber
  //               siteinfoformdata.append("siteinfo_acnumber", siteinfo_acnumber);

  //               var siteinfo_acserialnumber = siteinfo_acArray[i].siteinfo_acserialnumber
  //               siteinfoformdata.append("siteinfo_acserialnumber", siteinfo_acserialnumber);

  //               var siteinfo_acbtu = siteinfo_acArray[i].siteinfo_acbtu
  //               siteinfoformdata.append("siteinfo_acbtu", siteinfo_acbtu);

  //               var siteinfo_accageinstalled = siteinfo_acArray[i].siteinfo_accageinstalled
  //               siteinfoformdata.append("siteinfo_accageinstalled", siteinfo_accageinstalled);

  //               var siteinfo_acsleeveinstalled = siteinfo_acArray[i].siteinfo_acsleeveinstalled
  //               siteinfoformdata.append("siteinfo_acsleeveinstalled", siteinfo_acsleeveinstalled);

  //               var siteinfo_acunitcontrolltype = siteinfo_acArray[i].siteinfo_acunitcontrolltype
  //               siteinfoformdata.append("siteinfo_acunitcontrolltype", siteinfo_acunitcontrolltype);

  //               var siteinfo_accontrollermodel = siteinfo_acArray[i].siteinfo_accontrollermodel
  //               siteinfoformdata.append("siteinfo_accontrollermodel", siteinfo_accontrollermodel);

  //           }
  //         }


  //     //rectifiercabbinet
  //       var siteinfo_rectifiercabinnet=$("input[name='siteinfo_rectifiercabinnet']:checked").val();
  //       siteinfoformdata.append("siteinfo_rectifiercabinnet", siteinfo_rectifiercabinnet);

  //       // if(siteinfo_rectifiercabinnet == "No"){
  //       //    var siteinfo_rectcabArray = [];
  //       //    siteinfoformdata.append("siteinfo_rectcabArray", JSON.stringify(siteinfo_rectcabArray));
  //       // }else{
  //       //  var siteinfo_rectcabArray = rectcabArray;
  //       //  siteinfoformdata.append("siteinfo_rectcabArray", JSON.stringify(siteinfo_rectcabArray));
  //       // }


  //       var siteinfo_rectcabArray = rectcabArray;
  //         if(siteinfo_rectcabArray.length != 0){

  //           for(var i = 0; i < siteinfo_rectcabArray.length; i++){

  //               var siteinfo_rectcabcabinetmodelno = siteinfo_rectcabArray[i].siteinfo_rectcabcabinetmodelno
  //               siteinfoformdata.append("siteinfo_rectcabcabinetmodelno", siteinfo_rectcabcabinetmodelno);

  //               var siteinfo_rectcabcabinetnumber = siteinfo_rectcabArray[i].siteinfo_rectcabcabinetnumber
  //               siteinfoformdata.append("siteinfo_rectcabcabinetnumber", siteinfo_rectcabcabinetnumber);

  //               var siteinfo_rectcabtype = siteinfo_rectcabArray[i].siteinfo_rectcabtype
  //               siteinfoformdata.append("siteinfo_rectcabtype", siteinfo_rectcabtype);

  //               var siteinfo_rectcabinputtype = siteinfo_rectcabArray[i].siteinfo_rectcabinputtype
  //               siteinfoformdata.append("siteinfo_rectcabinputtype", siteinfo_rectcabinputtype);

  //               var siteinfo_rectcabnobatteries = siteinfo_rectcabArray[i].siteinfo_rectcabnobatteries
  //               siteinfoformdata.append("siteinfo_rectcabnobatteries", siteinfo_rectcabnobatteries);

  //               var siteinfo_rectcabbatterycapac = siteinfo_rectcabArray[i].siteinfo_rectcabbatterycapac
  //               siteinfoformdata.append("siteinfo_rectcabbatterycapac", siteinfo_rectcabbatterycapac);

  //           }
  //         }

        

  //     //security
  //       var siteinfo_fencing=$("input[name='siteinfo_fencing']:checked").val();
  //       siteinfoformdata.append("siteinfo_fencing", siteinfo_fencing);

  //       var siteinfo_fencingelectrified=$("input[name='siteinfo_fencingelectrified']:checked").val();
  //       siteinfoformdata.append("siteinfo_fencingelectrified", siteinfo_fencingelectrified);

  //       var siteinfo_guardsite=$("input[name='siteinfo_guardsite']:checked").val();
  //       siteinfoformdata.append("siteinfo_guardsite", siteinfo_guardsite);

  //       // if(siteinfo_guardsite == "No"){
  //       //    var siteinfo_securityArray = [];
  //       //    siteinfoformdata.append("siteinfo_securityArray", JSON.stringify(siteinfo_securityArray));
  //       // }else{
  //       //  var siteinfo_securityArray = securityArray;
  //       //  siteinfoformdata.append("siteinfo_securityArray", JSON.stringify(siteinfo_securityArray));
  //       // }


  //       var siteinfo_securityArray = securityArray;
  //         if(siteinfo_securityArray.length != 0){

  //           for(var i = 0; i < siteinfo_securityArray.length; i++){

  //               var siteinfo_secguardname = siteinfo_securityArray[i].siteinfo_secguardname
  //               siteinfoformdata.append("siteinfo_secguardname", siteinfo_secguardname);

  //               var siteinfo_secbinumber = siteinfo_securityArray[i].siteinfo_secbinumber
  //               siteinfoformdata.append("siteinfo_secbinumber", siteinfo_secbinumber);

  //               var siteinfo_secnib = siteinfo_securityArray[i].siteinfo_secnib
  //               siteinfoformdata.append("siteinfo_secnib", siteinfo_secnib);

  //               var siteinfo_secvalue = siteinfo_securityArray[i].siteinfo_secvalue
  //               siteinfoformdata.append("siteinfo_secvalue", siteinfo_secvalue);

  //           }
  //         }

  //     //electricity
  //     var siteinfo_elecsupptype=$("input[name='siteinfo_elecsupptype']:checked").val();
  //     siteinfoformdata.append("siteinfo_elecsupptype", siteinfo_elecsupptype);

  //     var siteinfo_electype=$("input[name='siteinfo_electype']:checked").val();
  //     siteinfoformdata.append("siteinfo_electype", siteinfo_electype);

  //     var siteinfo_elecpayment=$("#siteinfo_elecpayment").val();
  //     siteinfoformdata.append("siteinfo_elecpayment", siteinfo_elecpayment);

  //     if(siteinfo_elecpayment == "EDM Prepaid/Credelec"){
  //       var siteinfo_credelec=$("#siteinfo_credelec").val();
  //       siteinfoformdata.append("siteinfo_credelec", siteinfo_credelec);
  //     }else{
  //       var siteinfo_credelec="";
  //       siteinfoformdata.append("siteinfo_credelec", siteinfo_credelec);
  //     }

  //     var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
  //     var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
  //     var ano = (new Date()).getFullYear();
  //     // var todaydate = dia + "/" + mes + "/" + ano;
  //     var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

  //     var siteinfo_audittrail = [];
  //     var siteinfo_audittrailObject = {};
  //     siteinfo_audittrailObject.siteinfo_audittrailname = nomesession;
  //     siteinfo_audittrailObject.siteinfo_audittrailaction = "Create Site";
  //     siteinfo_audittrailObject.siteinfo_audittraildate = dia + "/" + mes + "/" + ano + "  " + todayhours;

  //     siteinfo_audittrail.push(siteinfo_audittrailObject);
  //     // siteinfoformdata.append("siteinfo_audittrail", JSON.stringify(siteinfo_audittrail));
      

  //     var xhr = new XMLHttpRequest();
  //     // Add any event handlers here...
  //     xhr.open('POST',rule, true);
  //     xhr.send(siteinfoformdata);

  //     $('#loading').fadeIn().delay(20000).fadeOut();
  //     setTimeout(function(){
  //      window.location.href="/manutencao/siteinfohome";
  //     }, 3000);

  //   });

      

  //   }

  // });

  $('#captarSiteInfo').click(function(){
      var nomesession = $("#captarSiteInfo").attr("detalhessession");

      //DC Fan

      var siteinfo_dcfanInstalled = $("#siteinfo_dcfanInstalled").val();
      // siteinfoformdata.append("siteinfo_dcfanInstalled", siteinfo_dcfanInstalled);

      var siteinfo_dcfanLocation = $("#siteinfo_dcfanLocation").val();
      // siteinfoformdata.append("siteinfo_dcfanLocation", siteinfo_dcfanLocation);

      var siteinfo_dcfanSize = $("#siteinfo_dcfanSize").val();
      // siteinfoformdata.append("siteinfo_dcfanSize", siteinfo_dcfanSize);

      console.log(siteinfo_dcfanInstalled, siteinfo_dcfanLocation, siteinfo_dcfanSize);

      if(validar()){
        $('#yes_no_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#yes_no_content_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Deseja realmente gravar a informação ':'Do you really want to save <b>') + (($(".lang-picker > .selected").attr("value")=="pt")?'</b> ?':"</b>?"))
        $('#yes_no_modal').openModal({dismissible:false});
        $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
        $('#yes_btn_modal').click(function(e){
          e.stopPropagation();
          e.stopImmediatePropagation();

           // var nm = document.getElementById("siteinfo_client").value;
           // var dadosclientes = JSON.parse($("#contain3").attr("detalhesclientes"));

           // var posicaonomecliente = dadosclientes.findIndex(x => x.cliente_nome === nm);

           var rule="/manutencao/novositeinfo";
           var siteinfoformdata= new FormData();

        var siteinfo_clientid=$("#siteinfo_clientid").val();
        siteinfoformdata.append("siteinfo_clientid", siteinfo_clientid);

        var siteinfo_sitename=$("#siteinfo_sitename").val();
        siteinfoformdata.append("siteinfo_sitename", siteinfo_sitename);

        var siteinfo_sitenum=$("#siteinfo_sitenum").val();
        siteinfoformdata.append("siteinfo_sitenum", siteinfo_sitenum);


        // Site Owner
        var siteinfo_siteOwner=$("#siteinfo_siteOwner").val();
        siteinfoformdata.append("siteinfo_siteOwner", siteinfo_siteOwner);
        
        var siteinfo_siteShared=$("#siteinfo_siteShared").val();
        siteinfoformdata.append("siteinfo_siteShared", siteinfo_siteShared);

        var siteinfo_sitePreparedForSharing=$("#siteinfo_sitePreparedForSharing").val();
        siteinfoformdata.append("siteinfo_sitePreparedForSharing", siteinfo_sitePreparedForSharing);

        var siteinfo_siteOwnerOtherInformation=$("#siteinfo_siteOwnerOtherInformation").val();
        siteinfoformdata.append("siteinfo_siteOwnerOtherInformation", siteinfo_siteOwnerOtherInformation);

       
        //DC Fan

        var siteinfo_dcfanInstalled = $("#siteinfo_dcfanInstalled").val();
        siteinfoformdata.append("siteinfo_dcfanInstalled", siteinfo_dcfanInstalled);

        var siteinfo_dcfanLocation = $("#siteinfo_dcfanLocation").val();
        siteinfoformdata.append("siteinfo_dcfanLocation", siteinfo_dcfanLocation);

        var siteinfo_dcfanSize = $("#siteinfo_dcfanSize").val();
        siteinfoformdata.append("siteinfo_dcfanSize", siteinfo_dcfanSize);


        // Mast
        var siteinfo_mastType = $("#siteinfo_mastType").val();
        siteinfoformdata.append("siteinfo_mastType", siteinfo_mastType);

        var siteinfo_mastManufacturer = $("#siteinfo_mastManufacturer").val();
        siteinfoformdata.append("siteinfo_mastManufacturer", siteinfo_mastManufacturer);

        var siteinfo_mastserialno = $("#siteinfo_mastserialno").val();
        siteinfoformdata.append("siteinfo_mastserialno", siteinfo_mastserialno);

        var siteinfo_mastHeight = $("#siteinfo_mastHeight").val();
        siteinfoformdata.append("siteinfo_mastHeight", siteinfo_mastHeight);

        var siteinfo_mastColour = $("#siteinfo_mastColour").val();
        siteinfoformdata.append("siteinfo_mastColour", siteinfo_mastColour);

        var siteinfo_mastOverheadEntry = $("#siteinfo_mastOverheadEntry").val();
        siteinfoformdata.append("siteinfo_mastOverheadEntry", siteinfo_mastOverheadEntry);

        var siteinfo_mastUndergroundEntry = $("#siteinfo_mastUndergroundEntry").val();
        siteinfoformdata.append("siteinfo_mastUndergroundEntry", siteinfo_mastUndergroundEntry);

        var siteinfo_mastGantryType = $("#siteinfo_mastGantryType").val();
        siteinfoformdata.append("siteinfo_mastGantryType", siteinfo_mastGantryType);

        var siteinfo_mastGantryLength = $("#siteinfo_mastGantryLength").val();
        siteinfoformdata.append("siteinfo_mastGantryLength", siteinfo_mastGantryLength);

        var siteinfo_mast110mmSleevesQty = $("#siteinfo_mast110mmSleevesQty").val();
        siteinfoformdata.append("siteinfo_mast110mmSleevesQty", siteinfo_mast110mmSleevesQty);

        var siteinfo_mast110mmSleevesUsed = $("#siteinfo_mast110mmSleevesUsed").val();
        siteinfoformdata.append("siteinfo_mast110mmSleevesUsed", siteinfo_mast110mmSleevesUsed);

        var siteinfo_mast150mmSleevesQty = $("#siteinfo_mast150mmSleevesQty").val();
        siteinfoformdata.append("siteinfo_mast150mmSleevesQty", siteinfo_mast150mmSleevesQty);

        var siteinfo_mast150mmSleevesUsed = $("#siteinfo_mast150mmSleevesUsed").val();
        siteinfoformdata.append("siteinfo_mast150mmSleevesUsed", siteinfo_mast150mmSleevesUsed);

        var siteinfo_mastOtherSizeSleevesQty = $("#siteinfo_mastOtherSizeSleevesQty").val();
        siteinfoformdata.append("siteinfo_mastOtherSizeSleevesQty", siteinfo_mastOtherSizeSleevesQty);

        var siteinfo_mastOtherSizeSleevesUsed = $("#siteinfo_mastOtherSizeSleevesUsed").val();
        siteinfoformdata.append("siteinfo_mastOtherSizeSleevesUsed", siteinfo_mastOtherSizeSleevesUsed);

        var siteinfo_mastDrainsatBottom = $("#siteinfo_mastDrainsatBottom").val();
        siteinfoformdata.append("siteinfo_mastDrainsatBottom", siteinfo_mastDrainsatBottom);

        var siteinfo_mastLightsfittingType = $("#siteinfo_mastLightsfittingType").val();
        siteinfoformdata.append("siteinfo_mastLightsfittingType", siteinfo_mastLightsfittingType);

        var siteinfo_mastLightGlobeType = $("#siteinfo_mastLightGlobeType").val();
        siteinfoformdata.append("siteinfo_mastLightGlobeType", siteinfo_mastLightGlobeType);

        var siteinfo_mastLightGlobeQty = $("#siteinfo_mastLightGlobeQty").val();
        siteinfoformdata.append("siteinfo_mastLightGlobeQty", siteinfo_mastLightGlobeQty);

        var siteinfo_mastLightSwitchInstalled = $("#siteinfo_mastLightSwitchInstalled").val();
        siteinfoformdata.append("siteinfo_mastLightSwitchInstalled", siteinfo_mastLightSwitchInstalled);

        var siteinfo_mastLightSwitchType = $("#siteinfo_mastLightSwitchType").val();
        siteinfoformdata.append("siteinfo_mastLightSwitchType", siteinfo_mastLightSwitchType);

        var siteinfo_mastAircraftLightFittingType = $("#siteinfo_mastAircraftLightFittingType").val();
        siteinfoformdata.append("siteinfo_mastAircraftLightFittingType", siteinfo_mastAircraftLightFittingType);

        var siteinfo_mastAircraftGlobeType = $("#siteinfo_mastAircraftGlobeType").val();
        siteinfoformdata.append("siteinfo_mastAircraftGlobeType", siteinfo_mastAircraftGlobeType);

        var siteinfo_mastAircraftWarningLightGlobeQty = $("#siteinfo_mastAircraftWarningLightGlobeQty").val();
        siteinfoformdata.append("siteinfo_mastAircraftWarningLightGlobeQty", siteinfo_mastAircraftWarningLightGlobeQty);

        var siteinfo_mastBottomDBInstalled = $("#siteinfo_mastBottomDBInstalled").val();
        siteinfoformdata.append("siteinfo_mastBottomDBInstalled", siteinfo_mastBottomDBInstalled);

        var siteinfo_mastBottomDBType = $("#siteinfo_mastBottomDBType").val();
        siteinfoformdata.append("siteinfo_mastBottomDBType", siteinfo_mastBottomDBType);

        var siteinfo_mastCircuitBreakerForAwl = $("#siteinfo_mastCircuitBreakerForAwl").val();
        siteinfoformdata.append("siteinfo_mastCircuitBreakerForAwl", siteinfo_mastCircuitBreakerForAwl);

        var siteinfo_mastCircuitBreakerForAWLQty = $("#siteinfo_mastCircuitBreakerForAWLQty").val();
        siteinfoformdata.append("siteinfo_mastCircuitBreakerForAWLQty", siteinfo_mastCircuitBreakerForAWLQty);

        var siteinfo_mastCircuitBreakerInternalLights = $("#siteinfo_mastCircuitBreakerInternalLights").val();
        siteinfoformdata.append("siteinfo_mastCircuitBreakerInternalLights", siteinfo_mastCircuitBreakerInternalLights);

        var siteinfo_mastCircuitBreakerInternalLightsQty = $("#siteinfo_mastCircuitBreakerInternalLightsQty").val();
        siteinfoformdata.append("siteinfo_mastCircuitBreakerInternalLightsQty", siteinfo_mastCircuitBreakerInternalLightsQty);

        var siteinfo_mastLightingArrestorsInstalled = $("#siteinfo_mastLightingArrestorsInstalled").val();
        siteinfoformdata.append("siteinfo_mastLightingArrestorsInstalled", siteinfo_mastLightingArrestorsInstalled);

        var siteinfo_mastCircuitBreakerArrestors = $("#siteinfo_mastCircuitBreakerArrestors").val();
        siteinfoformdata.append("siteinfo_mastCircuitBreakerArrestors", siteinfo_mastCircuitBreakerArrestors);

        var siteinfo_mastCircuitBreakerArrestorsQty = $("#siteinfo_mastCircuitBreakerArrestorsQty").val();
        siteinfoformdata.append("siteinfo_mastCircuitBreakerArrestorsQty", siteinfo_mastCircuitBreakerArrestorsQty);

        var siteinfo_mastTopDBInstalled = $("#siteinfo_mastTopDBInstalled").val();
        siteinfoformdata.append("siteinfo_mastTopDBInstalled", siteinfo_mastTopDBInstalled);

        var siteinfo_mastTopDBType = $("#siteinfo_mastTopDBType").val();
        siteinfoformdata.append("siteinfo_mastTopDBType", siteinfo_mastTopDBType);

        var siteinfo_mastTopTipoSwitch = $("#siteinfo_mastTopTipoSwitch").val();
        siteinfoformdata.append("siteinfo_mastTopTipoSwitch", siteinfo_mastTopTipoSwitch);

        var siteinfo_mastIntermediate = $("#siteinfo_mastIntermediate").val();
        siteinfoformdata.append("siteinfo_mastIntermediate", siteinfo_mastIntermediate);

        var siteinfo_mastIntermediateType = $("#siteinfo_mastIntermediateType").val();
        siteinfoformdata.append("siteinfo_mastIntermediateType", siteinfo_mastIntermediateType);

        var siteinfo_mastTopintermediateswitchtype = $("#siteinfo_mastTopintermediateswitchtype").val();
        siteinfoformdata.append("siteinfo_mastTopintermediateswitchtype", siteinfo_mastTopintermediateswitchtype);

        var siteinfo_mastIntermediateFittingQty = $("#siteinfo_mastIntermediateFittingQty").val();
        siteinfoformdata.append("siteinfo_mastIntermediateFittingQty", siteinfo_mastIntermediateFittingQty);

        var siteinfo_mastIntermediateFittingType = $("#siteinfo_mastIntermediateFittingType").val();
        siteinfoformdata.append("siteinfo_mastIntermediateFittingType", siteinfo_mastIntermediateFittingType);

        var siteinfo_mastTopGlobeType = $("#siteinfo_mastTopGlobeType").val();
        siteinfoformdata.append("siteinfo_mastTopGlobeType", siteinfo_mastTopGlobeType);

        var siteinfo_mastTopAWLLightsEarthLeakage = $("#siteinfo_mastTopAWLLightsEarthLeakage").val();
        siteinfoformdata.append("siteinfo_mastTopAWLLightsEarthLeakage", siteinfo_mastTopAWLLightsEarthLeakage);

        var siteinfo_mastTopFallArrestInstalled = $("#siteinfo_mastTopFallArrestInstalled").val();
        siteinfoformdata.append("siteinfo_mastTopFallArrestInstalled", siteinfo_mastTopFallArrestInstalled);

        var siteinfo_mastTopFallArrestQty = $("#siteinfo_mastTopFallArrestQty").val();
        siteinfoformdata.append("siteinfo_mastTopFallArrestQty", siteinfo_mastTopFallArrestQty);

        var siteinfo_mastTopTypeOfLock = $("#siteinfo_mastTopTypeOfLock").val();
        siteinfoformdata.append("siteinfo_mastTopTypeOfLock", siteinfo_mastTopTypeOfLock);

        var siteinfo_mastTopSpineSupportPipes = $("#siteinfo_mastTopSpineSupportPipes").val();
        siteinfoformdata.append("siteinfo_mastTopSpineSupportPipes", siteinfo_mastTopSpineSupportPipes);

        var siteinfo_mastTopSpineSupportPipesQty = $("#siteinfo_mastTopSpineSupportPipesQty").val();
        siteinfoformdata.append("siteinfo_mastTopSpineSupportPipesQty", siteinfo_mastTopSpineSupportPipesQty);

        var siteinfo_mastTopOtherInformation = $("#siteinfo_mastTopOtherInformation").val();
        siteinfoformdata.append("siteinfo_mastTopOtherInformation", siteinfo_mastTopOtherInformation);


       

        //Internal DB

        var siteinfo_internaldb=$("input[name='siteinfo_internaldb']:checked").val();
        console.log(siteinfo_internaldb);
        siteinfoformdata.append("siteinfo_internaldb", siteinfo_internaldb);
        
        var siteinfo_internaldbArray = internaldbArray;
        if (siteinfo_internaldbArray.length != 0) {
          for (let i = 0; i < siteinfo_internaldbArray.length; i++) {
            
            var siteinfo_internaldbtype = $("#siteinfo_internaldbtype").val();
            siteinfoformdata.append("siteinfo_internaldbtype", siteinfo_internaldbtype);
            
            var siteinfo_internaldbPhase = $("#siteinfo_internaldbPhase").val();
            siteinfoformdata.append("siteinfo_internaldbPhase", siteinfo_internaldbPhase);

            var siteinfo_internaldbmaincircuitbreaker = $("#siteinfo_internaldbmaincircuitbreaker").val();
            siteinfoformdata.append("siteinfo_internaldbmaincircuitbreaker", siteinfo_internaldbmaincircuitbreaker);

            var siteinfo_internaldbsurgeArrestorType = $("#siteinfo_internaldbsurgeArrestorType").val();
            siteinfoformdata.append("siteinfo_internaldbsurgeArrestorType", siteinfo_internaldbsurgeArrestorType);

            var siteinfo_internaldbsurgeArrestorQty = $("#siteinfo_internaldbsurgeArrestorQty").val();
            siteinfoformdata.append("siteinfo_internaldbsurgeArrestorQty", siteinfo_internaldbsurgeArrestorQty);

            var siteinfo_internaldbsurgeArrestorType2 = $("#siteinfo_internaldbsurgeArrestorType2").val();
            siteinfoformdata.append("siteinfo_internaldbsurgeArrestorType2", siteinfo_internaldbsurgeArrestorType2);

            var siteinfo_internaldbsurgeArrestorQty2 = $("#siteinfo_internaldbsurgeArrestorQty2").val();
            siteinfoformdata.append("siteinfo_internaldbsurgeArrestorQty2", siteinfo_internaldbsurgeArrestorQty2);

            var siteinfo_internaldbcurrentmonitorType = $("#siteinfo_internaldbcurrentmonitorType").val();
            siteinfoformdata.append("siteinfo_internaldbcurrentmonitorType", siteinfo_internaldbcurrentmonitorType);

            var siteinfo_internaldbCurrentMonitorQty = $("#siteinfo_internaldbCurrentMonitorQty").val();
            siteinfoformdata.append("siteinfo_internaldbCurrentMonitorQty", siteinfo_internaldbCurrentMonitorQty);

            var siteinfo_internaldbEarthLeakageDevice = $("#siteinfo_internaldbEarthLeakageDevice").val();
            siteinfoformdata.append("siteinfo_internaldbEarthLeakageDevice", siteinfo_internaldbEarthLeakageDevice);

            var siteinfo_internaldbEarthLeakageDeviceQty = $("#siteinfo_internaldbEarthLeakageDeviceQty").val();
            siteinfoformdata.append("siteinfo_internaldbEarthLeakageDeviceQty", siteinfo_internaldbEarthLeakageDeviceQty);

            var siteinfo_internaldbCircuitBreakerforRectifier = $("#siteinfo_internaldbCircuitBreakerforRectifier").val();
            siteinfoformdata.append("siteinfo_internaldbCircuitBreakerforRectifier", siteinfo_internaldbCircuitBreakerforRectifier);

            var siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty = $("#siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty").val();
            siteinfoformdata.append("siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty", siteinfo_internaldbinternaldbCircuitBreakerforRectifierQty);

            var siteinfo_internaldbCircuitBreakerforAirconditioners = $("#siteinfo_internaldbCircuitBreakerforAirconditioners").val();
            siteinfoformdata.append("siteinfo_internaldbCircuitBreakerforAirconditioners", siteinfo_internaldbCircuitBreakerforAirconditioners);

            var siteinfo_internaldbCircuitBreakerforAirconditionersQty = $("#siteinfo_internaldbCircuitBreakerforAirconditionersQty").val();
            siteinfoformdata.append("siteinfo_internaldbCircuitBreakerforAirconditionersQty", siteinfo_internaldbCircuitBreakerforAirconditionersQty);

            var siteinfo_internaldbCircuitBreakerforPlugs = $("#siteinfo_internaldbCircuitBreakerforPlugs").val();
            siteinfoformdata.append("siteinfo_internaldbCircuitBreakerforPlugs", siteinfo_internaldbCircuitBreakerforPlugs);

            var siteinfo_internaldbCircuitBreakerforPlugsQty = $("#siteinfo_internaldbCircuitBreakerforPlugsQty").val();
            siteinfoformdata.append("siteinfo_internaldbCircuitBreakerforPlugsQty", siteinfo_internaldbCircuitBreakerforPlugsQty);

            var siteinfo_internaldbMastInternalLight = $("#siteinfo_internaldbMastInternalLight").val();
            siteinfoformdata.append("siteinfo_internaldbMastInternalLight", siteinfo_internaldbMastInternalLight);

            var siteinfo_internaldb_internaldbMastInternalLightQty = $("#siteinfo_internaldb_internaldbMastInternalLightQty").val();
            siteinfoformdata.append("siteinfo_internaldb_internaldbMastInternalLightQty", siteinfo_internaldb_internaldbMastInternalLightQty);

            var siteinfo_internaldbContainerLight = $("#siteinfo_internaldbContainerLight").val();
            siteinfoformdata.append("siteinfo_internaldbContainerLight", siteinfo_internaldbContainerLight);

            var siteinfo_internaldbContainerLightQty = $("#siteinfo_internaldbContainerLightQty").val();
            siteinfoformdata.append("siteinfo_internaldbContainerLightQty", siteinfo_internaldbContainerLightQty);

            var siteinfo_internaldbSiteLight = $("#siteinfo_internaldbSiteLight").val();
            siteinfoformdata.append("siteinfo_internaldbSiteLight", siteinfo_internaldbSiteLight);

            var siteinfo_internaldbSiteLightQty = $("#siteinfo_internaldbSiteLightQty").val();
            siteinfoformdata.append("siteinfo_internaldbSiteLightQty", siteinfo_internaldbSiteLightQty);

            var siteinfo_internaldbAircraftWarningLight = $("#siteinfo_internaldbAircraftWarningLight").val();
            siteinfoformdata.append("siteinfo_internaldbAircraftWarningLight", siteinfo_internaldbAircraftWarningLight);

            var siteinfo_internaldbAircraftWarningLightQty = $("#siteinfo_internaldbAircraftWarningLightQty").val();
            siteinfoformdata.append("siteinfo_internaldbAircraftWarningLightQty", siteinfo_internaldbAircraftWarningLightQty);

            var siteinfo_internaldbCircuitBreakerSpareType = $("#siteinfo_internaldbCircuitBreakerSpareType").val();
            siteinfoformdata.append("siteinfo_internaldbCircuitBreakerSpareType", siteinfo_internaldbCircuitBreakerSpareType);

            var siteinfo_internaldbCircuitBreakerSpareTypeQty = $("#siteinfo_internaldbCircuitBreakerSpareTypeQty").val();
            siteinfoformdata.append("siteinfo_internaldbCircuitBreakerSpareTypeQty", siteinfo_internaldbCircuitBreakerSpareTypeQty);
            
          }
        }

        

        //External DB

        var siteinfo_externaldb=$("input[name='siteinfo_externaldb']:checked").val();
        console.log(siteinfo_externaldb);
        siteinfoformdata.append("siteinfo_externaldb", siteinfo_externaldb);
        
        var siteinfo_externaldbArray = externaldbArray;
        if (siteinfo_externaldbArray.length != 0) {
          for (let i = 0; i < siteinfo_externaldbArray.length; i++) {
            
            var siteinfo_externaldbtype = $("#siteinfo_externaldbtype").val();
            siteinfoformdata.append("siteinfo_externaldbtype", siteinfo_externaldbtype);

            var siteinfo_externaldbSharing = $("#siteinfo_externaldbSharing").val();
            siteinfoformdata.append("siteinfo_externaldbSharing", siteinfo_externaldbSharing);

            var siteinfo_externaldbPhase = $("#siteinfo_externaldbPhase").val();
            siteinfoformdata.append("siteinfo_externaldbPhase", siteinfo_externaldbPhase);

            var siteinfo_externaldbGeneratorPlug = $("#siteinfo_externaldbGeneratorPlug").val();
            siteinfoformdata.append("siteinfo_externaldbGeneratorPlug", siteinfo_externaldbGeneratorPlug);

            var siteinfo_externaldbmainIncomingIsolator = $("#siteinfo_externaldbmainIncomingIsolator").val();
            siteinfoformdata.append("siteinfo_externaldbmainIncomingIsolator", siteinfo_externaldbmainIncomingIsolator);

            var siteinfo_externaldbneutralbarsqty = $("#siteinfo_externaldbneutralbarsqty").val();
            siteinfoformdata.append("siteinfo_externaldbneutralbarsqty", siteinfo_externaldbneutralbarsqty);

            var siteinfo_externalPowerMonitorRelay = $("#siteinfo_externalPowerMonitorRelay").val();
            siteinfoformdata.append("siteinfo_externalPowerMonitorRelay", siteinfo_externalPowerMonitorRelay);

            var siteinfo_externalPowerMonitorRelayType = $("#siteinfo_externalPowerMonitorRelayType").val();
            siteinfoformdata.append("siteinfo_externalPowerMonitorRelayType", siteinfo_externalPowerMonitorRelayType);

            var siteinfo_externaldbSurgeArrestors = $("#siteinfo_externaldbSurgeArrestors").val();
            siteinfoformdata.append("siteinfo_externaldbSurgeArrestors", siteinfo_externaldbSurgeArrestors);

            var siteinfo_externaldbSurgeArrestorsType = $("#siteinfo_externaldbSurgeArrestorsType").val();
            siteinfoformdata.append("siteinfo_externaldbSurgeArrestorsType", siteinfo_externaldbSurgeArrestorsType);

            var siteinfo_externaldbCbForSharingParty = $("#siteinfo_externaldbCbForSharingParty").val();
            siteinfoformdata.append("siteinfo_externaldbCbForSharingParty", siteinfo_externaldbCbForSharingParty);

            var siteinfo_externaldbCbForSharingPartyType = $("#siteinfo_externaldbCbForSharingPartyType").val();
            siteinfoformdata.append("siteinfo_externaldbCbForSharingPartyType", siteinfo_externaldbCbForSharingPartyType);
            
            var siteinfo_externaldbKwhmeterForSharingParty = $("#siteinfo_externaldbKwhmeterForSharingParty").val();
            siteinfoformdata.append("siteinfo_externaldbKwhmeterForSharingParty", siteinfo_externaldbKwhmeterForSharingParty);

            var siteinfo_externaldbKwhmeterForSharingPartyType = $("#siteinfo_externaldbKwhmeterForSharingPartyType").val();
            siteinfoformdata.append("siteinfo_externaldbKwhmeterForSharingPartyType", siteinfo_externaldbKwhmeterForSharingPartyType);

            var siteinfo_externaldbForConstructionParty = $("#siteinfo_externaldbForConstructionParty").val();
            siteinfoformdata.append("siteinfo_externaldbForConstructionParty", siteinfo_externaldbForConstructionParty);

            var siteinfo_externaldbForConstructionPartyType = $("#siteinfo_externaldbForConstructionPartyType").val();
            siteinfoformdata.append("siteinfo_externaldbForConstructionPartyType", siteinfo_externaldbForConstructionPartyType);
            
            var siteinfo_externaldbForVdcInternaldb = $("#siteinfo_externaldbForVdcInternaldb").val();
            siteinfoformdata.append("siteinfo_externaldbForVdcInternaldb", siteinfo_externaldbForVdcInternaldb);

            var siteinfo_externaldbForVdcInternaldbType = $("#siteinfo_externaldbForVdcInternaldbType").val();
            siteinfoformdata.append("siteinfo_externaldbForVdcInternaldbType", siteinfo_externaldbForVdcInternaldbType);

            var siteinfo_externaldbForSiteLight = $("#siteinfo_externaldbForSiteLight").val();
            siteinfoformdata.append("siteinfo_externaldbForSiteLight", siteinfo_externaldbForSiteLight);

            var siteinfo_externaldbForSiteLightType = $("#siteinfo_externaldbForSiteLightType").val();
            siteinfoformdata.append("siteinfo_externaldbForSiteLightType", siteinfo_externaldbForSiteLightType);

            var siteinfo_externaldbForAwLight = $("#siteinfo_externaldbForAwLight").val();
            siteinfoformdata.append("siteinfo_externaldbForAwLight", siteinfo_externaldbForAwLight);

            var siteinfo_externaldbForAwLightType = $("#siteinfo_externaldbForAwLightType").val();
            siteinfoformdata.append("siteinfo_externaldbForAwLightType", siteinfo_externaldbForAwLightType);

            var siteinfo_externaldbForMobileGen = $("#siteinfo_externaldbForMobileGen").val();
            siteinfoformdata.append("siteinfo_externaldbForMobileGen", siteinfo_externaldbForMobileGen);

            var siteinfo_externaldbForMobileGenType = $("#siteinfo_externaldbForMobileGenType").val();
            siteinfoformdata.append("siteinfo_externaldbForMobileGenType", siteinfo_externaldbForMobileGenType);

            var siteinfo_externaldbForGenPhaseMonitor = $("#siteinfo_externaldbForGenPhaseMonitor").val();
            siteinfoformdata.append("siteinfo_externaldbForGenPhaseMonitor", siteinfo_externaldbForGenPhaseMonitor);

            var siteinfo_externaldbForGenPhaseMonitorType = $("#siteinfo_externaldbForGenPhaseMonitorType").val();
            siteinfoformdata.append("siteinfo_externaldbForGenPhaseMonitorType", siteinfo_externaldbForGenPhaseMonitorType);

            var siteinfo_externaldbForControlFuseforGen = $("#siteinfo_externaldbForControlFuseforGen").val();
            siteinfoformdata.append("siteinfo_externaldbForControlFuseforGen", siteinfo_externaldbForControlFuseforGen);

            var siteinfo_externaldbForControlFuseforGenType = $("#siteinfo_externaldbForControlFuseforGenType").val();
            siteinfoformdata.append("siteinfo_externaldbForControlFuseforGenType", siteinfo_externaldbForControlFuseforGenType);

            var siteinfo_externaldbForControlFuseRating = $("#siteinfo_externaldbForControlFuseRating").val();
            siteinfoformdata.append("siteinfo_externaldbForControlFuseRating", siteinfo_externaldbForControlFuseRating);

            var siteinfo_externaldbForFeedCable = $("#siteinfo_externaldbForFeedCable").val();
            siteinfoformdata.append("siteinfo_externaldbForFeedCable", siteinfo_externaldbForFeedCable);

            var siteinfo_externaldbForFeedCableLength = $("#siteinfo_externaldbForFeedCableLength").val();
            siteinfoformdata.append("siteinfo_externaldbForFeedCableLength", siteinfo_externaldbForFeedCableLength);

            var siteinfo_externaldbForCableToVm = $("#siteinfo_externaldbForCableToVm").val();
            siteinfoformdata.append("siteinfo_externaldbForCableToVm", siteinfo_externaldbForCableToVm);

            var siteinfo_externaldbForCableToVmLength = $("#siteinfo_externaldbForCableToVmLength").val();
            siteinfoformdata.append("siteinfo_externaldbForCableToVmLength", siteinfo_externaldbForCableToVmLength);

            var siteinfo_externaldbAwlSurgeArrestor = $("#siteinfo_externaldbAwlSurgeArrestor").val();
            siteinfoformdata.append("siteinfo_externaldbAwlSurgeArrestor", siteinfo_externaldbAwlSurgeArrestor);

            var siteinfo_externaldbAwlSurgeArrestorType = $("#siteinfo_externaldbAwlSurgeArrestorType").val();
            siteinfoformdata.append("siteinfo_externaldbAwlSurgeArrestorType", siteinfo_externaldbAwlSurgeArrestorType);

            var siteinfo_externaldbAwlSurgeArrestorQty = $("#siteinfo_externaldbAwlSurgeArrestorQty").val();
            siteinfoformdata.append("siteinfo_externaldbAwlSurgeArrestorQty", siteinfo_externaldbAwlSurgeArrestorQty);

            var siteinfo_externaldbCurrentMonitor = $("#siteinfo_externaldbCurrentMonitor").val();
            siteinfoformdata.append("siteinfo_externaldbCurrentMonitor", siteinfo_externaldbCurrentMonitor);

            var siteinfo_externaldbCurrentMonitorType = $("#siteinfo_externaldbCurrentMonitorType").val();
            siteinfoformdata.append("siteinfo_externaldbCurrentMonitorType", siteinfo_externaldbCurrentMonitorType);

            var siteinfo_externaldbChangeContactors = $("#siteinfo_externaldbChangeContactors").val();
            siteinfoformdata.append("siteinfo_externaldbChangeContactors", siteinfo_externaldbChangeContactors);

            
          }
        }


      //Distribution Rack

      var siteinfo_distributionRackInstalled=$("input[name='siteinfo_distributionRackInstalled']:checked").val();
      console.log(siteinfo_distributionRackInstalled);
      siteinfoformdata.append("siteinfo_distributionRackInstalled", siteinfo_distributionRackInstalled);
      
      var siteinfo_distributionrackArray = distributionrackArray;
      if (siteinfo_distributionrackArray.length != 0) {
        for (let i = 0; i < siteinfo_distributionrackArray.length; i++) {
          
          var siteinfo_distribuitionRackInverters = $("#siteinfo_distribuitionRackInverters").val();
          siteinfoformdata.append("siteinfo_distribuitionRackInverters", siteinfo_distribuitionRackInverters);

          var siteinfo_distribuitionRackInvertersType = $("#siteinfo_distribuitionRackInvertersType").val();
          siteinfoformdata.append("siteinfo_distribuitionRackInvertersType", siteinfo_distribuitionRackInvertersType);

          var siteinfo_distribuitionRackVaRating = $("#siteinfo_distribuitionRackVaRating").val();
          siteinfoformdata.append("siteinfo_distribuitionRackVaRating", siteinfo_distribuitionRackVaRating);

          var siteinfo_distribuitionRackInvertQty = $("#siteinfo_distribuitionRackInvertQty").val();
          siteinfoformdata.append("siteinfo_distribuitionRackInvertQty", siteinfo_distribuitionRackInvertQty);

          var siteinfo_distribuitionRackDcInput = $("#siteinfo_distribuitionRackDcInput").val();
          siteinfoformdata.append("siteinfo_distribuitionRackDcInput", siteinfo_distribuitionRackDcInput);

          var siteinfo_distribuitionRackACOutput = $("#siteinfo_distribuitionRackACOutput").val();
          siteinfoformdata.append("siteinfo_distribuitionRackACOutput", siteinfo_distribuitionRackACOutput);

          var siteinfo_distribuitionRackRedudancyctrller = $("#siteinfo_distribuitionRackRedudancyctrller").val();
          siteinfoformdata.append("siteinfo_distribuitionRackRedudancyctrller", siteinfo_distribuitionRackRedudancyctrller);
        }
      }


      //Transmission Cabinet

      var siteinfo_transmissioncabInstalled=$("input[name='siteinfo_transmissioncab']:checked").val();
      console.log(siteinfo_transmissioncabInstalled);
      siteinfoformdata.append("siteinfo_transmissioncabInstalled", siteinfo_transmissioncabInstalled);
      
      var siteinfo_transmissioncabArray = transmissioncabArray;
      if (siteinfo_transmissioncabArray.length != 0) {
        for (let i = 0; i < siteinfo_transmissioncabArray.length; i++) {
          
          var siteinfo_transmissioncabType = $("#siteinfo_transmissioncabType").val();
          siteinfoformdata.append("siteinfo_transmissioncabType", siteinfo_transmissioncabType);

          var siteinfo_transmissioncabServiceProvider = $("#siteinfo_transmissioncabServiceProvider").val();
          siteinfoformdata.append("siteinfo_transmissioncabServiceProvider", siteinfo_transmissioncabServiceProvider);

          var siteinfo_transmissioncabQty = $("#siteinfo_transmissioncabQty").val();
          siteinfoformdata.append("siteinfo_transmissioncabQty", siteinfo_transmissioncabQty);

        }
      }


        //Additional Transformer

        var siteinfo_additionaltransformers=$("input[name='siteinfo_additionaltransformers']:checked").val();
        console.log(siteinfo_additionaltransformers);
        siteinfoformdata.append("siteinfo_additionaltransformers", siteinfo_additionaltransformers);
        
        var siteinfo_additionaltransformersArray = additionaltransformersArray;
        if (siteinfo_additionaltransformersArray.length != 0) {
          for (let i = 0; i < siteinfo_additionaltransformersArray.length; i++) {
            
            var siteinfo_additionaltransformersType = $("#siteinfo_additionaltransformersType").val();
            siteinfoformdata.append("siteinfo_additionaltransformersType", siteinfo_additionaltransformersType);

            var siteinfo_additionaltransformersSerialNo = $("#siteinfo_additionaltransformersSerialNo").val();
            siteinfoformdata.append("siteinfo_additionaltransformersSerialNo", siteinfo_additionaltransformersSerialNo);

            var siteinfo_additionaltransformersManufacturedDate = $("#siteinfo_additionaltransformersManufacturedDate").val();
            siteinfoformdata.append("siteinfo_additionaltransformersManufacturedDate", siteinfo_additionaltransformersManufacturedDate);

            var siteinfo_additionaltransformersCable = $("#siteinfo_additionaltransformersCable").val();
            siteinfoformdata.append("siteinfo_additionaltransformersCable", siteinfo_additionaltransformersCable);

            var siteinfo_additionaltransformersCableLength = $("#siteinfo_additionaltransformersCableLength").val();
            siteinfoformdata.append("siteinfo_additionaltransformersCableLength", siteinfo_additionaltransformersCableLength);

            var siteinfo_additionaltransformersdataFrequency = $("#siteinfo_additionaltransformersdataFrequency").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataFrequency", siteinfo_additionaltransformersdataFrequency);

            var siteinfo_additionaltransformersdataRating = $("#siteinfo_additionaltransformersdataRating").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataRating", siteinfo_additionaltransformersdataRating);

            var siteinfo_additionaltransformersdataPrimaryVoltage = $("#siteinfo_additionaltransformersdataPrimaryVoltage").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataPrimaryVoltage", siteinfo_additionaltransformersdataPrimaryVoltage);

            var siteinfo_additionaltransformersdataPrimaryAmpere = $("#siteinfo_additionaltransformersdataPrimaryAmpere").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataPrimaryAmpere", siteinfo_additionaltransformersdataPrimaryAmpere);

            var siteinfo_additionaltransformersdataSecondaryVoltage = $("#siteinfo_additionaltransformersdataSecondaryVoltage").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataSecondaryVoltage", siteinfo_additionaltransformersdataSecondaryVoltage);

            var siteinfo_additionaltransformersdataSecondaryAmpere = $("#siteinfo_additionaltransformersdataSecondaryAmpere").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataSecondaryAmpere", siteinfo_additionaltransformersdataSecondaryAmpere);

            var siteinfo_additionaltransformersdataImpendance = $("#siteinfo_additionaltransformersdataImpendance").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataImpendance", siteinfo_additionaltransformersdataImpendance);

            var siteinfo_additionaltransformersdataSymbol = $("#siteinfo_additionaltransformersdataSymbol").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataSymbol", siteinfo_additionaltransformersdataSymbol);

            var siteinfo_additionaltransformersdataOtherInfo = $("#siteinfo_additionaltransformersdataOtherInfo").val();
            siteinfoformdata.append("siteinfo_additionaltransformersdataOtherInfo", siteinfo_additionaltransformersdataOtherInfo);

            
          }
        }




        //Power Container
        var siteinfo_powercontainerManufacturerSerialNo = $("#siteinfo_powercontainerManufacturerSerialNo").val();
        siteinfoformdata.append("siteinfo_powercontainerManufacturerSerialNo", siteinfo_powercontainerManufacturerSerialNo);

        var siteinfo_powercontainerSize = $("#siteinfo_powercontainerSize").val();
        siteinfoformdata.append("siteinfo_powercontainerSize", siteinfo_powercontainerSize);

        var siteinfo_powercontainerBatteryAhCapacity = $("#siteinfo_powercontainerBatteryAhCapacity").val();
        siteinfoformdata.append("siteinfo_powercontainerBatteryAhCapacity", siteinfo_powercontainerBatteryAhCapacity);

        var siteinfo_powercontainerBatteryAhQty = $("#siteinfo_powercontainerBatteryAhQty").val();
        siteinfoformdata.append("siteinfo_powercontainerBatteryAhQty", siteinfo_powercontainerBatteryAhQty);

        var siteinfo_powercontainerAlarm = $("#siteinfo_powercontainerAlarm").val();
        siteinfoformdata.append("siteinfo_powercontainerAlarm", siteinfo_powercontainerAlarm);

        var siteinfo_powercontainerFanType = $("#siteinfo_powercontainerFanType").val();
        siteinfoformdata.append("siteinfo_powercontainerFanType", siteinfo_powercontainerFanType);

        var siteinfo_powercontainerFanQty = $("#siteinfo_powercontainerFanQty").val();
        siteinfoformdata.append("siteinfo_powercontainerFanQty", siteinfo_powercontainerFanQty);

        var siteinfo_powercontainerRectifier1 = $("#siteinfo_powercontainerRectifier1").val();
        siteinfoformdata.append("siteinfo_powercontainerRectifier1", siteinfo_powercontainerRectifier1);

        var siteinfo_powercontainerRectifier1Qty = $("#siteinfo_powercontainerRectifier1Qty").val();
        siteinfoformdata.append("siteinfo_powercontainerRectifier1Qty", siteinfo_powercontainerRectifier1Qty);

        var siteinfo_powercontainerRectifier2 = $("#siteinfo_powercontainerRectifier2").val();
        siteinfoformdata.append("siteinfo_powercontainerRectifier2", siteinfo_powercontainerRectifier2);

        var siteinfo_powercontainerRectifier2Qty = $("#siteinfo_powercontainerRectifier2Qty").val();
        siteinfoformdata.append("siteinfo_powercontainerRectifier2Qty", siteinfo_powercontainerRectifier2Qty);

        var siteinfo_powercontainerOtherInfo = $("#siteinfo_powercontainerOtherInfo").val();
        siteinfoformdata.append("siteinfo_powercontainerOtherInfo", siteinfo_powercontainerOtherInfo);

        
        // Security Fencing
        var siteinfo_securityFencetype=$("#siteinfo_securityFencetype").val();
        siteinfoformdata.append("siteinfo_securityFencetype", siteinfo_securityFencetype);

        var siteinfo_securityFencecolour=$("#siteinfo_securityFencecolour").val();
        siteinfoformdata.append("siteinfo_securityFencecolour", siteinfo_securityFencecolour);

        var siteinfo_securityFenceElectrified=$("#siteinfo_securityFenceElectrified").val();
        siteinfoformdata.append("siteinfo_securityFenceElectrified", siteinfo_securityFenceElectrified);

        var siteinfo_securityFenceElectrifiedType=$("#siteinfo_securityFenceElectrifiedType").val();
        siteinfoformdata.append("siteinfo_securityFenceElectrifiedType", siteinfo_securityFenceElectrifiedType);

        var siteinfo_securityTypeofFitting=$("#siteinfo_securityTypeofFitting").val();
        siteinfoformdata.append("siteinfo_securityTypeofFitting", siteinfo_securityTypeofFitting);

        var siteinfo_securityTypeofGlobe=$("#siteinfo_securityTypeofGlobe").val();
        siteinfoformdata.append("siteinfo_securityTypeofGlobe", siteinfo_securityTypeofGlobe);

        var siteinfo_securitySiteLightQty=$("#siteinfo_securitySiteLightQty").val();
        siteinfoformdata.append("siteinfo_securitySiteLightQty", siteinfo_securitySiteLightQty);

        var siteinfo_securityOutsideLightSwitch=$("#siteinfo_securityOutsideLightSwitch").val();
        siteinfoformdata.append("siteinfo_securityOutsideLightSwitch", siteinfo_securityOutsideLightSwitch);

        var siteinfo_securityOutsideLightSwitchLocation=$("#siteinfo_securityOutsideLightSwitchLocation").val();
        siteinfoformdata.append("siteinfo_securityOutsideLightSwitchLocation", siteinfo_securityOutsideLightSwitchLocation);


        //Building
        var siteinfo_buildingStructure=$("#siteinfo_buildingStructure").val();
        siteinfoformdata.append("siteinfo_buildingStructure", siteinfo_buildingStructure);

        var siteinfo_buildingcolor=$("#siteinfo_buildingcolor").val();
        siteinfoformdata.append("siteinfo_buildingcolor", siteinfo_buildingcolor);

        var siteinfo_buildingserialno=$("#siteinfo_buildingserialno").val();
        siteinfoformdata.append("siteinfo_buildingserialno", siteinfo_buildingserialno);

        var siteinfo_buildingTypeOfLock=$("#siteinfo_buildingTypeOfLock").val();
        siteinfoformdata.append("siteinfo_buildingTypeOfLock", siteinfo_buildingTypeOfLock);

        var siteinfo_buildingArea=$("#siteinfo_buildingArea").val();
        siteinfoformdata.append("siteinfo_buildingArea", siteinfo_buildingArea);

        var siteinfo_buildingwallthickness=$("#siteinfo_buildingwallthickness").val();
        siteinfoformdata.append("siteinfo_buildingwallthickness", siteinfo_buildingwallthickness);

        var siteinfo_buildingaccommodationLightFitting=$("#siteinfo_buildingaccommodationLightFitting").val();
        siteinfoformdata.append("siteinfo_buildingaccommodationLightFitting", siteinfo_buildingaccommodationLightFitting);

        var siteinfo_buildingaccommodationTypeOfGlobe=$("#siteinfo_buildingaccommodationTypeOfGlobe").val();
        siteinfoformdata.append("siteinfo_buildingaccommodationTypeOfGlobe", siteinfo_buildingaccommodationTypeOfGlobe);

        var siteinfo_buildingAccommodationLightQuantity=$("#siteinfo_buildingAccommodationLightQuantity").val();
        siteinfoformdata.append("siteinfo_buildingAccommodationLightQuantity", siteinfo_buildingAccommodationLightQuantity);

        var siteinfo_buildingEmergencyLightFitting=$("#siteinfo_buildingEmergencyLightFitting").val();
        siteinfoformdata.append("siteinfo_buildingEmergencyLightFitting", siteinfo_buildingEmergencyLightFitting);

        var siteinfo_buildingEmergencyTypeOfGlobe=$("#siteinfo_buildingEmergencyTypeOfGlobe").val();
        siteinfoformdata.append("siteinfo_buildingEmergencyTypeOfGlobe", siteinfo_buildingEmergencyTypeOfGlobe);

        var siteinfo_buildingEmergencyLightQuantity=$("#siteinfo_buildingEmergencyLightQuantity").val();
        siteinfoformdata.append("siteinfo_buildingEmergencyLightQuantity", siteinfo_buildingEmergencyLightQuantity);

        var siteinfo_buildingCircuitBreakerType=$("#siteinfo_buildingCircuitBreakerType").val();
        siteinfoformdata.append("siteinfo_buildingCircuitBreakerType", siteinfo_buildingCircuitBreakerType);

        var siteinfo_buildingCircuitBreakerQuantity=$("#siteinfo_buildingCircuitBreakerQuantity").val();
        siteinfoformdata.append("siteinfo_buildingCircuitBreakerQuantity", siteinfo_buildingCircuitBreakerQuantity);

        var siteinfo_buildingCircuitBreakerQuantityUsed=$("#siteinfo_buildingCircuitBreakerQuantityUsed").val();
        siteinfoformdata.append("siteinfo_buildingCircuitBreakerQuantityUsed", siteinfo_buildingCircuitBreakerQuantityUsed);

        var siteinfo_buildingMovementAlarmInstalled=$("#siteinfo_buildingMovementAlarmInstalled").val();
        siteinfoformdata.append("siteinfo_buildingMovementAlarmInstalled", siteinfo_buildingMovementAlarmInstalled);

        var siteinfo_buildingMovementAlarmInstalledQty=$("#siteinfo_buildingMovementAlarmInstalledQty").val();
        siteinfoformdata.append("siteinfo_buildingMovementAlarmInstalledQty", siteinfo_buildingMovementAlarmInstalledQty);

        var siteinfo_buildingIntruderAlarmInstalled=$("#siteinfo_buildingIntruderAlarmInstalled").val();
        siteinfoformdata.append("siteinfo_buildingIntruderAlarmInstalled", siteinfo_buildingIntruderAlarmInstalled);

        var siteinfo_buildingIntruderAlarmInstalledQty=$("#siteinfo_buildingIntruderAlarmInstalledQty").val();
        siteinfoformdata.append("siteinfo_buildingIntruderAlarmInstalledQty", siteinfo_buildingIntruderAlarmInstalledQty);

        var siteinfo_buildingHeatAlarmInstalled=$("#siteinfo_buildingHeatAlarmInstalled").val();
        siteinfoformdata.append("siteinfo_buildingHeatAlarmInstalled", siteinfo_buildingHeatAlarmInstalled);

        var siteinfo_buildingHeatAlarmInstalledQty=$("#siteinfo_buildingHeatAlarmInstalledQty").val();
        siteinfoformdata.append("siteinfo_buildingHeatAlarmInstalledQty", siteinfo_buildingHeatAlarmInstalledQty);

        var siteinfo_buildingAdditionalSurgeProtection=$("#siteinfo_buildingAdditionalSurgeProtection").val();
        siteinfoformdata.append("siteinfo_buildingAdditionalSurgeProtection", siteinfo_buildingAdditionalSurgeProtection);

        var siteinfo_buildingAdditionalSurgeProtectionType=$("#siteinfo_buildingAdditionalSurgeProtectionType").val();
        siteinfoformdata.append("siteinfo_buildingAdditionalSurgeProtectionType", siteinfo_buildingAdditionalSurgeProtectionType);



        

        var siteinfo_typesite=$("#siteinfo_typesite").val();
        if(siteinfo_typesite == null){
          siteinfo_typesite = "";
        }
        siteinfoformdata.append("siteinfo_typesite", siteinfo_typesite);

        var siteinfo_phasenum=$("#siteinfo_phasenum").val();
        siteinfoformdata.append("siteinfo_phasenum", siteinfo_phasenum);

        var siteinfo_siteclassif=$("#siteinfo_siteclassif").val();
        siteinfoformdata.append("siteinfo_siteclassif", siteinfo_siteclassif);

        var siteinfo_radiotec=$("#siteinfo_radiotec").val();
        siteinfoformdata.append("siteinfo_radiotec", siteinfo_radiotec);

        var siteinfo_maintoffid=$("#siteinfo_maintoffid").val();
        if(siteinfo_maintoffid == null){
          siteinfo_maintoffid = "";
        }
        siteinfoformdata.append("siteinfo_maintoffid", siteinfo_maintoffid);

        var siteinfo_techcontactnum=$("#siteinfo_techcontactnum").val();
        siteinfoformdata.append("siteinfo_techcontactnum", siteinfo_techcontactnum);

        var siteinfo_regiao=$("#siteinfo_regiao").val();
        if(siteinfo_regiao == null){
          siteinfo_regiao = "";
        }
        siteinfoformdata.append("siteinfo_regiao", siteinfo_regiao);

        var siteinfo_area=$("#siteinfo_area").val();
        if(siteinfo_area == null){
          siteinfo_area = "";
        }
        siteinfoformdata.append("siteinfo_area", siteinfo_area);

        var siteinfo_regiaoselmec=$("#siteinfo_regiaoselmec").val();
        if(siteinfo_regiaoselmec == null){
          siteinfo_regiaoselmec = "";
        }
        siteinfoformdata.append("siteinfo_regiaoselmec", siteinfo_regiaoselmec);

        var siteinfo_gps=[];
        var siteinfo_gpsObject={};

        siteinfo_gpsObject.siteinfo_gpslatitude=$("#siteinfo_gpslatitude").val();
        siteinfo_gpsObject.siteinfo_gpslongitude=$("#siteinfo_gpslongitude").val();
        siteinfo_gps.push(siteinfo_gpsObject);
        siteinfoformdata.append("siteinfo_gps", JSON.stringify(siteinfo_gps));

        var siteinfo_planmaintdate=$("#siteinfo_planmaintdate").val();
        siteinfoformdata.append("siteinfo_planmaintdate", siteinfo_planmaintdate);

        var siteinfo_siteonairdate=$("#siteinfo_siteonairdate").val();
        siteinfoformdata.append("siteinfo_siteonairdate", siteinfo_siteonairdate);

        var siteinfo_siteannoucdate=$("#siteinfo_siteannoucdate").val();
        siteinfoformdata.append("siteinfo_siteannoucdate", siteinfo_siteannoucdate);
        
        var siteinfo_twinbts=$("#siteinfo_twinbts").val();
        if(siteinfo_twinbts == null){
          siteinfo_twinbts = "";
        }
        siteinfoformdata.append("siteinfo_twinbts", siteinfo_twinbts);

        var siteinfo_btslinkedsite=$("#siteinfo_btslinkedsite").val();
        if(siteinfo_btslinkedsite == null){
          siteinfo_btslinkedsite = "";
        }
        siteinfoformdata.append("siteinfo_btslinkedsite", siteinfo_btslinkedsite);

        //gerador
          var siteinfo_generator=$("input[name='siteinfo_generator']:checked").val();
          siteinfoformdata.append("siteinfo_generator", siteinfo_generator);

            console.log(generatorArray)
            var siteinfo_generatorArray = generatorArray;
            if(siteinfo_generatorArray.length != 0){

              for(var i = 0; i < siteinfo_generatorArray.length; i++){

                  var siteinfo_generatorhours = siteinfo_generatorArray[i].siteinfo_generatorhours
                  siteinfoformdata.append("siteinfo_generatorhours", siteinfo_generatorhours);

                  var siteinfo_generatortype = siteinfo_generatorArray[i].siteinfo_generatortype
                  siteinfoformdata.append("siteinfo_generatortype", siteinfo_generatortype);

                  var siteinfo_generatoroutputkw = siteinfo_generatorArray[i].siteinfo_generatoroutputkw
                  siteinfoformdata.append("siteinfo_generatoroutputkw", siteinfo_generatoroutputkw);

                  var siteinfo_generatormodelno = siteinfo_generatorArray[i].siteinfo_generatormodelno
                  siteinfoformdata.append("siteinfo_generatormodelno", siteinfo_generatormodelno);

                  var siteinfo_generatorengineserialnumber = siteinfo_generatorArray[i].siteinfo_generatorengineserialnumber
                  siteinfoformdata.append("siteinfo_generatorengineserialnumber", siteinfo_generatorengineserialnumber);

                  var siteinfo_generatorenginecapacity = siteinfo_generatorArray[i].siteinfo_generatorenginecapacity
                  siteinfoformdata.append("siteinfo_generatorenginecapacity", siteinfo_generatorenginecapacity);

                  var siteinfo_generatorstartertype = siteinfo_generatorArray[i].siteinfo_generatorstartertype
                  siteinfoformdata.append("siteinfo_generatorstartertype", siteinfo_generatorstartertype);
                  
                  var siteinfo_generatorfuelconsumption = siteinfo_generatorArray[i].siteinfo_generatorfuelconsumption
                  siteinfoformdata.append("siteinfo_generatorfuelconsumption", siteinfo_generatorfuelconsumption);

                  // Os novos Ids começam aqui
                  var siteinfo_generatorinstallationDate = siteinfo_generatorArray[i].siteinfo_generatorinstallationDate
                  siteinfoformdata.append("siteinfo_generatorinstallationDate", siteinfo_generatorinstallationDate);
                  
                  var siteinfo_generatorManufacturer = siteinfo_generatorArray[i].siteinfo_generatorManufacturer
                  siteinfoformdata.append("siteinfo_generatorManufacturer", siteinfo_generatorManufacturer);
                  
                  var siteinfo_generatorSerialNo = siteinfo_generatorArray[i].siteinfo_generatorSerialNo
                  siteinfoformdata.append("siteinfo_generatorSerialNo", siteinfo_generatorSerialNo);

                  var siteinfo_generatorModel = siteinfo_generatorArray[i].siteinfo_generatorModel
                  siteinfoformdata.append("siteinfo_generatorModel", siteinfo_generatorModel);

                  var siteinfo_alternatoratorManufacturer = siteinfo_generatorArray[i].siteinfo_alternatoratorManufacturer
                  siteinfoformdata.append("siteinfo_alternatoratorManufacturer", siteinfo_alternatoratorManufacturer);

                  var siteinfo_alternatoratorKvaRating = siteinfo_generatorArray[i].siteinfo_alternatoratorKvaRating
                  siteinfoformdata.append("siteinfo_alternatoratorKvaRating", siteinfo_alternatoratorKvaRating);

                  var siteinfo_alternatoratorModelNo = siteinfo_generatorArray[i].siteinfo_alternatoratorModelNo
                  siteinfoformdata.append("siteinfo_alternatoratorModelNo", siteinfo_alternatoratorModelNo);

                  var siteinfo_alternatoratorSerialNo = siteinfo_generatorArray[i].siteinfo_alternatoratorSerialNo
                  siteinfoformdata.append("siteinfo_alternatoratorSerialNo", siteinfo_alternatoratorSerialNo);

                  var siteinfo_generalControlerType = siteinfo_generatorArray[i].siteinfo_generalControlerType
                  siteinfoformdata.append("siteinfo_generalControlerType", siteinfo_generalControlerType);

                  var siteinfo_generalControlerSerialNo = siteinfo_generatorArray[i].siteinfo_generalControlerSerialNo
                  siteinfoformdata.append("siteinfo_generalControlerSerialNo", siteinfo_generalControlerSerialNo);

                  var siteinfo_generalControlerModelNo = siteinfo_generatorArray[i].siteinfo_generalControlerModelNo
                  siteinfoformdata.append("siteinfo_generalControlerModelNo", siteinfo_generalControlerModelNo);

                  var siteinfo_generalControlerSoftwareversion = siteinfo_generatorArray[i].siteinfo_generalControlerSoftwareversion
                  siteinfoformdata.append("siteinfo_generalControlerSoftwareversion", siteinfo_generalControlerSoftwareversion);

                  var siteinfo_generalSurgeArrestors = siteinfo_generatorArray[i].siteinfo_generalSurgeArrestors
                  siteinfoformdata.append("siteinfo_generalSurgeArrestors", siteinfo_generalSurgeArrestors);

                  var siteinfo_generalSurgeArrestorsType = siteinfo_generatorArray[i].siteinfo_generalSurgeArrestorsType
                  siteinfoformdata.append("siteinfo_generalSurgeArrestorsType", siteinfo_generalSurgeArrestorsType);

                  var siteinfo_generatorAmpMetersinst = siteinfo_generatorArray[i].siteinfo_generatorAmpMetersinst
                  siteinfoformdata.append("siteinfo_generatorAmpMetersinst", siteinfo_generatorAmpMetersinst);

                  var siteinfo_generatorAmpMetersinstType = siteinfo_generatorArray[i].siteinfo_generatorAmpMetersinstType
                  siteinfoformdata.append("siteinfo_generatorAmpMetersinstType", siteinfo_generatorAmpMetersinstType);

                  var siteinfo_generatorVltMetersinst = siteinfo_generatorArray[i].siteinfo_generatorVltMetersinst
                  siteinfoformdata.append("siteinfo_generatorVltMetersinst", siteinfo_generatorVltMetersinst);

                  var siteinfo_generatorVltMetersinstType = siteinfo_generatorArray[i].siteinfo_generatorVltMetersinstType
                  siteinfoformdata.append("siteinfo_generatorVltMetersinstType", siteinfo_generatorVltMetersinstType);

                  var siteinfo_generatorFrqncyMetersinst = siteinfo_generatorArray[i].siteinfo_generatorFrqncyMetersinst
                  siteinfoformdata.append("siteinfo_generatorFrqncyMetersinst", siteinfo_generatorFrqncyMetersinst);

                  var siteinfo_generatorFrqncyMetersinstType = siteinfo_generatorArray[i].siteinfo_generatorFrqncyMetersinstType
                  siteinfoformdata.append("siteinfo_generatorFrqncyMetersinstType", siteinfo_generatorFrqncyMetersinstType);

                  var siteinfo_generatorAnalogueHourMetersinst = siteinfo_generatorArray[i].siteinfo_generatorAnalogueHourMetersinst
                  siteinfoformdata.append("siteinfo_generatorAnalogueHourMetersinst", siteinfo_generatorAnalogueHourMetersinst);

                  var siteinfo_generatorAnalogueHourMetersinstType = siteinfo_generatorArray[i].siteinfo_generatorAnalogueHourMetersinstType
                  siteinfoformdata.append("siteinfo_generatorAnalogueHourMetersinstType", siteinfo_generatorAnalogueHourMetersinstType);

                  var siteinfo_generatorKwhMetersinst = siteinfo_generatorArray[i].siteinfo_generatorKwhMetersinst
                  siteinfoformdata.append("siteinfo_generatorKwhMetersinst", siteinfo_generatorKwhMetersinst);

                  var siteinfo_generatorKwhMetersinstType = siteinfo_generatorArray[i].siteinfo_generatorKwhMetersinstType
                  siteinfoformdata.append("siteinfo_generatorKwhMetersinstType", siteinfo_generatorKwhMetersinstType);

                  var siteinfo_generatorDummyLoadMetersinst = siteinfo_generatorArray[i].siteinfo_generatorDummyLoadMetersinst
                  siteinfoformdata.append("siteinfo_generatorDummyLoadMetersinst", siteinfo_generatorDummyLoadMetersinst);

                  var siteinfo_generatorDummyLoadMetersinstType = siteinfo_generatorArray[i].siteinfo_generatorDummyLoadMetersinstType
                  siteinfoformdata.append("siteinfo_generatorDummyLoadMetersinstType", siteinfo_generatorDummyLoadMetersinstType);

                  var siteinfo_generatorBatteryinstType = siteinfo_generatorArray[i].siteinfo_generatorBatteryinstType
                  siteinfoformdata.append("siteinfo_generatorBatteryinstType", siteinfo_generatorBatteryinstType);

                  var siteinfo_generatorBatterySize = siteinfo_generatorArray[i].siteinfo_generatorBatterySize
                  siteinfoformdata.append("siteinfo_generatorBatterySize", siteinfo_generatorBatterySize);

                  var siteinfo_generatorFuelSensorType = siteinfo_generatorArray[i].siteinfo_generatorFuelSensorType
                  siteinfoformdata.append("siteinfo_generatorFuelSensorType", siteinfo_generatorFuelSensorType);
              }
            }

        
        //GSM Cabinet
        var siteinfo_gsmcab=$("input[name='siteinfo_gsmCabinetInstalled']:checked").val();
        console.log(siteinfo_gsmcab);
        siteinfoformdata.append("siteinfo_gsmcab", siteinfo_gsmcab);

          console.log(gsmcabArray)
          var siteinfo_gsmcabArray = gsmcabArray;
          if(siteinfo_gsmcabArray.length != 0){

            for(var i = 0; i < siteinfo_gsmcabArray.length; i++){

                var siteinfo_gsmEquipmentType = siteinfo_gsmcabArray[i].siteinfo_gsmEquipmentType
                siteinfoformdata.append("siteinfo_gsmEquipmentType", siteinfo_gsmEquipmentType);

                var siteinfo_gsmSiteConfig = siteinfo_gsmcabArray[i].siteinfo_gsmSiteConfig
                siteinfoformdata.append("siteinfo_gsmSiteConfig", siteinfo_gsmSiteConfig);

                var siteinfo_gsm900AntennaType = siteinfo_gsmcabArray[i].siteinfo_gsm900AntennaType
                siteinfoformdata.append("siteinfo_gsm900AntennaType", siteinfo_gsm900AntennaType);

                var siteinfo_gsm900AntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsm900AntennaQty
                siteinfoformdata.append("siteinfo_gsm900AntennaQty", siteinfo_gsm900AntennaQty);

                var siteinfo_gsm900TmaInstalled = siteinfo_gsmcabArray[i].siteinfo_gsm900TmaInstalled
                siteinfoformdata.append("siteinfo_gsm900TmaInstalled", siteinfo_gsm900TmaInstalled);

                var siteinfo_gsm1800AntennaType = siteinfo_gsmcabArray[i].siteinfo_gsm1800AntennaType
                siteinfoformdata.append("siteinfo_gsm1800AntennaType", siteinfo_gsm1800AntennaType);

                var siteinfo_gsm1800AntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsm1800AntennaQty
                siteinfoformdata.append("siteinfo_gsm1800AntennaQty", siteinfo_gsm1800AntennaQty);

                var siteinfo_gsm1800TmaInstalled = siteinfo_gsmcabArray[i].siteinfo_gsm1800TmaInstalled
                siteinfoformdata.append("siteinfo_gsm1800TmaInstalled", siteinfo_gsm1800TmaInstalled);

                var siteinfo_gsm3gAntennaType = siteinfo_gsmcabArray[i].siteinfo_gsm3gAntennaType
                siteinfoformdata.append("siteinfo_gsm3gAntennaType", siteinfo_gsm3gAntennaType);

                var siteinfo_gsm3gAntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsm3gAntennaQty
                siteinfoformdata.append("siteinfo_gsm3gAntennaQty", siteinfo_gsm3gAntennaQty);

                var siteinfo_gsm3gTmaInstalled = siteinfo_gsmcabArray[i].siteinfo_gsm3gTmaInstalled
                siteinfoformdata.append("siteinfo_gsm3gTmaInstalled", siteinfo_gsm3gTmaInstalled);

                var siteinfo_gsm4gAntennaType = siteinfo_gsmcabArray[i].siteinfo_gsm4gAntennaType
                siteinfoformdata.append("siteinfo_gsm4gAntennaType", siteinfo_gsm4gAntennaType);

                var siteinfo_gsm4gAntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsm4gAntennaQty
                siteinfoformdata.append("siteinfo_gsm4gAntennaQty", siteinfo_gsm4gAntennaQty);

                var siteinfo_gsm4gTmaInstalled = siteinfo_gsmcabArray[i].siteinfo_gsm4gTmaInstalled
                siteinfoformdata.append("siteinfo_gsm4gTmaInstalled", siteinfo_gsm4gTmaInstalled);

                var siteinfo_gsm5gAntennaType = siteinfo_gsmcabArray[i].siteinfo_gsm5gAntennaType
                siteinfoformdata.append("siteinfo_gsm5gAntennaType", siteinfo_gsm5gAntennaType);

                var siteinfo_gsm5gAntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsm5gAntennaQty
                siteinfoformdata.append("siteinfo_gsm5gAntennaQty", siteinfo_gsm5gAntennaQty);

                var siteinfo_gsmOmniAntennaType = siteinfo_gsmcabArray[i].siteinfo_gsmOmniAntennaType
                siteinfoformdata.append("siteinfo_gsmOmniAntennaType", siteinfo_gsmOmniAntennaType);

                var siteinfo_gsmOmniAntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsmOmniAntennaQty
                siteinfoformdata.append("siteinfo_gsmOmniAntennaQty", siteinfo_gsmOmniAntennaQty);

                var siteinfo_gsmTmaAntennaType = siteinfo_gsmcabArray[i].siteinfo_gsmTmaAntennaType
                siteinfoformdata.append("siteinfo_gsmTmaAntennaType", siteinfo_gsmTmaAntennaType);

                var siteinfo_gsmTmaAntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsmTmaAntennaQty
                siteinfoformdata.append("siteinfo_gsmTmaAntennaQty", siteinfo_gsmTmaAntennaQty);

                var siteinfo_gsmBscAntennaType = siteinfo_gsmcabArray[i].siteinfo_gsmBscAntennaType
                siteinfoformdata.append("siteinfo_gsmBscAntennaType", siteinfo_gsmBscAntennaType);

                var siteinfo_gsmBscAntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsmBscAntennaQty
                siteinfoformdata.append("siteinfo_gsmBscAntennaQty", siteinfo_gsmBscAntennaQty);

                var siteinfo_gsmTrauAntennaType = siteinfo_gsmcabArray[i].siteinfo_gsmTrauAntennaType
                siteinfoformdata.append("siteinfo_gsmTrauAntennaType", siteinfo_gsmTrauAntennaType);

                var siteinfo_gsmTrauAntennaQty = siteinfo_gsmcabArray[i].siteinfo_gsmTrauAntennaQty
                siteinfoformdata.append("siteinfo_gsmTrauAntennaQty", siteinfo_gsmTrauAntennaQty);

                var siteinfo_gsmRepeater = siteinfo_gsmcabArray[i].siteinfo_gsmRepeater
                siteinfoformdata.append("siteinfo_gsmRepeater", siteinfo_gsmRepeater);

                var siteinfo_gsmRepeaterQty = siteinfo_gsmcabArray[i].siteinfo_gsmRepeaterQty
                siteinfoformdata.append("siteinfo_gsmRepeaterQty", siteinfo_gsmRepeaterQty);

            }
          }

            
        //ac
          var siteinfo_ac=$("input[name='siteinfo_ac']:checked").val();
          siteinfoformdata.append("siteinfo_ac", siteinfo_ac);

          // if(siteinfo_ac == "No"){
          //    var siteinfo_acArray = [];
          //    siteinfoformdata.append("siteinfo_acArray", JSON.stringify(siteinfo_acArray));
          // }else{
          //  var siteinfo_acArray = acArray;
          //   siteinfoformdata.append("siteinfo_acArray", JSON.stringify(siteinfo_acArray));
          // }


          var siteinfo_acArray = acArray;
            if(siteinfo_acArray.length != 0){

              for(var i = 0; i < siteinfo_acArray.length; i++){

                  var siteinfo_acmanufacturer = siteinfo_acArray[i].siteinfo_acmanufacturer
                  siteinfoformdata.append("siteinfo_acmanufacturer", siteinfo_acmanufacturer);

                  var siteinfo_actype = siteinfo_acArray[i].siteinfo_actype
                  siteinfoformdata.append("siteinfo_actype", siteinfo_actype);

                  var siteinfo_acmodel = siteinfo_acArray[i].siteinfo_acmodel
                  siteinfoformdata.append("siteinfo_acmodel", siteinfo_acmodel);

                  var siteinfo_acnumber = siteinfo_acArray[i].siteinfo_acnumber
                  siteinfoformdata.append("siteinfo_acnumber", siteinfo_acnumber);

                  var siteinfo_acserialnumber = siteinfo_acArray[i].siteinfo_acserialnumber
                  siteinfoformdata.append("siteinfo_acserialnumber", siteinfo_acserialnumber);

                  var siteinfo_acbtu = siteinfo_acArray[i].siteinfo_acbtu
                  siteinfoformdata.append("siteinfo_acbtu", siteinfo_acbtu);

                  var siteinfo_accageinstalled = siteinfo_acArray[i].siteinfo_accageinstalled
                  siteinfoformdata.append("siteinfo_accageinstalled", siteinfo_accageinstalled);

                  var siteinfo_acsleeveinstalled = siteinfo_acArray[i].siteinfo_acsleeveinstalled
                  siteinfoformdata.append("siteinfo_acsleeveinstalled", siteinfo_acsleeveinstalled);

                  var siteinfo_acunitcontrolltype = siteinfo_acArray[i].siteinfo_acunitcontrolltype
                  siteinfoformdata.append("siteinfo_acunitcontrolltype", siteinfo_acunitcontrolltype);

                  var siteinfo_accontrollermodel = siteinfo_acArray[i].siteinfo_accontrollermodel
                  siteinfoformdata.append("siteinfo_accontrollermodel", siteinfo_accontrollermodel);

              }
            }


        //rectifiercabbinet
          var siteinfo_rectifiercabinnet=$("input[name='siteinfo_rectifiercabinnet']:checked").val();
          siteinfoformdata.append("siteinfo_rectifiercabinnet", siteinfo_rectifiercabinnet);

          var siteinfo_rectcabArray = rectcabArray;
            if(siteinfo_rectcabArray.length != 0){

              for(var i = 0; i < siteinfo_rectcabArray.length; i++){

                  var siteinfo_rectcabcabinetmodelno = siteinfo_rectcabArray[i].siteinfo_rectcabcabinetmodelno
                  siteinfoformdata.append("siteinfo_rectcabcabinetmodelno", siteinfo_rectcabcabinetmodelno);

                  var siteinfo_rectcabcabinetnumber = siteinfo_rectcabArray[i].siteinfo_rectcabcabinetnumber
                  siteinfoformdata.append("siteinfo_rectcabcabinetnumber", siteinfo_rectcabcabinetnumber);

                  var siteinfo_rectcabtype = siteinfo_rectcabArray[i].siteinfo_rectcabtype
                  siteinfoformdata.append("siteinfo_rectcabtype", siteinfo_rectcabtype);

                  var siteinfo_rectcabinputtype = siteinfo_rectcabArray[i].siteinfo_rectcabinputtype
                  siteinfoformdata.append("siteinfo_rectcabinputtype", siteinfo_rectcabinputtype);

                  var siteinfo_rectcabnobatteries = siteinfo_rectcabArray[i].siteinfo_rectcabnobatteries
                  siteinfoformdata.append("siteinfo_rectcabnobatteries", siteinfo_rectcabnobatteries);

                  var siteinfo_rectcabbatterycapac = siteinfo_rectcabArray[i].siteinfo_rectcabbatterycapac
                  siteinfoformdata.append("siteinfo_rectcabbatterycapac", siteinfo_rectcabbatterycapac);

                  // Aqui começam os novos atributos
                  
                  // var siteinfo_rectcabcabinetmodelno = siteinfo_rectcabArray[i].siteinfo_rectcabcabinetmodelno;
                  // siteinfoformdata.append("siteinfo_rectcabcabinetmodelno", siteinfo_rectcabcabinetmodelno);

                  var siteinfo_rectcabcabinetType = siteinfo_rectcabArray[i].siteinfo_rectcabcabinetType;
                  siteinfoformdata.append("siteinfo_rectcabcabinetType", siteinfo_rectcabcabinetType);

                  var siteinfo_rectifierserialno = siteinfo_rectcabArray[i].siteinfo_rectifierserialno;
                  siteinfoformdata.append("siteinfo_rectifierserialno", siteinfo_rectifierserialno);

                  // var siteinfo_rectcabinputtype = siteinfo_rectcabArray[i].siteinfo_rectcabinputtype;
                  // siteinfoformdata.append("siteinfo_rectcabinputtype", siteinfo_rectcabinputtype);

                  var siteinfo_rectcabinetmodulestype = siteinfo_rectcabArray[i].siteinfo_rectcabinetmodulestype;
                  siteinfoformdata.append("siteinfo_rectcabinetmodulestype", siteinfo_rectcabinetmodulestype);

                  var siteinfo_rectcabinetmodulescontrollertype = siteinfo_rectcabArray[i].siteinfo_rectcabinetmodulescontrollertype;
                  siteinfoformdata.append("siteinfo_rectcabinetmodulescontrollertype", siteinfo_rectcabinetmodulescontrollertype);

                  var siteinfo_rectcabinetCircuitBreakerInputType = siteinfo_rectcabArray[i].siteinfo_rectcabinetCircuitBreakerInputType;
                  siteinfoformdata.append("siteinfo_rectcabinetCircuitBreakerInputType", siteinfo_rectcabinetCircuitBreakerInputType);

                  var siteinfo_rectcabinetCircuitBreakerLoadType = siteinfo_rectcabArray[i].siteinfo_rectcabinetCircuitBreakerLoadType;
                  siteinfoformdata.append("siteinfo_rectcabinetCircuitBreakerLoadType", siteinfo_rectcabinetCircuitBreakerLoadType);

                  var siteinfo_rectcabinetcircuitbreakerloadquantity = siteinfo_rectcabArray[i].siteinfo_rectcabinetcircuitbreakerloadquantity;
                  siteinfoformdata.append("siteinfo_rectcabinetcircuitbreakerloadquantity", siteinfo_rectcabinetcircuitbreakerloadquantity);

                  var siteinfo_rectcabinetcircuitbreakerbatteriestype = siteinfo_rectcabArray[i].siteinfo_rectcabinetcircuitbreakerbatteriestype;
                  siteinfoformdata.append("siteinfo_rectcabinetcircuitbreakerbatteriestype", siteinfo_rectcabinetcircuitbreakerbatteriestype);

                  var siteinfo_rectcabinetbatteryahcapacityCab1 = siteinfo_rectcabArray[i].siteinfo_rectcabinetbatteryahcapacityCab1;
                  siteinfoformdata.append("siteinfo_rectcabinetbatteryahcapacityCab1", siteinfo_rectcabinetbatteryahcapacityCab1);

                  // var siteinfo_rectcabnobatteries = siteinfo_rectcabArray[i].siteinfo_rectcabnobatteries;
                  // siteinfoformdata.append("siteinfo_rectcabnobatteries", siteinfo_rectcabnobatteries);

                  var siteinfo_rectcabinetbatteryahcapacitycab = siteinfo_rectcabArray[i].siteinfo_rectcabinetbatteryahcapacitycab;
                  siteinfoformdata.append("siteinfo_rectcabinetbatteryahcapacitycab", siteinfo_rectcabinetbatteryahcapacitycab);
              }
            }

          

        //security
          var siteinfo_fencing=$("input[name='siteinfo_fencing']:checked").val();
          siteinfoformdata.append("siteinfo_fencing", siteinfo_fencing);

          var siteinfo_fencingelectrified=$("input[name='siteinfo_fencingelectrified']:checked").val();
          siteinfoformdata.append("siteinfo_fencingelectrified", siteinfo_fencingelectrified);

          var siteinfo_guardsite=$("input[name='siteinfo_guardsite']:checked").val();
          siteinfoformdata.append("siteinfo_guardsite", siteinfo_guardsite);

          // if(siteinfo_guardsite == "No"){
          //    var siteinfo_securityArray = [];
          //    siteinfoformdata.append("siteinfo_securityArray", JSON.stringify(siteinfo_securityArray));
          // }else{
          //  var siteinfo_securityArray = securityArray;
          //  siteinfoformdata.append("siteinfo_securityArray", JSON.stringify(siteinfo_securityArray));
          // }


          var siteinfo_securityArray = securityArray;
            if(siteinfo_securityArray.length != 0){

              for(var i = 0; i < siteinfo_securityArray.length; i++){

                  var siteinfo_secguardname = siteinfo_securityArray[i].siteinfo_secguardname
                  siteinfoformdata.append("siteinfo_secguardname", siteinfo_secguardname);

                  var siteinfo_secbinumber = siteinfo_securityArray[i].siteinfo_secbinumber
                  siteinfoformdata.append("siteinfo_secbinumber", siteinfo_secbinumber);

                  var siteinfo_secnib = siteinfo_securityArray[i].siteinfo_secnib
                  siteinfoformdata.append("siteinfo_secnib", siteinfo_secnib);

                  var siteinfo_secvalue = siteinfo_securityArray[i].siteinfo_secvalue
                  siteinfoformdata.append("siteinfo_secvalue", siteinfo_secvalue);

              }
            }

        //electricity
        var siteinfo_elecsupptype=$("input[name='siteinfo_elecsupptype']:checked").val();
        siteinfoformdata.append("siteinfo_elecsupptype", siteinfo_elecsupptype);

        var siteinfo_electype=$("input[name='siteinfo_electype']:checked").val();
        siteinfoformdata.append("siteinfo_electype", siteinfo_electype);

        var siteinfo_elecpayment=$("#siteinfo_elecpayment").val();
        siteinfoformdata.append("siteinfo_elecpayment", siteinfo_elecpayment);

        if(siteinfo_elecpayment == "EDM Prepaid/Credelec"){
          var siteinfo_credelec=$("#siteinfo_credelec").val();
          siteinfoformdata.append("siteinfo_credelec", siteinfo_credelec);
        }else{
          var siteinfo_credelec="";
          siteinfoformdata.append("siteinfo_credelec", siteinfo_credelec);
        }

        var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
        var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
        var ano = (new Date()).getFullYear();
        // var todaydate = dia + "/" + mes + "/" + ano;
        var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        var siteinfo_audittrail = [];
        var siteinfo_audittrailObject = {};
        siteinfo_audittrailObject.siteinfo_audittrailname = nomesession;
        siteinfo_audittrailObject.siteinfo_audittrailaction = "Create Site";
        siteinfo_audittrailObject.siteinfo_audittraildate = dia + "/" + mes + "/" + ano + "  " + todayhours;

        siteinfo_audittrail.push(siteinfo_audittrailObject);
        // siteinfoformdata.append("siteinfo_audittrail", JSON.stringify(siteinfo_audittrail));
        

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',rule, true);
        xhr.send(siteinfoformdata);

        $('#loading').fadeIn().delay(20000).fadeOut();
        setTimeout(function(){
         window.location.href="/manutencao/siteinfohome";
        }, 3000);

      });

        

      }

    });


  


  $('#updateSiteInfo').click(function(){

    var referenciaSiteInfo=$("#updateSiteInfo").attr("dataref");
    var referenciacodigo = $("#updateSiteInfo").attr("datacodigo");

    var detalhesaudittrail = JSON.parse($(this).attr("dataaudittrail"));
    var lastaudittrail = detalhesaudittrail[detalhesaudittrail.length-1];
    var nomesession = $("#updateSiteInfo").attr("detalhessession");

    if(validar()){
      $('#yes_no_title_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
      $('#yes_no_content_modal').html((($(".lang-picker > .selected").attr("value")=="pt")?'Deseja realmente actualizar a informação ':'Do you really want to update <b>') + (($(".lang-picker > .selected").attr("value")=="pt")?'</b> ?':"</b>?"))
      $('#yes_no_modal').openModal({dismissible:false});
      $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="#"; });
      $('#yes_btn_modal').click(function(e){
        e.stopPropagation();
        e.stopImmediatePropagation();

         // var nm = document.getElementById("siteinfo_client").value;
         // var dadosclientes = JSON.parse($("#contain3").attr("detalhesclientes"));

         // var posicaonomecliente = dadosclientes.findIndex(x => x.cliente_nome === nm);

         var rule="/manutencao/updatesiteinfo";
         var siteinfoformdata= new FormData();

      var siteid=referenciaSiteInfo;
      siteinfoformdata.append("siteid", siteid);

      var siteinfo_clientid=$("#siteinfo_clientid").val();
      siteinfoformdata.append("siteinfo_clientid", siteinfo_clientid);

      var siteinfo_cod=referenciacodigo
      siteinfoformdata.append("siteinfo_cod", siteinfo_cod);

      var siteinfo_sitename=$("#siteinfo_sitename").val();
      siteinfoformdata.append("siteinfo_sitename", siteinfo_sitename);

      var siteinfo_sitenum=$("#siteinfo_sitenum").val();
      siteinfoformdata.append("siteinfo_sitenum", siteinfo_sitenum);

      var siteinfo_typesite=$("#siteinfo_typesite").val();
      if(siteinfo_typesite == null){
        siteinfo_typesite = "";
      }
      siteinfoformdata.append("siteinfo_typesite", siteinfo_typesite);

      var siteinfo_phasenum=$("#siteinfo_phasenum").val();
      siteinfoformdata.append("siteinfo_phasenum", siteinfo_phasenum);

      var siteinfo_siteclassif=$("#siteinfo_siteclassif").val();
      siteinfoformdata.append("siteinfo_siteclassif", siteinfo_siteclassif);

      var siteinfo_radiotec=$("#siteinfo_radiotec").val();
      siteinfoformdata.append("siteinfo_radiotec", siteinfo_radiotec);

      var siteinfo_maintoffid=$("#siteinfo_maintoffid").val();
      if(siteinfo_maintoffid == null){
        siteinfo_maintoffid = "";
      }
      siteinfoformdata.append("siteinfo_maintoffid", siteinfo_maintoffid);

      var siteinfo_techcontactnum=$("#siteinfo_techcontactnum").val();
      siteinfoformdata.append("siteinfo_techcontactnum", siteinfo_techcontactnum);

      var siteinfo_regiao=$("#siteinfo_regiao").val();
      if(siteinfo_regiao == null){
        siteinfo_regiao = "";
      }
      siteinfoformdata.append("siteinfo_regiao", siteinfo_regiao);

      var siteinfo_area=$("#siteinfo_area").val();
      if(siteinfo_area == null){
        siteinfo_area = "";
      }
      siteinfoformdata.append("siteinfo_area", siteinfo_area);

      var siteinfo_regiaoselmec=$("#siteinfo_regiaoselmec").val();
      if(siteinfo_regiaoselmec == null){
        siteinfo_regiaoselmec = "";
      }
      siteinfoformdata.append("siteinfo_regiaoselmec", siteinfo_regiaoselmec);

      var siteinfo_gps=[];
      var siteinfo_gpsObject={};

      siteinfo_gpsObject.siteinfo_gpslatitude=$("#siteinfo_gpslatitude").val();
      siteinfo_gpsObject.siteinfo_gpslongitude=$("#siteinfo_gpslongitude").val();
      siteinfo_gps.push(siteinfo_gpsObject)
      siteinfoformdata.append("siteinfo_gps", JSON.stringify(siteinfo_gps));

      var siteinfo_planmaintdate=$("#siteinfo_planmaintdate").val();
      siteinfoformdata.append("siteinfo_planmaintdate", siteinfo_planmaintdate);

      var siteinfo_siteonairdate=$("#siteinfo_siteonairdate").val();
      siteinfoformdata.append("siteinfo_siteonairdate", siteinfo_siteonairdate);

      var siteinfo_siteannoucdate=$("#siteinfo_siteannoucdate").val();
      siteinfoformdata.append("siteinfo_siteannoucdate", siteinfo_siteannoucdate);
      
      var siteinfo_twinbts=$("#siteinfo_twinbts").val();
      if(siteinfo_twinbts == null){
        siteinfo_twinbts = "";
      }
      siteinfoformdata.append("siteinfo_twinbts", siteinfo_twinbts);

      var siteinfo_btslinkedsite=$("#siteinfo_btslinkedsite").val();
      if(siteinfo_btslinkedsite == null){
        siteinfo_btslinkedsite = "";
      }
      siteinfoformdata.append("siteinfo_btslinkedsite", siteinfo_btslinkedsite);

      //gerador
        var siteinfo_generator=$("input[name='siteinfo_generator']:checked").val();
        siteinfoformdata.append("siteinfo_generator", siteinfo_generator);

        
          var siteinfo_generatorArray = generatorArray;
          if(siteinfo_generatorArray.length != 0){

            for(var i = 0; i < siteinfo_generatorArray.length; i++){

                var siteinfo_generatorprevrefuelhours = siteinfo_generatorArray[i].siteinfo_generatorprevrefuelhours;
                siteinfoformdata.append("siteinfo_generatorprevrefuelhours", siteinfo_generatorprevrefuelhours);

                var siteinfo_generatorhours = siteinfo_generatorArray[i].siteinfo_generatorhours
                siteinfoformdata.append("siteinfo_generatorhours", siteinfo_generatorhours);

                var siteinfo_generatortype = siteinfo_generatorArray[i].siteinfo_generatortype
                siteinfoformdata.append("siteinfo_generatortype", siteinfo_generatortype);

                var siteinfo_generatoroutputkw = siteinfo_generatorArray[i].siteinfo_generatoroutputkw
                siteinfoformdata.append("siteinfo_generatoroutputkw", siteinfo_generatoroutputkw);

                var siteinfo_generatormodelno = siteinfo_generatorArray[i].siteinfo_generatormodelno
                siteinfoformdata.append("siteinfo_generatormodelno", siteinfo_generatormodelno);

                var siteinfo_generatorengineserialnumber = siteinfo_generatorArray[i].siteinfo_generatorengineserialnumber
                siteinfoformdata.append("siteinfo_generatorengineserialnumber", siteinfo_generatorengineserialnumber);

                var siteinfo_generatorenginecapacity = siteinfo_generatorArray[i].siteinfo_generatorenginecapacity
                siteinfoformdata.append("siteinfo_generatorenginecapacity", siteinfo_generatorenginecapacity);

                var siteinfo_generatorstartertype = siteinfo_generatorArray[i].siteinfo_generatorstartertype
                siteinfoformdata.append("siteinfo_generatorstartertype", siteinfo_generatorstartertype);

                var siteinfo_generatorfuelconsumption = siteinfo_generatorArray[i].siteinfo_generatorfuelconsumption
                siteinfoformdata.append("siteinfo_generatorfuelconsumption", siteinfo_generatorfuelconsumption);

            }
          }
          
          
        

        

      //ac
        var siteinfo_ac=$("input[name='siteinfo_ac']:checked").val();
        siteinfoformdata.append("siteinfo_ac", siteinfo_ac);

        // if(siteinfo_ac == "No"){
        //    var siteinfo_acArray = [];
        //    siteinfoformdata.append("siteinfo_acArray", JSON.stringify(siteinfo_acArray));
        // }else{
        //  var siteinfo_acArray = acArray;
        //   siteinfoformdata.append("siteinfo_acArray", JSON.stringify(siteinfo_acArray));
        // }


        var siteinfo_acArray = acArray;
          if(siteinfo_acArray.length != 0){

            for(var i = 0; i < siteinfo_acArray.length; i++){

                var siteinfo_acmanufacturer = siteinfo_acArray[i].siteinfo_acmanufacturer
                siteinfoformdata.append("siteinfo_acmanufacturer", siteinfo_acmanufacturer);

                var siteinfo_actype = siteinfo_acArray[i].siteinfo_actype
                siteinfoformdata.append("siteinfo_actype", siteinfo_actype);

                var siteinfo_acmodel = siteinfo_acArray[i].siteinfo_acmodel
                siteinfoformdata.append("siteinfo_acmodel", siteinfo_acmodel);

                var siteinfo_acnumber = siteinfo_acArray[i].siteinfo_acnumber
                siteinfoformdata.append("siteinfo_acnumber", siteinfo_acnumber);

                var siteinfo_acserialnumber = siteinfo_acArray[i].siteinfo_acserialnumber
                siteinfoformdata.append("siteinfo_acserialnumber", siteinfo_acserialnumber);

                var siteinfo_acbtu = siteinfo_acArray[i].siteinfo_acbtu
                siteinfoformdata.append("siteinfo_acbtu", siteinfo_acbtu);

                var siteinfo_accageinstalled = siteinfo_acArray[i].siteinfo_accageinstalled
                siteinfoformdata.append("siteinfo_accageinstalled", siteinfo_accageinstalled);

                var siteinfo_acsleeveinstalled = siteinfo_acArray[i].siteinfo_acsleeveinstalled
                siteinfoformdata.append("siteinfo_acsleeveinstalled", siteinfo_acsleeveinstalled);

                var siteinfo_acunitcontrolltype = siteinfo_acArray[i].siteinfo_acunitcontrolltype
                siteinfoformdata.append("siteinfo_acunitcontrolltype", siteinfo_acunitcontrolltype);

                var siteinfo_accontrollermodel = siteinfo_acArray[i].siteinfo_accontrollermodel
                siteinfoformdata.append("siteinfo_accontrollermodel", siteinfo_accontrollermodel);

            }
          }


      //rectifiercabbinet
        var siteinfo_rectifiercabinnet=$("input[name='siteinfo_rectifiercabinnet']:checked").val();
        siteinfoformdata.append("siteinfo_rectifiercabinnet", siteinfo_rectifiercabinnet);

        // if(siteinfo_rectifiercabinnet == "No"){
        //    var siteinfo_rectcabArray = [];
        //    siteinfoformdata.append("siteinfo_rectcabArray", JSON.stringify(siteinfo_rectcabArray));
        // }else{
        //  var siteinfo_rectcabArray = rectcabArray;
        //  siteinfoformdata.append("siteinfo_rectcabArray", JSON.stringify(siteinfo_rectcabArray));
        // }


        var siteinfo_rectcabArray = rectcabArray;
          if(siteinfo_rectcabArray.length != 0){

            for(var i = 0; i < siteinfo_rectcabArray.length; i++){

                var siteinfo_rectcabcabinetmodelno = siteinfo_rectcabArray[i].siteinfo_rectcabcabinetmodelno
                siteinfoformdata.append("siteinfo_rectcabcabinetmodelno", siteinfo_rectcabcabinetmodelno);

                var siteinfo_rectcabcabinetnumber = siteinfo_rectcabArray[i].siteinfo_rectcabcabinetnumber
                siteinfoformdata.append("siteinfo_rectcabcabinetnumber", siteinfo_rectcabcabinetnumber);

                var siteinfo_rectcabtype = siteinfo_rectcabArray[i].siteinfo_rectcabtype
                siteinfoformdata.append("siteinfo_rectcabtype", siteinfo_rectcabtype);

                var siteinfo_rectcabinputtype = siteinfo_rectcabArray[i].siteinfo_rectcabinputtype
                siteinfoformdata.append("siteinfo_rectcabinputtype", siteinfo_rectcabinputtype);

                var siteinfo_rectcabnobatteries = siteinfo_rectcabArray[i].siteinfo_rectcabnobatteries
                siteinfoformdata.append("siteinfo_rectcabnobatteries", siteinfo_rectcabnobatteries);

                var siteinfo_rectcabbatterycapac = siteinfo_rectcabArray[i].siteinfo_rectcabbatterycapac
                siteinfoformdata.append("siteinfo_rectcabbatterycapac", siteinfo_rectcabbatterycapac);

            }
          }

        

      //security
        var siteinfo_fencing=$("input[name='siteinfo_fencing']:checked").val();
        siteinfoformdata.append("siteinfo_fencing", siteinfo_fencing);

        var siteinfo_fencingelectrified=$("input[name='siteinfo_fencingelectrified']:checked").val();
        siteinfoformdata.append("siteinfo_fencingelectrified", siteinfo_fencingelectrified);

        var siteinfo_guardsite=$("input[name='siteinfo_guardsite']:checked").val();
        siteinfoformdata.append("siteinfo_guardsite", siteinfo_guardsite);

        // if(siteinfo_guardsite == "No"){
        //    var siteinfo_securityArray = [];
        //    siteinfoformdata.append("siteinfo_securityArray", JSON.stringify(siteinfo_securityArray));
        // }else{
        //  var siteinfo_securityArray = securityArray;
        //  siteinfoformdata.append("siteinfo_securityArray", JSON.stringify(siteinfo_securityArray));
        // }


        var siteinfo_securityArray = securityArray;
          if(siteinfo_securityArray.length != 0){

            for(var i = 0; i < siteinfo_securityArray.length; i++){

                var siteinfo_secguardname = siteinfo_securityArray[i].siteinfo_secguardname
                siteinfoformdata.append("siteinfo_secguardname", siteinfo_secguardname);

                var siteinfo_secbinumber = siteinfo_securityArray[i].siteinfo_secbinumber
                siteinfoformdata.append("siteinfo_secbinumber", siteinfo_secbinumber);

                var siteinfo_secnib = siteinfo_securityArray[i].siteinfo_secnib
                siteinfoformdata.append("siteinfo_secnib", siteinfo_secnib);

                var siteinfo_secvalue = siteinfo_securityArray[i].siteinfo_secvalue
                siteinfoformdata.append("siteinfo_secvalue", siteinfo_secvalue);

            }
          }

      //electricity
      var siteinfo_elecsupptype=$("input[name='siteinfo_elecsupptype']:checked").val();
      siteinfoformdata.append("siteinfo_elecsupptype", siteinfo_elecsupptype);

      var siteinfo_electype=$("input[name='siteinfo_electype']:checked").val();
      siteinfoformdata.append("siteinfo_electype", siteinfo_electype);

      var siteinfo_elecpayment=$("#siteinfo_elecpayment").val();
      siteinfoformdata.append("siteinfo_elecpayment", siteinfo_elecpayment);

      if(siteinfo_elecpayment == "EDM Prepaid/Credelec"){
        var siteinfo_credelec=$("#siteinfo_credelec").val();
        siteinfoformdata.append("siteinfo_credelec", siteinfo_credelec);
      }else{
        var siteinfo_credelec="";
        siteinfoformdata.append("siteinfo_credelec", siteinfo_credelec);
      }

     


      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST',rule, true);
      xhr.send(siteinfoformdata);

      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){
       window.location.href="/manutencao/siteinfohome";
      }, 3000);

    });

      

    }

  });


$('#captarSite').click(function(){
  if(validar()){
    
    
      // e.preventDefault();
  // 		// ++++++++++++++++++++++++++++++++++++
      // var formData = new FormData();
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      // 	formData.append(' file_'+i, files[i]);
      // }

      // var xhr = new XMLHttpRequest();
      // // Add any event handlers here...
      // xhr.open('POST', "/gerador/novo", true);
      // xhr.send(formData);

  // 		return false; 

  // 		//++++++++++++++++++++++++ 

              var detalhes=$("#msform").serialize();
              var id1=$("#operator").val();
              var id2=$("#ticketNumber").val();
              var id3=$("#siteNumber").val();
              var regra=id2+"/"+id3
              

              $.post("/gerador/novo", detalhes, function(data){
                
                   console.log("executado coom sucesso")		
              })
        $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
      $('#image_modal').openModal();
              
              setTimeout(function(){
        window.location.href="/gerador/continuacao/"+regra;
      }, 1000)
              
                
                
    
  }
});




  $('#captarSite1').click(function(){

    var tobedoneby=$("#tobedoneby").val();
    var dateChecked=$("#dateChecked").val();
    var dateplanned=$("#dateplanned").val();
    var ticketNumber=$("#ticketNumber").val();
    var siteNumber=$("#siteNumber").val();
    var siteName=$("#siteName").val();
    var siteType=$("#siteType").val();
    var maintenanceofficer=$("#maintenanceofficer").val();
    var regiaoselmec=$("#regiaoselmec").val();


  if((tobedoneby == "") || (dateChecked == "") || (dateplanned == "") || (ticketNumber == "") || (siteNumber == null) || (siteName == "") || (siteType == "") || (maintenanceofficer == "") || (regiaoselmec == "")){
    
    $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
    $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Preencha todos os campos':'Fill in all the fields') +"!")
    $('#msg_modal').openModal({dismissible:false});
    
  }else{

    var siteinspformdata = new FormData();
    var rule="/gerador/novoregisto";

    siteinspformdata.append("tobedoneby", tobedoneby);
    siteinspformdata.append("dateChecked", dateChecked);
    siteinspformdata.append("dateplanned", dateChecked);
    siteinspformdata.append("ticketNumber", ticketNumber);
    siteinspformdata.append("siteNumber", siteNumber);
    siteinspformdata.append("siteName", siteName);
    siteinspformdata.append("siteType", siteType);
    siteinspformdata.append("maintenanceofficer", maintenanceofficer);
    siteinspformdata.append("regiaoselmec", regiaoselmec);

    var dateplannedsplit = dateplanned.split('/');
    var diaplanned = parseInt(dateplannedsplit[0]);
    var mesplanned = parseInt(dateplannedsplit[1]);
    var anoplanned = parseInt(dateplannedsplit[2]);

    var mesplaneado = mesplanned - 1;
    siteinspformdata.append("mesplaneado", mesplaneado);

    var anoplaneado = anoplanned;
    siteinspformdata.append("anoplaneado", anoplaneado);

    var dataPlaneada2 = (new Date(anoplanned, mesplaneado, diaplanned).getTime());
    siteinspformdata.append("dataPlaneada2", dataPlaneada2);

    var quatrodias = 86400000 * 4;
    var diaDepois = dataPlaneada2 + quatrodias;
    siteinspformdata.append("diaDepois", diaDepois);

    var espera = true;
    siteinspformdata.append("espera", espera);

    var dateCheckedsplit = dateChecked.split('/');
    var diaChecked = parseInt(dateCheckedsplit[0]);
    var mesChecked = parseInt(dateCheckedsplit[1]) - 1;
    var anoChecked = parseInt(dateCheckedsplit[2]);

    var datacomp = (new Date(anoChecked, mesChecked, diaChecked).getTime());

    if(datacomp > diaDepois){
      status = "Delayed Inspection";
    }else{
      status = "Awaiting Inspection";
    }
    siteinspformdata.append("status", status);

    var siteinsp_audittrail = [];
    var siteinsp_audittrailObject = {};

    var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

    siteinsp_audittrailObject.siteinsp_audittrailname = tobedoneby;
    siteinsp_audittrailObject.siteinsp_audittraildate = dateChecked + " " + todayhours;
    siteinsp_audittrailObject.siteinsp_audittrailaction = "Create Site Inspection";
    siteinsp_audittrail.push(siteinsp_audittrailObject);

    siteinspformdata.append("siteinsp_audittrail", JSON.stringify(siteinsp_audittrail));

    var xhr = new XMLHttpRequest();
    // Add any event handlers here...
    xhr.open('POST',rule, true);
    xhr.send(siteinspformdata);

    $('#loading').fadeIn().delay(20000).fadeOut();
    setTimeout(function(){
      window.location.href="/gerador/seguranca";
    }, 1000)

  }
});

$('#update_checkedby').click(function(){
  
    

    //var detalhes=$("#msform").serialize();
    //var id1=$("#tobedoneby").val();
    var identific=$("#localizar").attr("data");
    var tobedoneby=$("#tobedoneby").val();
    
    console.log(identific);
        
        $.post("/gerador/editarcheckedby", {tobedoneby:tobedoneby, identific:identific}, function(data){
          
             console.log("executado coom sucesso")		
        });
  /*//$('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
  //$('#image_modal').openModal();*/
        
        setTimeout(function(){
  window.location.href="/gerador/info/details/"+identific;
  }, 1000)
          
                
                
    
  
});

$("#atribuir_viatura").click(function(){
$('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente atribuir a viatura ao  <b>':'Do you really want to give vehicle to  <b>') + $("#beneficiario").val()+"</b> ?")
    $('#yes_no_modal').openModal({dismissible:false});
  $('#no_btn_modal_').click(function(){ window.location.href="/ferramenta"; });
  $('#yes_btn_modal').click(function(e){
     e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();

    var rule="/ferramenta/atribuicao";

     var atribuicao= new FormData();

     var dataInserida=$("#condutor").attr("datainserted");
     atribuicao.append("dataInserida", dataInserida);

     var kilometragem=$("#kilometragem").val();
     atribuicao.append("kilometragem", kilometragem);
     var usado_por= $("#condutor").val();
     atribuicao.append("usado_por", usado_por);
     var marca=$("#marca").val();
     atribuicao.append("marca", marca)
     var beneficiario=$("#beneficiario").val();
     atribuicao.append("beneficiario", beneficiario);
     var matricula= $("#matricula").val();
     atribuicao.append("matricula", matricula);
     var modelo=$("#modelo").val();
     atribuicao.append("modelo", modelo);

    

     var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST',rule, true);
      xhr.send(atribuicao);

       console.log(kilometragem,usado_por,marca, beneficiario);
       setTimeout(function(){
  window.location.href="/inspdiaria";
  }, 2000)

  })
});

$('#procurarPettyCash').click(function(){

      var mesfrom = parseInt($("#mesfrom").val());
      var anofrom = parseInt($("#anofrom").val());
      var mesto = parseInt($("#mesto").val());
      var anoto = parseInt($("#anoto").val());

      var nomepettycash = $("#viewpettycash_nome").val().split(' ');
      var nome = nomepettycash[0] + '_' + nomepettycash[1];

      if(anofrom == anoto){

        if(mesfrom > mesto){

          $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O intervalo escolhido é invalido. Escolha outro.':'The chosen range is invalid. Choose another.'));
          $('#msg_modal').openModal();

        }else{

          window.location.href="/pettycash/detalhesUso/" + nome + "/" + mesfrom + "_" + anofrom + "_to_" + mesto + "_" + anoto;
        
        }
      }else
          if(anofrom > anoto){
            $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
            $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O intervalo escolhido é invalido. Escolha outro.':'The chosen range is invalid. Choose another.'));
            $('#msg_modal').openModal();
          }else{
            window.location.href="/pettycash/detalhesUso/" + nome + "/" + mesfrom + "_" + anofrom + "_to_" + mesto + "_" + anoto;
        
          }

    });


$('#captarPettycash').click(function(){

      var saldodisp =$("#captarPettycash").attr("saldodisponivel");
      var pettycash_value=$("#pettycash_value").val();
      
      var comparador = saldodisp - pettycash_value;
      if(comparador < 0){
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
        $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'O seu saldo é insuficiente para esta transacção.':'Your balance is insufficient for this transaction.'));
        $('#msg_modal').openModal();
      }else{

          
          $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
          $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar este registro':'Do you really want to save this record') + "?")
          $('#yes_no_modal').openModal({dismissible:false});
          $('#yes_btn_modal').click(function(e){
            e.stopPropagation();
            e.stopImmediatePropagation();

            var pettycashformdata = new FormData();
            var rule="/pettycash/novoregistro";

            var pettycashuser_nome=$("#pettycash_nome").val();
            pettycashformdata.append("pettycashuser_nome", pettycashuser_nome);

            // var pettycash_region=$("#pettycash_region").val();
            // pettycashformdata.append("pettycash_region", pettycash_region);

            var pettycashuser_code=$("#user_code").val();
            pettycashformdata.append("pettycashuser_code", pettycashuser_code);

            var pettycash_data=$("#pettycash_creationdate").val();
            pettycashformdata.append("pettycash_data", pettycash_data);

            var pettycash_anoFiscal=$("#pettycash_financialyear").val();
            pettycashformdata.append("pettycash_anoFiscal", pettycash_anoFiscal);

            var pettycash_ano = pettycash_data.split("/")[2];
            pettycashformdata.append("pettycash_ano", parseInt(pettycash_ano));

            var pettycash_mes = pettycash_data.split("/")[1];
            pettycashformdata.append("pettycash_mes", parseInt(pettycash_mes));

            var pettycash_credito = "-";
            pettycashformdata.append("pettycash_credito", pettycash_credito);

            var pettycash_debito = $("#pettycash_value").val();
            pettycashformdata.append("pettycash_debito", pettycash_debito);

            var pettycash_saldo = comparador;
            pettycashformdata.append("pettycash_saldo", pettycash_saldo);

            var pettycash_notas = "";
            pettycashformdata.append("pettycash_notas", pettycash_notas);

            var pettycash_pur= [];
            var pettycash_purchaseObj = {};

            pettycash_purchaseObj.purchase_date = $("#pettycash_date").val();
            pettycash_purchaseObj.purchase_description=$("#pettycash_description").val();
            pettycash_purchaseObj.purchase_value=$("#pettycash_value").val();
            pettycash_purchaseObj.purchase_supplier=$("#pettycash_supplier").val();
            pettycash_purchaseObj.purchase_docno=$("#pettycash_docno").val();
            pettycash_purchaseObj.purchase_comments=$("#pettycash_comments").val();
            pettycash_purchaseObj.purchase_imagem=[];

            pettycash_pur.push(pettycash_purchaseObj);

            var pettycash_purchase = pettycash_pur;
            pettycashformdata.append("pettycash_purchase", JSON.stringify(pettycash_purchase));

            var pettycash_imagem = arrPettycash_imagem;
            if(pettycash_imagem.length!=0){
              for(let i = 0, j = pettycash_imagem.length; i<j;i++){
                pettycashformdata.append('pettycash_imagem', pettycash_imagem[i]);
              }
            }


            var xhr = new XMLHttpRequest();
            // Add any event handlers here...
            xhr.open('POST',rule, true);
            xhr.send(pettycashformdata);

            $('#loading').fadeIn().delay(15000).fadeOut();
            setTimeout(function(){
           window.location.href="/pettycash/accountcontrol_home";
          }, 5000);


          });
    }

  });


$('#captarSafety').click(function(){


  var rul=$(this).attr("dataref");
  var el=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");

  console.log(numeroSite)
  console.log(el)

  var veiculo_safe=$("input[name='veiculo_safe']:checked").val();
  var people_safe=$("input[name='people_safe']:checked").val();
  var red_hat=$("input[name='red_hat']:checked").val();
  var fall_Arrest_devices=$("input[name='fall_Arrest_devices']:checked").val();



  if ((!veiculo_safe) || (!people_safe) || (!red_hat) || (!fall_Arrest_devices)) { 

     $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Campo Não Preenchido.':'Field Not Filled.<b>') + (($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"))
      $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor preencha todos os campos.':'Please fill in all fields. <b>') + (($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
      $('#msg_modal').openModal();

  }else{

      $('#yes_no_title_modal').html('Mensagem de registo')
       $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a informação ':'Do you really want to save <b>') + (($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
       $('#yes_no_modal').openModal();
       // $('#no_btn_modal_').click(function(){window.location.href="#";});
       $('#yes_btn_modal').click(function(e){
         e.stopPropagation();
          e.stopImmediatePropagation();

         rul ="/gerador/seguranca/"+ rul + "/" + numeroSite;
         // console.log(rul)

          
         var formData = new FormData();

    
         formData.append('veiculo_safe', veiculo_safe);
         var veiculo_safe_comment=$("#veiculo_safe_comment").val();
         formData.append('veiculo_safe_comment', veiculo_safe_comment);
         var veiculo_safe_image=arrVeiculoSafe;
         if(veiculo_safe_image.length!=0){
         for(let i = 0, j = veiculo_safe_image.length; i<j;i++){
           formData.append('veiculo_safe_image', veiculo_safe_image[i]);
         }}

      
         formData.append('people_safe', people_safe);
         var people_safe_comment=$("#people_safe_comment").val();
         formData.append('people_safe_comment', people_safe_comment);
         var People_safe_image=arrPeopleSafe;
         if(People_safe_image.length!=0){
         for(let i = 0, j = People_safe_image.length; i<j;i++){
           formData.append('People_safe_image', People_safe_image[i]);
         }}
          

         formData.append('red_hat', red_hat);
         var red_hat_comment=$("#red_hat_comment").val();
         formData.append('red_hat_comment', red_hat_comment);
         var red_hat_image=arrRedHat;
         if(red_hat_image.length!=0){
         for(let i = 0, j = red_hat_image.length; i<j;i++){
           formData.append('red_hat_image', red_hat_image[i]);
         }}

      
         formData.append('fall_Arrest_devices', fall_Arrest_devices);
         var fall_Arrest_devices_comment=$("#fall_Arrest_devices_comment").val();
         formData.append('fall_Arrest_devices_comment', fall_Arrest_devices_comment);
         var fall_Arrest_devices_image=arrfallArrestDevices;
         if(fall_Arrest_devices_image.length!=0){
         for(let i = 0, j = fall_Arrest_devices_image.length; i<j;i++){
           formData.append('fall_Arrest_devices_image', fall_Arrest_devices_image[i]);
         }}

         var siteinsp_audittrailObject = {};

          var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
          var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
          var ano = (new Date()).getFullYear();
          var todaydate = dia + "/" + mes + "/" + ano;
          var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update Safety Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));

         // +++++++++++++++++++++++++++++++++++
         // var files=$("#nome_pai").get(0).files;
         // for(let i = 0, j = files.length; i<j;i++){
         //  formData.append(' file_'+i, files[i]);
         // }

         var xhr = new XMLHttpRequest();
         // Add any event handlers here...
         xhr.open('POST', rul, true);
         xhr.send(formData);
        
          $('#loading').fadeIn().delay(20000).fadeOut();
         setTimeout(function(){

           window.location.href="/gerador/edboard/"+el
         }, 10000);

         //++++++++++++++++++++++++ 

                 // var detalhes=$("#msform").serialize();
                 // $.post("/gerador/novo", detalhes, function(data){
                 //  window.location.href="/gerador";        
                 // })
                  
       });

    }
});

$('.dropdown-trigger').dropdown({
  inDuration: 300,
  outDuration: 225,
  constrainWidth: false, // Does not change width of dropdown to that of the activator
  click: true, // Activate on hover
  gutter: 0, // Spacing from edge
  belowOrigin: false, // Displays dropdown below the button
  alignment: 'left', // Displays dropdown with edge aligned to the left of button
  stopPropagation: false // Stops event propagation
}
);


$('#captarSafetyDetalhes').click(function(){
  var el=$(this).attr("dataref");
  window.location.href="/gerador/eddboardss/details/"+el;
});



$('#captarRoofTop').click(function(){
  var rul=$(this).attr("dataref");
  var el=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");

  if(true){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar?')
    $('#yes_no_modal').openModal();
    // $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      rul ="/gerador/rooftop/" + rul + "/" + numeroSite;
      console.log(rul)
      
      var formData = new FormData();

      var mounting_poles=$("input[name='mounting_poles']:checked").val();
      formData.append('mounting_poles', mounting_poles);
      var mounting_poles_comment=$("#mounting_poles_comment").val();
      formData.append('mounting_poles_comment', mounting_poles_comment);
      var mounting_poles_image=arrMountingPoles;

      if(mounting_poles_image.length!=0){
      for(let i = 0, j = mounting_poles_image.length; i<j;i++){
        formData.append('mounting_poles_image', mounting_poles_image[i]);
      }}


      var poles_corrosions=$("input[name='poles_corrosions']:checked").val();
      formData.append('poles_corrosions', poles_corrosions);
      var poles_corrosions_comment=$("#poles_corrosions_comment").val();
      formData.append('poles_corrosions_comment', poles_corrosions_comment);
      var poles_corrosions_image=arrPolesCorrosions;


      if(poles_corrosions_image.length!=0){
      for(let i = 0, j = poles_corrosions_image.length; i<j;i++){
        formData.append('poles_corrosions_image', poles_corrosions_image[i]);
      }}

      
      

      var poles_earthed=$("input[name='poles_earthed']:checked").val();
      formData.append('poles_earthed', poles_earthed);
      var poles_earthed_comment=$("#poles_earthed_comment").val();
      formData.append('poles_earthed_comment', poles_earthed_comment);
      var poles_earthed_image=arrPolesEarthed;
      if(poles_earthed_image.length!=0){
      for(let i = 0, j = poles_earthed_image.length; i<j;i++){
        formData.append('poles_earthed_image', poles_earthed_image[i]);
      }}

      

      var cabinet_damage=$("input[name='cabinet_damage']:checked").val();
      formData.append('cabinet_damage', cabinet_damage);
      var cabinet_damage_comment=$("#cabinet_damage_comment").val();
      formData.append('cabinet_damage_comment', cabinet_damage_comment);
      var cabinet_damage_image=arrCabinetDamage;
      if(cabinet_damage_image.length!=0){
      for(let i = 0, j = cabinet_damage_image.length; i<j;i++){
        formData.append('cabinet_damage_image', cabinet_damage_image[i]);
      }}

      

      var transmission_radio=$("input[name='transmission_radio']:checked").val();
      formData.append('transmission_radio', transmission_radio);
      var transmission_radio_comment=$("#transmission_radio_comment").val();
      formData.append('transmission_radio_comment', transmission_radio_comment);
      var transmission_radio_image=arrTransmissionRadioRF;
      if(transmission_radio_image.length!=0){
      for(let i = 0, j = transmission_radio_image.length; i<j;i++){
        formData.append('transmission_radio_image', transmission_radio_image[i]);
      }}

      

    var siteinsp_audittrailObject = {};

      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var todaydate = dia + "/" + mes + "/" + ano;
      var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update Rooftop Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));

      

      // +++++++++++++++++++++++++++++++++++
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      //  formData.append(' file_'+i, files[i]);
      // }

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(formData);
      // window.location.href="/gerador";
  //    return false; 
    // $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
    // $('#image_modal').openModal();
      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){
        
        window.location.href="/gerador/mast/"+el;
      }, 10000)
  //    //++++++++++++++++++++++++ 

              // var detalhes=$("#msform").serialize();
              // $.post("/gerador/novo", detalhes, function(data){
              //  window.location.href="/gerador";        
              // })
              
    })
  }
});

$('#captarRoofTopDetalhes').click(function(){
  var el=$(this).attr("dataref");
  window.location.href="/gerador/mast/details/"+el;
});

$("#registar_novoVeiculo").click(function(){

$('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente registar a viatura <b>':'Do you really want to save  vehicle <b>') +$("#matricula").val().toUpperCase()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b> ?"))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#no_btn_modal_').click(function(){ window.location.href="/veiculo_Control"; });
  $("#yes_btn_modal").click(function(e){
// var yu=$("#registar_acao").attr('datainserted')
e.preventDefault();

var rul="/veiculo_Control/novo";
var acao1 = new FormData();

var marca=$("#marca").val();
var modelo=$('#modelo').val();
acao1.append('marca', marca);
acao1.append('modelo', modelo);

var matricula=$('#matricula').val().toUpperCase();
acao1.append('matricula', matricula);

var kilometragem=$('#kilometragem').val();
acao1.append('kilometragem', kilometragem);

var provincia=$('#provincia').val();
acao1.append('provincia', provincia);

var regiao=$("#regiao").val();
acao1.append('regiao', regiao);

var ano_aquisicao=$("#ano_aquisicao").val();
acao1.append('ano_aquisicao', ano_aquisicao);


      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(acao1);

    $('#image_modal').html('<img class="center" style="; padding-top:; background-color:#808080" src="/img/selmecPreloader.gif">')
    $('#image_modal').openModal();
      setTimeout(function(){
        
        window.location.href="/veiculo_Control"
      }, 1000)
  });

});

$("#registar_novoCarro").click(function(){ 

$('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente registar <b>':'Do you really want to save  <b>') +$("#condutor").val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"'s</b> action?"))
  $('#yes_no_modal').openModal();
  $('#no_btn_modal_').click(function(){ window.location.href="/ferramenta"; });
  $("#yes_btn_modal").click(function(e){
// var yu=$("#registar_acao").attr('datainserted')
e.preventDefault();
var rul="/ferramenta/novo";
var acao1 = new FormData();
var condutor=$("#condutor").val();
acao1.append('responsavel',condutor);
var marca=$("#marca").val();
var modelo=$('#modelo').val();
acao1.append('modelo', modelo);
acao1.append('marca', marca);
var matricula=$('#matricula').val().toUpperCase();
acao1.append('matricula', matricula);
var kilometragem=$('#kilometragem').val();
acao1.append('kilometragem', kilometragem);
var local=$('#local').val();
acao1.append('local', local);
var regiao=$("#regiao").val();
acao1.append('regiao', regiao);
var ano_aquisicao=$("#ano_aquisicao").val();
acao1.append('ano_aquisicao', ano_aquisicao);


      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(acao1);

    $('#image_modal').html('<img class="center" style="width:40%; padding-top:15px; background-color:#808080" src="/img/selmecPreloader.gif">')
    $('#image_modal').openModal();
      setTimeout(function(){
        
        window.location.href="/ferramenta"
      }, 1000)
  });

});

$("#registar_acao").click(function(){

$('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente registar acção no veiculo de <b>':'Do you really want to save action on  <b>') +$("#motorista").val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"'s</b> vehicle?"))
  $('#yes_no_modal').openModal();
  // $('#no_btn_modal_').click(function(){ window.location.href="/inspdiaria"; });
  $("#yes_btn_modal").click(function(e){
// var yu=$("#registar_acao").attr('datainserted')
e.preventDefault();
var rul="/inspdiaria/remove/"+($("#motorista").attr('datainserted'));
var acao = new FormData();
var motorista=$("#motorista").val();
acao.append('motorista',motorista);
var dattta=$("#dattta").val();
acao.append('dattta', dattta);
var data_acao=$('#data_acao').val();
acao.append('data_acao', data_acao);
var razao_acao=$('#razao_acao').val();
acao.append('razao_acao', razao_acao);
var fleet_man=$('#fleet_man').val();
acao.append('fleet_man', fleet_man);
var tipo_acao=$('#tipo_acao').val();
acao.append('tipo_acao', tipo_acao);
// var lembrete=$('#lembrete').val();
// acao.append('lembrete', lembrete);
      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(acao);

    $('#image_modal').html('<img class="center" style="width:40%; padding-top:15px; background-color:#808080" src="/img/selmecPreloader.gif">')
    $('#image_modal').openModal();
      setTimeout(function(){
        
        window.location.href="/inspdiaria"
      }, 3000)
  });

});

$("#caso_resolvido").click(function(){

$('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Mensagem do Sistema':'System Message'))
  $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente registar acção no veiculo de <b>':'Do you really want to save action on  <b>') +$("#motorista").val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"'s</b> vehicle?"))
  $('#yes_no_modal').openModal();
  // $('#no_btn_modal_').click(function(){ window.location.href="/inspdiaria"; });
  $("#yes_btn_modal").click(function(e){
// var yu=$("#registar_acao").attr('datainserted')
e.preventDefault();
var caso_re=$("#motorista").val();
var rul="/inspdiaria/completar/"+caso_re;
window.location.href=rul;
      

    
  });

});

$('#captarContainer').click(function(){
  var el=$(this).attr("dataref");
  var rul=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");

  if(true){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar?')
    $('#yes_no_modal').openModal();
    // $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      rul ="/gerador/contentor/" + rul + "/" + numeroSite;
      console.log(rul)
      
      var formData = new FormData();

      var container_light=$("input[name='container_light']:checked").val();
      formData.append('container_light', container_light);
      var container_light_comment=$("#container_light_comment").val();
      formData.append('container_light_comment', container_light_comment);
      var container_light_image=arrContainerLight;
      if(container_light_image.length!=0){
      for(let i = 0, j = container_light_image.length; i<j;i++){
        formData.append('container_light_image', container_light_image[i]);
      }}
      

      var circuit_breaker=$("input[name='circuit_breaker']:checked").val();
      formData.append('circuit_breaker', circuit_breaker);
      var circuit_breaker_comment=$("#circuit_breaker_comment").val();
      formData.append('circuit_breaker_comment', circuit_breaker_comment);
      var circuit_breaker_image=arrCircuitBreaker;
      if(circuit_breaker_image.length!=0){
      for(let i = 0, j = circuit_breaker_image.length; i<j;i++){
        formData.append('circuit_breaker_image', circuit_breaker_image[i]);
      }}
      

      var earth_connections=$("input[name='earth_connections']:checked").val();
      formData.append('earth_connections', earth_connections);
      var earth_connections_comment=$("#earth_connections_comment").val();
      formData.append('earth_connections_comment', earth_connections_comment);
      var earth_connections_image=arrEarthConnections;
      if(earth_connections_image.length!=0){
      for(let i = 0, j = earth_connections_image.length; i<j;i++){
        formData.append('earth_connections_image', earth_connections_image[i]);
      }}

      var conditions=$("input[name='conditions']:checked").val();
      formData.append('conditions', conditions);
      var conditions_comment=$("#conditions_comment").val();
      formData.append('conditions_comment', conditions_comment);
      var conditions_image=arrConditions;
      if(conditions_image.length!=0){
      for(let i = 0, j = conditions_image.length; i<j;i++){
        formData.append('conditions_image', conditions_image[i]);
      }}

      var paintwork=$("input[name='paintwork']:checked").val();
      formData.append('paintwork', paintwork);
      var paintwork_comment=$("#paintwork_comment").val();
      formData.append('paintwork_comment', paintwork_comment);
      var paintwork_image=arrPaintwork;
      if(paintwork_image.length!=0){
      for(let i = 0, j = paintwork_image.length; i<j;i++){
        formData.append('paintwork_image', paintwork_image[i]);
      }}

      var roof_water=$("input[name='roof_water']:checked").val();
      formData.append('roof_water', roof_water);
      var roof_water_comment=$("#roof_water_comment").val();
      formData.append('roof_water_comment', roof_water_comment);
      var roof_water_image=arrRoofWater;
      if(roof_water_image.length!=0){
      for(let i = 0, j = roof_water_image.length; i<j;i++){
        formData.append('roof_water_image', roof_water_image[i]);
      }}

      var joints_cables_holes=$("input[name='joints_cables_holes']:checked").val();
      formData.append('joints_cables_holes', joints_cables_holes);
      var joints_cables_holes_comment=$("#joints_cables_holes_comment").val();
      formData.append('joints_cables_holes_comment', joints_cables_holes_comment);
      var joints_cables_holes_image=arrJointsCablesHoles;
      if(joints_cables_holes_image.length!=0){
      for(let i = 0, j = joints_cables_holes_image.length; i<j;i++){
        formData.append('joints_cables_holes_image', joints_cables_holes_image[i]);
      }}
      

      var transmission_radio=$("input[name='transmission_radio']:checked").val();
      formData.append('transmission_radio', transmission_radio);
      var transmission_radio_comment=$("#transmission_radio_comment").val();
      formData.append('transmission_radio_comment', transmission_radio_comment);
      var transmission_radio_image=arrTransmissionRadioCF;
      if(transmission_radio_image.length!=0){
      for(let i = 0, j = transmission_radio_image.length; i<j;i++){
        formData.append('transmission_radio_image', transmission_radio_image[i]);
      }}

      var siteinsp_audittrailObject = {};

      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var todaydate = dia + "/" + mes + "/" + ano;
      var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update Container Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));

      // +++++++++++++++++++++++++++++++++++
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      //  formData.append(' file_'+i, files[i]);
      // }

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(formData);
      // window.location.href="/gerador";
  //    return false; 
    // $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
    // $('#image_modal').openModal();
      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){
        
        window.location.href="/gerador/rooftop/"+el
      }, 10000)
  //    //++++++++++++++++++++++++ 

              // var detalhes=$("#msform").serialize();
              // $.post("/gerador/novo", detalhes, function(data){
              //  window.location.href="/gerador";        
              // })
              
    })
  }
});

$('#captarContainerDetalhes').click(function(){
  var el=$(this).attr("dataref");
  window.location.href="/gerador/rooftop/details/"+el;
});

$('#captarMast').click(function(){
  var el=$(this).attr("dataref");
  var rul=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");

  if(true){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar?')
    $('#yes_no_modal').openModal();
    // $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      rul ="/gerador/mast/" + rul + "/" + numeroSite;
      console.log(rul)
      
      var formData = new FormData();

      var aw_light=$("input[name='aw_light']:checked").val();
      formData.append('aw_light', aw_light);
      var aw_light_comment=$("#aw_light_comment").val();
      formData.append('aw_light_comment', aw_light_comment);
      var aw_light_image=arrAwLight;
      if(aw_light_image.length!=0){
      for(let i = 0, j = aw_light_image.length; i<j;i++){
        formData.append('aw_light_image', aw_light_image[i]);
      }}

      var aw_light_db_fitting=$("input[name='aw_light_db_fitting']:checked").val();
      formData.append('aw_light_db_fitting', aw_light_db_fitting);
      var aw_light_db_fitting_comment=$("#aw_light_db_fitting_comment").val();
      formData.append('aw_light_db_fitting_comment', aw_light_db_fitting_comment);
      var aw_light_db_fitting_image=arrAwLightDbFitting;
      if(aw_light_db_fitting_image.length!=0){
      for(let i = 0, j = aw_light_db_fitting_image.length; i<j;i++){
        formData.append('aw_light_db_fitting_image', aw_light_db_fitting_image[i]);
      }}
      

      var tower_inspection=$("input[name='tower_inspection']:checked").val();
      formData.append('tower_inspection', tower_inspection);
      var tower_inspection_comment=$("#tower_inspection_comment").val();
      formData.append('tower_inspection_comment', tower_inspection_comment);
      var tower_inspection_image=arrTowerInspection;
      if(tower_inspection_image.length!=0){
      for(let i = 0, j = tower_inspection_image.length; i<j;i++){
        formData.append('tower_inspection_image', tower_inspection_image[i]);
      }}

      var paint_tower=$("input[name='paint_tower']:checked").val();
      formData.append('paint_tower', paint_tower);
      var paint_tower_comment=$("#paint_tower_comment").val();
      formData.append('paint_tower_comment', paint_tower_comment);
      var paint_tower_image=arrPaintTower;
      if(paint_tower_image.length!=0){
      for(let i = 0, j = paint_tower_image.length; i<j;i++){
        formData.append('paint_tower_image', paint_tower_image[i]);
      }}

      var visual_inpection_trans_radio=$("input[name='visual_inpection_trans_radio']:checked").val();
      formData.append('visual_inpection_trans_radio', visual_inpection_trans_radio);
      var visual_inpection_trans_radio_comment=$("#visual_inpection_trans_radio_comment").val();
      formData.append('visual_inpection_trans_radio_comment', visual_inpection_trans_radio_comment);
      var visual_inpection_trans_radio_image=arrVisualInpectionTransRadio;
      if(visual_inpection_trans_radio_image.length!=0){
      for(let i = 0, j = visual_inpection_trans_radio_image.length; i<j;i++){
        formData.append('visual_inpection_trans_radio_image', visual_inpection_trans_radio_image[i]);
      }}

      var tower_specification=$("input[name='tower_specification']:checked").val();
      formData.append('tower_specification', tower_specification);
      var tower_specification_comment=$("#tower_specification_comment").val();
      formData.append('tower_specification_comment', tower_specification_comment);
      var tower_specification_image=arrTowerSpecification;
      if(tower_specification_image.length!=0){
      for(let i = 0, j = tower_specification_image.length; i<j;i++){
        formData.append('tower_specification_image', tower_specification_image[i]);
      }}
      

      var siteinsp_audittrailObject = {};

      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var todaydate = dia + "/" + mes + "/" + ano;
      var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update Mast Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));
      

      // +++++++++++++++++++++++++++++++++++
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      //  formData.append(' file_'+i, files[i]);
      // }

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(formData);
      // window.location.href="/gerador";
  //    return false; 
    // $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
    // $('#image_modal').openModal();
      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){
        window.location.href="/gerador/arcond/"+el;
      }, 10000)
  //    //++++++++++++++++++++++++ 

              // var detalhes=$("#msform").serialize();
              // $.post("/gerador/novo", detalhes, function(data){
              //  window.location.href="/gerador";        
              // })
              
    })
  }
});


$('#captarMastDetalhes').click(function(){
  var el=$(this).attr("dataref");
  window.location.href="/gerador/arcond/details/"+el;
});


$('#captarArCond').click(function(){
  var el=$(this).attr("dataref");
  var rul=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");

  if(true){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar?')
    $('#yes_no_modal').openModal();
    // $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      rul ="/gerador/arcond/" + rul + "/" + numeroSite;
      console.log(rul)
      
      var formData = new FormData();

      var fan_blade=$("input[name='fan_blade']:checked").val();
      formData.append('fan_blade', fan_blade);
      var fan_blade_comment=$("#fan_blade_comment").val();
      formData.append('fan_blade_comment', fan_blade_comment);
      var fan_blade_image=arrFanBlade;
      if(fan_blade_image.length!=0){
      for(let i = 0, j = fan_blade_image.length; i<j;i++){
        formData.append('fan_blade_image', fan_blade_image[i]);
      }}

      var noise_vibration=$("input[name='noise_vibration']:checked").val();
      formData.append('noise_vibration', noise_vibration);
      var noise_vibration_comment=$("#noise_vibration_comment").val();
      formData.append('noise_vibration_comment', noise_vibration_comment);
      var noise_vibration_image=arrNoiseVibration;
      if(noise_vibration_image.length!=0){
      for(let i = 0, j = noise_vibration_image.length; i<j;i++){
        formData.append('noise_vibration_image', noise_vibration_image[i]);
      }}
      

      var refrigerant_line=$("input[name='refrigerant_line']:checked").val();
      formData.append('refrigerant_line', refrigerant_line);
      var refrigerant_line_comment=$("#refrigerant_line_comment").val();
      formData.append('refrigerant_line_comment', refrigerant_line_comment);
      var refrigerant_line_image=arrRefrigerantLine;
      if(refrigerant_line_image.length!=0){
      for(let i = 0, j = refrigerant_line_image.length; i<j;i++){
        formData.append('refrigerant_line_image', refrigerant_line_image[i]);
      }}

      var casing_sealed=$("input[name='casing_sealed']:checked").val();
      formData.append('casing_sealed', casing_sealed);
      var casing_sealed_comment=$("#casing_sealed_comment").val();
      formData.append('casing_sealed_comment', casing_sealed_comment);
      var casing_sealed_image=arrCasingSealed;
      if(casing_sealed_image.length!=0){
      for(let i = 0, j = casing_sealed_image.length; i<j;i++){
        formData.append('casing_sealed_image', casing_sealed_image[i]);
      }}

      var rust=$("input[name='rust']:checked").val();
      formData.append('rust', rust);
      var rust_comment=$("#rust_comment").val();
      formData.append('rust_comment', rust_comment);
      var rust_image=arrRustACF;
      if(rust_image.length!=0){
      for(let i = 0, j = rust_image.length; i<j;i++){
        formData.append('rust_image', rust_image[i]);
      }}

      

      var siteinsp_audittrailObject = {};

      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var todaydate = dia + "/" + mes + "/" + ano;
      var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update AirCond Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));
      

      // +++++++++++++++++++++++++++++++++++
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      //  formData.append(' file_'+i, files[i]);
      // }

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(formData);
      // window.location.href="/gerador";
  //    return false; 
    // $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
    // $('#image_modal').openModal();
      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){
        
        window.location.href="/gerador/sitegeneral/"+el;
      }, 10000)
  //    //++++++++++++++++++++++++ 

              // var detalhes=$("#msform").serialize();
              // $.post("/gerador/novo", detalhes, function(data){
              //  window.location.href="/gerador";        
              // })
              
    })
  }
});


$('#captarArCondDetalhes').click(function(){
  var el=$(this).attr("dataref");
  window.location.href="/gerador/general_site/details/"+el;
});

$('#captarGenerator').click(function(){
var el=$(this).attr("dataref");
  var rul=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");

  if(true){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar?')
    $('#yes_no_modal').openModal();
    // $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      rul ="/gerador/generator/" + rul + "/" + numeroSite;
      console.log(rul)
      
      var formData = new FormData();
      var generator_current_hours=$("#generator_current_hours").val();
      formData.append('generator_current_hours', generator_current_hours);

      var generator_fuel_level=$("#generator_fuel_level").val();
      formData.append('generator_fuel_level', generator_fuel_level);


      var engine_oil=$("input[name='engine_oil']:checked").val();
      formData.append('engine_oil', engine_oil);
      var engine_oil_comment=$("#engine_oil_comment").val();
      formData.append('engine_oil_comment', engine_oil_comment);
      var engine_oil_image=arrEngineOil;
      if(engine_oil_image.length!=0){
      for(let i = 0, j = engine_oil_image.length; i<j;i++){
        formData.append('engine_oil_image', engine_oil_image[i]);
      }}
      

      var oil_leak=$("input[name='oil_leak']:checked").val();
      formData.append('oil_leak', oil_leak);
      var oil_leak_comment=$("#oil_leak_comment").val();
      formData.append('oil_leak_comment', oil_leak_comment);
      var oil_leak_image=arrOilLeak;
      if(oil_leak_image.length!=0){
      for(let i = 0, j = oil_leak_image.length; i<j;i++){
        formData.append('oil_leak_image', oil_leak_image[i]);
      }}

      var radiator_hoses=$("input[name='radiator_hoses']:checked").val();
      formData.append('radiator_hoses', radiator_hoses);
      var radiator_hoses_comment=$("#radiator_hoses_comment").val();
      formData.append('radiator_hoses_comment', radiator_hoses_comment);
      var radiator_hoses_image=arrRadiatorHoses;
      if(radiator_hoses_image.length!=0){
      for(let i = 0, j = radiator_hoses_image.length; i<j;i++){
        formData.append('radiator_hoses_image', radiator_hoses_image[i]);
      }}

      var air_filter=$("input[name='air_filter']:checked").val();
      formData.append('air_filter', air_filter);
      var air_filter_comment=$("#air_filter_comment").val();
      formData.append('air_filter_comment', air_filter_comment);
      var air_filter_image=arrAirFilter;
      if(air_filter_image.length!=0){
      for(let i = 0, j = air_filter_image.length; i<j;i++){
        formData.append('air_filter_image', air_filter_image[i]);
      }}

      var coolant_leaks=$("input[name='coolant_leaks']:checked").val();
      formData.append('coolant_leaks', coolant_leaks);
      var coolant_leaks_comment=$("#coolant_leaks_comment").val();
      formData.append('coolant_leaks_comment', coolant_leaks_comment);
      var coolant_leaks_image=arrCoolantLeaks;
      if(coolant_leaks_image.length!=0){
      for(let i = 0, j = coolant_leaks_image.length; i<j;i++){
        formData.append('coolant_leaks_image', coolant_leaks_image[i]);
      }}
      

      var v_belt=$("input[name='v_belt']:checked").val();
      formData.append('v_belt', v_belt);
      var v_belt_comment=$("#v_belt_comment").val();
      formData.append('v_belt_comment', v_belt_comment);
      var v_belt_image=arrVBelt;
      if(v_belt_image.length!=0){
      for(let i = 0, j = v_belt_image.length; i<j;i++){
        formData.append('v_belt_image', v_belt_image[i]);
      }}

      var fuel_leaks=$("input[name='fuel_leaks']:checked").val();
      formData.append('fuel_leaks', fuel_leaks);
      var fuel_leaks_comment=$("#fuel_leaks_comment").val();
      formData.append('fuel_leaks_comment', fuel_leaks_comment);
      var fuel_leaks_image=arrFuelLeaks;
      if(fuel_leaks_image.length!=0){
      for(let i = 0, j = fuel_leaks_image.length; i<j;i++){
        formData.append('fuel_leaks_image', fuel_leaks_image[i]);
      }}

      var electrolyte_connection_cond=$("input[name='electrolyte_connection_cond']:checked").val();
      formData.append('electrolyte_connection_cond', electrolyte_connection_cond);
      var electrolyte_connection_cond_comment=$("#electrolyte_connection_cond_comment").val();
      formData.append('electrolyte_connection_cond_comment', electrolyte_connection_cond_comment);
      var electrolyte_connection_cond_image=arrElectrolyteConnectionCond;
      if(electrolyte_connection_cond_image.length!=0){
      for(let i = 0, j = electrolyte_connection_cond_image.length; i<j;i++){
        formData.append('electrolyte_connection_cond_image', electrolyte_connection_cond_image[i]);
      }}

      var switcher_breaker=$("input[name='switcher_breaker']:checked").val();
      formData.append('switcher_breaker', switcher_breaker);
      var switcher_breaker_comment=$("#switcher_breaker_comment").val();
      formData.append('switcher_breaker_comment', switcher_breaker_comment);
      var switcher_breaker_image=arrSwitcherBreaker;
      if(switcher_breaker_image.length!=0){
      for(let i = 0, j = switcher_breaker_image.length; i<j;i++){
        formData.append('switcher_breaker_image', switcher_breaker_image[i]);
      }}

      var control_panel_record_level=$("input[name='control_panel_record_level']:checked").val();
      formData.append('control_panel_record_level', control_panel_record_level);
      var control_panel_record_level_comment=$("#control_panel_record_level_comment").val();
      formData.append('control_panel_record_level_comment', control_panel_record_level_comment);
      var control_panel_record_level_image=arrControlPanelRecordLevel;
      if(control_panel_record_level_image.length!=0){
      for(let i = 0, j = control_panel_record_level_image.length; i<j;i++){
        formData.append('control_panel_record_level_image', control_panel_record_level_image[i]);
      }}

      var abnormal_vibrations=$("input[name='abnormal_vibrations']:checked").val();
      formData.append('abnormal_vibrations', abnormal_vibrations);
      var abnormal_vibrations_comment=$("#abnormal_vibrations_comment").val();
      formData.append('abnormal_vibrations_comment', abnormal_vibrations_comment);
      var abnormal_vibrations_image=arrAbnormalVibrations;
      if(abnormal_vibrations_image.length!=0){
      for(let i = 0, j = abnormal_vibrations_image.length; i<j;i++){
        formData.append('abnormal_vibrations_image', abnormal_vibrations_image[i]);
      }}

      var rust=$("input[name='rust']:checked").val();
      formData.append('rust', rust);
      var rust_comment=$("#rust_comment").val();
      formData.append('rust_comment', rust_comment);
      var rust_image=arrRustGF;
      if(rust_image.length!=0){
      for(let i = 0, j = rust_image.length; i<j;i++){
        formData.append('rust_image',rust_image[i]);
      }}

      var overal_cond=$("input[name='overal_cond']:checked").val();
      formData.append('overal_cond', overal_cond);
      var overal_cond_comment=$("#overal_cond_comment").val();
      formData.append('overal_cond_comment', overal_cond_comment);
      var overal_cond_image=arrOveralCond;
      if(overal_cond_image.length!=0){
      for(let i = 0, j = overal_cond_image.length; i<j;i++){
        formData.append('overal_cond_image', overal_cond_image[i]);
      }}

      var moutings_brackets=$("input[name='moutings_brackets']:checked").val();
      formData.append('moutings_brackets', moutings_brackets);
      var moutings_brackets_comment=$("#moutings_brackets_comment").val();
      formData.append('moutings_brackets_comment', moutings_brackets_comment);
      var moutings_brackets_image=arrMoutingsBrackets;
      if(moutings_brackets_image.length!=0){
      for(let i = 0, j = moutings_brackets_image.length; i<j;i++){
        formData.append('moutings_brackets_image', moutings_brackets_image[i]);
      }}
      

      var siteinsp_audittrailObject = {};

      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var todaydate = dia + "/" + mes + "/" + ano;
      var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update Generator Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));

      


      // +++++++++++++++++++++++++++++++++++
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      //  formData.append(' file_'+i, files[i]);
      // }

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(formData);
      // window.location.href="/gerador";
  //    return false; 
    // $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
    // $('#image_modal').openModal();
      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){
        
        window.location.href="/gerador"
      }, 10000)
  //    //++++++++++++++++++++++++ 

              // var detalhes=$("#msform").serialize();
              // $.post("/gerador/novo", detalhes, function(data){
              //  window.location.href="/gerador";        
              // })
              
    })
  }
});



$('#captarAlarm').click(function(){
var el=$(this).attr("dataref");
  var rul=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");

  if(true){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar?')
    $('#yes_no_modal').openModal();
    // $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      rul ="/gerador/alarm/" + rul + "/" + numeroSite;
      console.log(rul)
      
      var formData = new FormData();

      var intruder=$("input[name='intruder']:checked").val();
      formData.append('intruder', intruder);
      var intruder_comment=$("#intruder_comment").val();
      formData.append('intruder_comment', intruder_comment);
      var intruder_image=arrIntruder;
      if(intruder_image.length!=0){
      for(let i = 0, j = intruder_image.length; i<j;i++){
        formData.append('intruder_image', intruder_image[i]);
      }}

      var movement=$("input[name='movement']:checked").val();
      formData.append('movement', movement);
      var movement_comment=$("#movement_comment").val();
      formData.append('movement_comment', movement_comment);
      var movement_image=arrMovement;
      if(movement_image.length!=0){
      for(let i = 0, j = movement_image.length; i<j;i++){
        formData.append('movement_image', movement_image[i]);
      }}
      

      var high_temp=$("input[name='high_temp']:checked").val();
      formData.append('high_temp', high_temp);
      var high_temp_comment=$("#high_temp_comment").val();
      formData.append('high_temp_comment', high_temp_comment);
      var high_temp_image=arrHighTemp;
      if(high_temp_image.length!=0){
      for(let i = 0, j = high_temp_image.length; i<j;i++){
        formData.append('high_temp_image', high_temp_image[i]);
      }}

      var rectifier_system=$("input[name='rectifier_system']:checked").val();
      formData.append('rectifier_system', rectifier_system);
      var rectifier_system_comment=$("#rectifier_system_comment").val();
      formData.append('rectifier_system_comment', rectifier_system_comment);
      var rectifier_system_image=arrRectifierSystem;
      if(rectifier_system_image.length!=0){
      for(let i = 0, j = rectifier_system_image.length; i<j;i++){
        formData.append('rectifier_system_image', rectifier_system_image[i]);
      }}

      var rectifier_module=$("input[name='rectifier_module']:checked").val();
      formData.append('rectifier_module', rectifier_module);
      var rectifier_module_comment=$("#rectifier_module_comment").val();
      formData.append('rectifier_module_comment', rectifier_module_comment);
      var rectifier_module_image=arrRectifierModule;
      if(rectifier_module_image.length!=0){
      for(let i = 0, j = rectifier_module_image.length; i<j;i++){
        formData.append('rectifier_module_image', rectifier_module_image[i]);
      }}

      var aircon1=$("input[name='aircon1']:checked").val();
      formData.append('aircon1', aircon1);
      var aircon1_comment=$("#aircon1_comment").val();
      formData.append('aircon1_comment', aircon1_comment);
      var aircon1_image=arrAircon1;
      if(aircon1_image.length!=0){
      for(let i = 0, j = aircon1_image.length; i<j;i++){
        formData.append('aircon1_image', aircon1_image[i]);
      }}
      

      var aircon2=$("input[name='aircon2']:checked").val();
      formData.append('aircon2', aircon2);
      var aircon2_comment=$("#aircon2_comment").val();
      formData.append('aircon2_comment', aircon2_comment);
      var aircon2_image=arrAircon2;
      if(aircon2_image.length!=0){
      for(let i = 0, j = aircon2_image.length; i<j;i++){
        formData.append('aircon2_image', aircon2_image[i]);
      }}

      var generator_fuel=$("input[name='generator_fuel']:checked").val();
      formData.append('generator_fuel', generator_fuel);
      var generator_fuel_comment=$("#generator_fuel_comment").val();
      formData.append('generator_fuel_comment', generator_fuel_comment);
      var generator_fuel_image=arrGeneratorFuel;
      if(generator_fuel_image.length!=0){
      for(let i = 0, j = generator_fuel_image.length; i<j;i++){
        formData.append('generator_fuel_image', generator_fuel_image[i]);
      }}
      
      var generator_abnormal=$("input[name='generator_abnormal']:checked").val();
      formData.append('generator_abnormal', generator_abnormal);
      var generator_abnormal_comment=$("#generator_abnormal_comment").val();
      formData.append('generator_abnormal_comment', generator_abnormal_comment);
      var generator_abnormal_image=arrGeneratorAbnormal;
      if(generator_abnormal_image.length!=0){
      for(let i = 0, j = generator_abnormal_image.length; i<j;i++){
        formData.append('generator_abnormal_image', generator_abnormal_image[i]);
      }}

      var aircraft_warning=$("input[name='aircraft_warning']:checked").val();
      formData.append('aircraft_warning', aircraft_warning);
      var aircraft_warning_comment=$("#aircraft_warning_comment").val();
      formData.append('aircraft_warning_comment', aircraft_warning_comment);
      var aircraft_warning_image=arrAircraftWarning;
      if(aircraft_warning_image.length!=0){
      for(let i = 0, j = aircraft_warning_image.length; i<j;i++){
        formData.append('aircraft_warning_image', aircraft_warning_image[i]);
      }}

      var smoke=$("input[name='smoke']:checked").val();
      formData.append('smoke', smoke);
      var smoke_comment=$("#smoke_comment").val();
      formData.append('smoke_comment', smoke_comment);
      var smoke_image=arrSmoke;
      if(smoke_image.length!=0){
      for(let i = 0, j = smoke_image.length; i<j;i++){
        formData.append('smoke_image', smoke_image[i]);
      }}

      var ac_mains_failure=$("input[name='ac_mains_failure']:checked").val();
      formData.append('ac_mains_failure', ac_mains_failure);
      var ac_mains_failure_comment=$("#ac_mains_failure_comment").val();
      formData.append('ac_mains_failure_comment', ac_mains_failure_comment);
      var ac_mains_failure_image=arrAcMainsFailure;
      if(ac_mains_failure_image.length!=0){
      for(let i = 0, j = ac_mains_failure_image.length; i<j;i++){
        formData.append('ac_mains_failure_image', ac_mains_failure_image[i]);
      }}

      var battery_low=$("input[name='battery_low']:checked").val();
      formData.append('battery_low', battery_low);
      var battery_low_comment=$("#battery_low_comment").val();
      formData.append('battery_low_comment', battery_low_comment);
      var battery_low_image=arrBatteryLow;
      if(battery_low_image.length!=0){
      for(let i = 0, j = battery_low_image.length; i<j;i++){
        formData.append('battery_low_image', battery_low_image[i]);
      }}

      var generator_running=$("input[name='generator_running']:checked").val();
      formData.append('generator_running', generator_running);
      var generator_running_comment=$("#generator_running_comment").val();
      formData.append('generator_running_comment', generator_running_comment);
      var generator_running_image=arrGeneratorRunning;
      if(generator_running_image.length!=0){
      for(let i = 0, j = generator_running_image.length; i<j;i++){
        formData.append('generator_running_image', generator_running_image[i]);
      }}
      

      var siteinsp_audittrailObject = {};

      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var todaydate = dia + "/" + mes + "/" + ano;
      var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update Alarm Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));


      // +++++++++++++++++++++++++++++++++++
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      //  formData.append(' file_'+i, files[i]);
      // }

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(formData);
      // window.location.href="/gerador";
  //    return false; 
    // $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
    // $('#image_modal').openModal();
      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){
        
        window.location.href="/gerador/generator/"+el;
      }, 10000)
  //    //++++++++++++++++++++++++ 

              // var detalhes=$("#msform").serialize();
              // $.post("/gerador/novo", detalhes, function(data){
              //  window.location.href="/gerador";        
              // })
              
    })
  }
});

  $('#captarAlarmDetalhes').click(function(){
  var el=$(this).attr("dataref");
  window.location.href="/gerador/generator/details/"+el;
});


$('#captarEDBoard').click(function(){
  var el=$(this).attr("dataref");
  var rul=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");
  console.log(arrConnection)

  if(true){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar?')
    $('#yes_no_modal').openModal();
    // $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      rul ="/gerador/edboard/" + rul + "/" + numeroSite;
      //console.log(rul)
      
      var formData = new FormData();

      var connections=$("input[name='connections']:checked").val();
      formData.append('connections', connections);
      var connections_comment=$("#connections_comment").val();
      formData.append('connections_comment', connections_comment);
      var Connection_image=arrConnection;
      if(Connection_image.length!=0){
      for(let i = 0, j = Connection_image.length; i<j;i++){
        formData.append('Connection_image', Connection_image[i]);
      }}

      var energy_meter=$("input[name='energy_meter']:checked").val();
      formData.append('energy_meter', energy_meter);
      var energy_meter_comment=$("#energy_meter_comment").val();
      formData.append('energy_meter_comment', energy_meter_comment);
      var energy_meter_image=arrEnergyMeter;
      if(energy_meter_image.length!=0){
      for(let i = 0, j = energy_meter_image.length; i<j;i++){
        formData.append('energy_meter_image', energy_meter_image[i]);
      }}
      

      var switching_mec=$("input[name='switching_mec']:checked").val();
      formData.append('switching_mec', switching_mec);
      var switching_mec_comment=$("#switching_mec_comment").val();
      formData.append('switching_mec_comment', switching_mec_comment);
      var switching_mec_image=arrSwitchingMec;
      if(switching_mec_image.length!=0){
      for(let i = 0, j = switching_mec_image.length; i<j;i++){
        formData.append('switching_mec_image', switching_mec_image[i]);
      }}

      var d_board_sleeves=$("input[name='d_board_sleeves']:checked").val();
      formData.append('d_board_sleeves', d_board_sleeves);
      var d_board_sleeves_comment=$("#d_board_sleeves_comment").val();
      formData.append('d_board_sleeves_comment', d_board_sleeves_comment);
      var d_board_sleeves_image=arrDBoardSleeves;
      if(d_board_sleeves_image.length!=0){
      for(let i = 0, j = d_board_sleeves_image.length; i<j;i++){
        formData.append('d_board_sleeves_image', d_board_sleeves_image[i]);
      }}

      var light_switch=$("input[name='light_switch']:checked").val();
      formData.append('light_switch', light_switch);
      var light_switch_comment=$("#light_switch_comment").val();
      formData.append('light_switch_comment', light_switch_comment);
      var light_switch_image=arrLightSwitch;
      if(light_switch_image.length!=0){
      for(let i = 0, j = light_switch_image.length; i<j;i++){
        formData.append('light_switch_image', light_switch_image[i]);
      }}

      var paintwork_sitelight=$("input[name='paintwork_sitelight']:checked").val();
      formData.append('paintwork_sitelight', paintwork_sitelight);
      var paintwork_sitelight_comment=$("#paintwork_sitelight_comment").val();
      formData.append('paintwork_sitelight_comment', paintwork_sitelight_comment);
      var paintwork_sitelight_image=arrPaintworkSiteLight;
      if(paintwork_sitelight_image.length!=0){
      for(let i = 0, j = paintwork_sitelight_image.length; i<j;i++){
        formData.append('paintwork_sitelight_image', paintwork_sitelight_image[i]);
      }}
      

      var ac_supplier_defects=$("input[name='ac_supplier_defects']:checked").val();
      formData.append('ac_supplier_defects', ac_supplier_defects);
      var ac_supplier_defects_comment=$("#ac_supplier_defects_comment").val();
      formData.append('ac_supplier_defects_comment', ac_supplier_defects_comment);
      var ac_supplier_defects_image=arrAcSupplierDefects;
      if(ac_supplier_defects_image.length!=0){
      for(let i = 0, j = ac_supplier_defects_image.length; i<j;i++){
        formData.append('ac_supplier_defects_image', ac_supplier_defects_image[i]);
      }}

      
      var siteinsp_audittrailObject = {};

      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var todaydate = dia + "/" + mes + "/" + ano;
      var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update EDBoard Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));

      // +++++++++++++++++++++++++++++++++++
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      //  formData.append(' file_'+i, files[i]);
      // }

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(formData);
      // window.location.href="/gerador";
  //    return false; 
    // $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
    // $('#image_modal').openModal();
      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){
        
        window.location.href="/gerador/contentor/"+el
      }, 20000)
  //    //++++++++++++++++++++++++ 

              // var detalhes=$("#msform").serialize();
              // $.post("/gerador/novo", detalhes, function(data){
              //  window.location.href="/gerador";        
              // })
              
    })
  }
});

$('#captarEDBoardDetalhes').click(function(){
  var el=$(this).attr("dataref");
  window.location.href="/gerador/contentor/details/"+el;
});

$('#captarSiteGeneral').click(function(){
  var el=$(this).attr("dataref");
  var rul=$(this).attr("dataref");
  var numeroSite=$(this).attr("numSite");
  var nomesession = $(this).attr("nomesessiondetalhes");

  if(true){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar?')
    $('#yes_no_modal').openModal();
    // $('#no_btn_modal_').click(function(){ window.location.href="#"; });
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();

      rul ="/gerador/sitegeneral/" + rul + "/" + numeroSite;
      console.log(rul)
      
      var formData = new FormData();

      var fence_gate_locks_hinges=$("input[name='fence_gate_locks_hinges']:checked").val();
      formData.append('fence_gate_locks_hinges', fence_gate_locks_hinges);
      var fence_gate_locks_hinges_comment=$("#fence_gate_locks_hinges_comment").val();
      formData.append('fence_gate_locks_hinges_comment', fence_gate_locks_hinges_comment);
      var fence_gate_locks_hinges_image=arrFenceGateLocksHinges;
      if(fence_gate_locks_hinges_image.length!=0){
      for(let i = 0, j = fence_gate_locks_hinges_image.length; i<j;i++){
        formData.append('fence_gate_locks_hinges_image', fence_gate_locks_hinges_image[i]);
      }}

      var signage=$("input[name='signage']:checked").val();
      formData.append('signage', signage);
      var signage_comment=$("#signage_comment").val();
      formData.append('signage_comment', signage_comment);
      var signage_image=arrSignage;
      if(signage_image.length!=0){
      for(let i = 0, j = signage_image.length; i<j;i++){
        formData.append('signage_image', signage_image[i]);
      }}
      

      var water_damage=$("input[name='water_damage']:checked").val();
      formData.append('water_damage', water_damage);
      var water_damage_comment=$("#water_damage_comment").val();
      formData.append('water_damage_comment', water_damage_comment);
      var water_damage_image=arrWaterDamage;
      if(water_damage_image.length!=0){
      for(let i = 0, j = water_damage_image.length; i<j;i++){
        formData.append('water_damage_image', water_damage_image[i]);
      }}

      var crushed_stone=$("input[name='crushed_stone']:checked").val();
      formData.append('crushed_stone', crushed_stone);
      var crushed_stone_comment=$("#crushed_stone_comment").val();
      formData.append('crushed_stone_comment', crushed_stone_comment);
      var crushed_stone_image=arrCrushedStone;
      if(crushed_stone_image.length!=0){
      for(let i = 0, j = crushed_stone_image.length; i<j;i++){
        formData.append('crushed_stone_image', crushed_stone_image[i]);
      }}

      var site_clean=$("input[name='site_clean']:checked").val();
      formData.append('site_clean', site_clean);
      var site_clean_comment=$("#site_clean_comment").val();
      formData.append('site_clean_comment', site_clean_comment);
      var site_clean_image=arrSiteClean;
      if(site_clean_image.length!=0){
      for(let i = 0, j = site_clean_image.length; i<j;i++){
        formData.append('site_clean_image', site_clean_image[i]);
      }}

      var weeds_grass=$("input[name='weeds_grass']:checked").val();
      formData.append('weeds_grass', weeds_grass);
      var weeds_grass_comment=$("#weeds_grass_comment").val();
      formData.append('weeds_grass_comment', weeds_grass_comment);
      var weeds_grass_image=arrWeedsGrass;
      if(weeds_grass_image.length!=0){
      for(let i = 0, j = weeds_grass_image.length; i<j;i++){
        formData.append('weeds_grass_image', weeds_grass_image[i]);
      }}
      

      var rubish=$("input[name='rubish']:checked").val();
      formData.append('rubish', rubish);
      var rubish_comment=$("#rubish_comment").val();
      formData.append('rubish_comment', rubish_comment);
      var rubish_image=arrRubish;
      if(rubish_image.length!=0){
      for(let i = 0, j = rubish_image.length; i<j;i++){
        formData.append('rubish_image', rubish_image[i]);
      }}

      var defect_access_road=$("input[name='defect_access_road']:checked").val();
      formData.append('defect_access_road', defect_access_road);
      var defect_access_road_comment=$("#defect_access_road_comment").val();
      formData.append('defect_access_road_comment', defect_access_road_comment);
      var defect_access_road_image=arrDefectAccessRoad;
      if(defect_access_road_image.length!=0){
      for(let i = 0, j = defect_access_road_image.length; i<j;i++){
        formData.append('defect_access_road_image', defect_access_road_image[i]);
      }}

      
      var siteinsp_audittrailObject = {};

      var dia = ((new Date()).getDate()<10) ? ("0" + (new Date()).getDate()): ((new Date()).getDate());
      var mes = (((new Date()).getMonth()+1)<10) ? ("0" + ((new Date()).getMonth()+1)): (((new Date()).getMonth())+1);
      var ano = (new Date()).getFullYear();
      var todaydate = dia + "/" + mes + "/" + ano;
      var todayhours = new Date().getHours() + ":" + new Date().getMinutes();

        siteinsp_audittrailObject.siteinsp_audittrailname = nomesession;
        siteinsp_audittrailObject.siteinsp_audittraildate = todaydate + " " + todayhours;
        siteinsp_audittrailObject.siteinsp_audittrailaction = "Update SiteGeneral Info";

        formData.append("siteinsp_audittrailObject", JSON.stringify(siteinsp_audittrailObject));

      // +++++++++++++++++++++++++++++++++++
      // var files=$("#nome_pai").get(0).files;
      // for(let i = 0, j = files.length; i<j;i++){
      //  formData.append(' file_'+i, files[i]);
      // }

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', rul, true);
      xhr.send(formData);
      // window.location.href="/gerador";
  //    return false; 
    // $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src="/img/preloader.gif">')
    // $('#image_modal').openModal();
      $('#loading').fadeIn().delay(20000).fadeOut();
      setTimeout(function(){

        window.location.href="/gerador/alarm/"+el
      }, 10000)
  //    //++++++++++++++++++++++++ 

              // var detalhes=$("#msform").serialize();
              // $.post("/gerador/novo", detalhes, function(data){
              //  window.location.href="/gerador";        
              // })
              
    })
  }
});


$('#captarSiteGeneralDetalhes').click(function(){
  var el=$(this).attr("dataref");
  window.location.href="/gerador/alarm/details/"+el;
});


var i18n = new I18n();
i18n.localize();
var sslg=$(".lang-picker").attr("value");
// $('.lang-picker #portuguese').addClass('selected');

i18n.lang(sslg);

// $('.lang-picker #portuguese').on('click', function () {
// 	i18n.lang('pt');
// 	selectLang($(this));
// })

// $('.lang-picker #english').on('click', function () {
// 	i18n.lang('en');
// 	selectLang($(this));
// })

// $('.lang-picker #spanish').on('click', function () {
// 	i18n.lang('es');
// 	selectLang($(this));
// })

function selectLang (picker) {
  $('.lang-picker li').removeClass('selected');
  picker.addClass('selected');
}

$("#pesquisadoruser").on("keyup", function() {
    var value = $(this).val().toLowerCase();
    $("#myTableUser tr").filter(function() {
    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
    });
    });


$("#pesquisador").on("keyup", function() {
    var value = $(this).val().toLowerCase();
    $("#myTable tr").filter(function() {
    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
    });
    });
//openNav();
$('select').material_select();
  Materialize.updateTextFields();
// inicializacao();
// actualizarDados();

//actualizarDados_Util();	
$(".button-collapse").sideNav();
$('#editar').click(function(){
$('#yes_no_title_modal').html('Edicao de campos');
$('#yes_no_content_modal').html('Esta prestes a habilitar edicao de campos<br/>Deseja continuar?');
$('#yes_no_modal').openModal();	
$('#yes_btn_modal').click(function(){
  habilitarCampos();
  })
})
inicializacao();

$('#sair').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente sair do sistema ':'Do you realy want to logout?'))
    
  
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(){
    window.location.href="/";
  })
})

$('.perfil').click(function(){
  $('#msg_title_modal').html('Mensagem do Sistema')
  $('#msg_content_modal').html("Perfil em Manuntencao!")
  $('#msg_modal').openModal();
  $('#ok_btn_modal_').click(function(){
    window.location.href="/";
  })
})

$('#registarSite').click(function(){
  if(validar()){
    $('#yes_no_title_modal').html('Mensagem de registo')
    $('#yes_no_content_modal').html('Deseja realmente registar <b>'+$('#nome').val()+'</b>?')
    $('#yes_no_modal').openModal();
    $('#yes_btn_modal').click(function(){
      document.forms.formulario.submit();
    })
  }
})

$("#tipo_estatistica").change(function(){
  let comp=$(this).val();
  if(comp=="diario"){
    $(".diario").removeClass("hide");
    $(".mes").addClass("hide");
    $(".anooo").addClass("hide");


  }
  else
  {
    if(comp=="mensal"){
    $(".mes").removeClass("hide");
    $(".diario").addClass("hide");
    $(".anooo").addClass("hide");

  }
    else
    {
    $(".anooo").removeClass("hide");
    $(".mes").addClass("hide");
    $(".diario").addClass("hide");
    }
  }

})

$('.apagar_inspdiaria').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente tomar acção no veiculo de <b>':'Do you really want to take action on  <b>') +$(this).attr("data-user-id")+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"'s</b> vehicle?"))
    $('#yes_no_modal').openModal();
  $('#no_btn_modal_').click(function(){ window.location.href="/inspdiaria"; });
  $('#yes_btn_modal').click(function(){
    window.location.href="/inspdiaria/remove/"+novo;
  })
})

$('.apagar_ferramenta').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente apagar a pre-inspecção de <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(){
    window.location.href="/ferramenta/remove/"+novo;
  })
})

$('.apagar_Epi').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente apagar a pre-inspecção de <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(){
    window.location.href="/epi/remove/"+novo;
  })
})

$('.apagar_tanque').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente apagar a pre-inspecção do tanque <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(){
    window.location.href="/tanque/remove/"+novo;
  })
})

$('.apagar_inspmensal').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente apagar a inspecçao Mensal do <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(){
    window.location.href="/inspmensal/remove/"+novo;
  })
})


$('.apagar_utilizador').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente apagar o utilizador <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(){
    window.location.href="/utilizador/remove/"+novo;
  })
})


$('.apagar_Gerador').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente apagar pre-utilização do gerador de <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(){
    window.location.href="/gerador/remove/"+novo;
  })
})



$('.apagar_Transferencia').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente apagar a transferência da viatura <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(){
    window.location.href="/inicio";
  })
})

$('.aprovar_car_serivce').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente aprovar a manutenção da vitura <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();
    $.post("/carservice/aprovarcarservice", {novo:novo}, function(data){
      // window.location.href="/transferencia"
      // setTimeout(function(){
      //   window.location.href="/carservice";
      // }, 2000)

    })

    setTimeout(function(){
        window.location.href="/carservice";
      }, 2000)
    //window.location.href="/transferencia/remove/"+novo;
  })
});

$('.reprovar_car_serivce').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente reprovar a manutenção da vitura <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();
    $.post("/carservice/reprovarcarservice", {novo:novo}, function(data){
      // window.location.href="/transferencia"
      // setTimeout(function(){
      //   window.location.href="/carservice";
      // }, 2000)

    });
    setTimeout(function(){
        window.location.href="/carservice";
      }, 2000)
    //window.location.href="/transferencia/remove/"+novo;
  })
})


$('.aprovar_transferencia').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente aprovar a transferência da viatura <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();
    $.post("/transferencia/aprovar", {novo:novo}, function(data){
      // window.location.href="/transferencia"
      setTimeout(function(){
        window.location.href="/transferencia";
      }, 4000)

    })
    //window.location.href="/transferencia/remove/"+novo;
  })
})

$('.reprovar_transferencia').click(function(){
  $('#yes_no_title_modal').html('Mensagem do sistema')
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(mestre);
  console.log(novo)
  $('#yes_no_content_modal').html('Deseja realmente reprovar a transferência da viatura <b>'+mestre+ "<b>?")
  $('#yes_no_modal').openModal();
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();
    $.post("/transferencia/reprovar", {novo:novo}, function(data){
      window.location.href="/transferencia"
    })
    //window.location.href="/transferencia/remove/"+novo;
  })
})



$(".imagee").click(function(){
  window.location.href="/inicio"
})
$(".baseinfo").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/info/details/"+refer;
})





$(".inspseguro").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/seguranca/"+refer;
})
$(".inspedboard").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/edboard/"+refer;
})
$(".inspcontainer").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/contentor/"+refer;
})

$(".inspacond").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/arcond/"+refer;
})

$(".inspmast").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/mast/"+refer;
})

$(".inspalarm").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/alarm/"+refer;
})

$(".inspgenerator").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/generator/"+refer;
})

$(".insprooftop").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/rooftop/"+refer;
})

$(".inspsitegeneral").click(function(){
  var refer= $(this).attr("dataref");
  console.log(refer);
  window.location.href="/gerador/sitegeneral/"+refer;
})

$(".securedetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/seguranca/details/"+refer;
  })

  $(".edboraddetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/eddboardss/details/"+refer;
  })

  $(".containerdetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/contentor/details/"+refer;
  })

  $(".airconddetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/arcond/details/"+refer;
  })

  $(".mastdetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/mast/details/"+refer;
  })

  $(".alarmdetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/alarm/details/"+refer;
  })

  $(".generatordetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/generator/details/"+refer;
  })

  $(".rooftopdetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/rooftop/details/"+refer;
  })

  $(".generalsitedetails").click(function(){
    var refer= $(this).attr("dataref");
    console.log(refer);
    window.location.href="/gerador/general_site/details/"+refer;
  })




// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++imagem magnific++++++++++++++++++++++++++++++++++++++++++
$('.verimagem').click(function(){
  
  var dir = $(this).attr('src');
  console.log(dir);
  $('#image_modal').html('<img class="center" style="width:80%; height:80%; padding-top:10px" src='+dir+'>')
  $('#image_modal').openModal();
});




// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++end imagem magnific++++++++++++++++++++++++++++++++++++++


$("#marcarLida").click(function(){
  window.location.href="/mensagem/saida"
})
$("#voltar_Viaturas").click(function(){
  window.location.href="/veiculo_Control"
});



$("#voltarMensal").click(function(){
  window.location.href="/inspmensal"
})
$("#voltarFerramenta").click(function(){
  window.location.href="/ferramenta"
})
$("#voltarTransferencia").click(function(){
  window.location.href="/transferencia"
})
$("#voltarTanque").click(function(){
  window.location.href="/tanque"
})
$("#voltarGerador").click(function(){
  window.location.href="/gerador"
})
$("#voltarEpi").click(function(){
  window.location.href="/epi"
})


$("#voltarDiario").click(function(){
  window.location.href="/inspdiaria"
})
$("#voltar_util").click(function(){
  window.history.back();
})
$("#marcarLida_e").click(function(){
  window.location.href="/mensagem"
})

$('#captar').click(function(){
  
    if(validar()){
      $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
      $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente Gravar a inspeção do ':'Do you really want to save <b>') +$('#motorista').val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"'s</b> inspection?"))
      $('#yes_no_modal').openModal({dismissible:false});
      $('#no_btn_modal_').click(function(e){ e.stopPropagation(); window.location.href="/inspdiaria"; });
      $('#yes_btn_modal').click(function(e){
         $('#loading').fadeIn().delay(7000).fadeOut();
        e.stopPropagation();
        if($(".lang-picker").attr("value")=="pt")
          var icomm='ptgues';
        else
          var icomm='ingles';
        var motorista=$("#motorista").val();
        var matricula=$("#matricula").val();
        var datta=$("#datta").val();
        var limpa_parabrisas=$("input[name='limpa_parabrisas']:checked").val();
        var nivel=$("input[name='nivel']:checked").val();
        var kilometragem=$("#kilometragem").val();
        var carrocaria=$("input[name='carrocaria']:checked").val();
        var razaoCarrocari=$("#carrocariaRazao ."+icomm+" #razaoCarrocaria").val();
        var luzes=$("input[name='luzes']:checked").val();
        var parabrisas=$("input[name='parabrisa']:checked").val();
        var pneus=$("input[name='pneus']:checked").val();
        var razaoPneus=$("#pneusRazao ."+icomm+" #razaoPneus").val();
        var razaoPressao=$("#pressaoRazao ."+icomm+" #razaoPressao").val();
        var razaoPorcas=$("#porcasRazao ."+icomm+" #razaoPorcas").val();
        var razaoVidros=$("#vidrosRazao ."+icomm+" #razaoVidros").val();
        var razaoLuzes=$("#razaoLuzes").val();
        var razaoNivel=$("#nivelPartescol ."+icomm+" #razaoNivel").val();
        var razaoTravoes=$("#travoesRazao ."+icomm+" #razaoTravoes").val();
        var razaoCamera=$("#cameraRazao ."+icomm+" #razaoCamera").val();

        var razaoextintor=$("#extintorRazao ."+icomm+" #razaoextintor").val();
        var razaosocorros=$("#socorrosRazao ."+icomm+" #razaosocorros").val();
        var razaocintoSeg=$("#cintoSegRazao ."+icomm+" #razaocintoSeg").val();
        var porcas=$("input[name='porcas']:checked").val();
        var pressao=$("input[name='pressao']:checked").val();
        var vidros=$("input[name='vidros']:checked").val();
        var refrigeracao=$("input[name='refrigeracao']:checked").val();
        var travoes=$("input[name='travoes']:checked").val();
        var observacao=$("input[name='observacao']:checked").val();
        var Waning_engine=$("input[name='Waning_engine']:checked").val();
        var camera=$("input[name='camera']:checked").val();
        var handsfree=$("input[name='handsfree']:checked").val();
        var extintor=$("input[name='extintor']:checked").val();
        var socorros=$("input[name='socorros']:checked").val();
        var cintoSeg=$("input[name='cintoSeg']:checked").val();



        $.post( "/inspdiaria/novo", {motorista:motorista, Waning_engine:Waning_engine, nivel:nivel, limpa_parabrisas:limpa_parabrisas, razaoCarrocari:JSON.stringify(razaoCarrocari),razaoextintor:JSON.stringify(razaoextintor),razaosocorros:JSON.stringify(razaosocorros),razaocintoSeg:JSON.stringify(razaocintoSeg), razaoPneus:JSON.stringify(razaoPneus), razaoPressao:JSON.stringify(razaoPressao), razaoPorcas:JSON.stringify(razaoPorcas), razaoCamera:JSON.stringify(razaoCamera), razaoVidros:JSON.stringify(razaoVidros), razaoLuzes:JSON.stringify(razaoLuzes), razaoNivel:JSON.stringify(razaoNivel), razaoTravoes:JSON.stringify(razaoTravoes),
         matricula:matricula, camera:camera, handsfree:handsfree,extintor:extintor, socorros:socorros, cintoSeg:cintoSeg, kilometragem:kilometragem, carrocaria:carrocaria, luzes:luzes, parabrisas:parabrisas, porcas:porcas, pneus:pneus, pressao:pressao,  vidros:vidros, travoes:travoes, datta:datta, refrigeracao:refrigeracao,  observacao:observacao}, function( data ) {
          //alert("dados Gravados com Sucesso!!");
        $("input[name='carrocaria']:checked").prop("checked", false);
        $("input[name='luzes']:checked").prop("checked", false);
        $("input[name='parabrisa']:checked").prop("checked", false);
        $("input[name='pneus']:checked").prop("checked", false);
        $("input[name='porcas']:checked").prop("checked", false);
        $("input[name='pressao']:checked").prop("checked", false);
        $("input[name='vidros']:checked").prop("checked", false);
        $("input[name='refrigeracao']:checked").prop("checked", false);
        //$("input[name='nivel']:checked").prop("checked", false);
        $("input[name='travoes']:checked").prop("checked", false);
        $("input[name='observacao']:checked").prop("checked", false);
        $("#motorista").val('');
        $("#matricula").val('');
        $("#icon_prefix2").val('');
        $("#datta").val('');
        $("#kilometragem").val('');
        $('#image_modal')
        // $('#image_modal').openModal();
        setTimeout(function(){
          window.location.href="/inspdiaria";
        }, 2000)
        
        
      })



      })
    }
  
})



$('#refrigeracaonotok').click(function(){
  $('#refrigeracaoRazao').removeClass('hide');
})
$('#refrigeracaook').click(function(){
  $('#refrigeracaoRazao').addClass('hide');
});

$('#cintoSegnotok').click(function(){ 
  $('#cintoSegRazao').removeClass('hide');
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#cintoSegok').click(function(){
  $('#cintoSegRazao').addClass('hide');
});

$('#socorrosnotok').click(function(){ 
  $('#socorrosRazao').removeClass('hide');
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#socorrosok').click(function(){
  $('#socorrosRazao').addClass('hide');
});

$('#extintornotok').click(function(){ 
  $('#extintorRazao').removeClass('hide');
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#extintorok').click(function(){
  $('#extintorRazao').addClass('hide');
});


$('#cameranotok').click(function(){ 
  $('#cameraRazao').removeClass('hide');
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#cameraok').click(function(){
  $('#cameraRazao').addClass('hide');
});

$('#comserv_stock_yes').click(function(){
  $('#clientee').addClass('hide');
});

$('#comserv_stock_no').click(function(){
  $('#clientee').removeClass('hide');
});

$('#travoesnotok').click(function(){
  $('#travoesRazao').removeClass('hide');

  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }

});

$('#travoesok').click(function(){
  $('#travoesRazao').addClass('hide');
})

$('#vidrosnotok').click(function(){
  $('#vidrosRazao').removeClass('hide');
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#vidrosok').click(function(){
  $('#vidrosRazao').addClass('hide');
})

$('#pneusnotok').click(function(){
  $('#pneusRazao').removeClass('hide');
  $('#carrocariaRazao').removeClass('hide');
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#pneusok').click(function(){
  $('#pneusRazao').addClass('hide');
})

$('#pressaonotok').click(function(){
  $('#pressaoRazao').removeClass('hide');
  
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }

})
$('#pressaook').click(function(){
  $('#pressaoRazao').addClass('hide');
})

$('#porcasnotok').click(function(){
  $('#porcasRazao').removeClass('hide');
  
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#porcasok').click(function(){
  $('#porcasRazao').addClass('hide');
})

$('#carrocarianotok').click(function(){
  $('#carrocariaRazao').removeClass('hide');
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})

$('#carrocariaok').click(function(){
  $('#carrocariaRazao').addClass('hide');
})

$('#luzesnotok').click(function(){
  $('#luzesParte').removeClass('hide');
  
  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#luzesok').click(function(){
  $('#luzesParte').addClass('hide');
})

$('#nivelnotok').click(function(){
  $('#nivelPartescol').removeClass('hide');

  if ($(".lang-picker").attr("value")=="pt"){
    $(".ptgues").removeClass('hide')
    $(".ingles").addClass('hide')
  }
  else{
    $(".ingles").removeClass('hide')
    $(".ptgues").addClass('hide')
  }
})
$('#nivelok').click(function(){
  $('#nivelPartescol').addClass('hide');
})

$('#captarFerramenta').click(function(){
  if(validar()){
    $('#yes_no_title_modal').html('Mensagem do registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar a inspenção do <b>'+$('#nome').val()+'</b>?')
    $('#yes_no_modal').openModal();
    $('#yes_btn_modal').click(function(){

      var estado_geral=$("#_estado_geral").val();
      //ferra.data=body.data;
      var cabos_mangueira=$("#cabos_mangueira").val();
      var interruptores=$("#interruptores").val();
      var ruido=$("#ruido").val();
      var funcionamento=$("#funcionamento").val();
      var manometro=$("#manometro").val();
      var macarico=$("#macarico").val();
      var nivel_vidros=$("#nivel_vidros").val();
      var nome=$("#nome").val();
      var image=nome;
      var utilizador=$("#utilizador").val();
      //var data_utilizador=$("#data_utilizador").val();
      var observacao=$("#observacao").val();
      $.post("/ferramenta/novo", {utilizador:utilizador,estado_geral:estado_geral,cabos_mangueira:cabos_mangueira,interruptores:interruptores,ruido:ruido,funcionamento:funcionamento,manometro:manometro,macarico:macarico,nivel_vidros:nivel_vidros,nome:nome,image:image,observacao:observacao}, function( data ) {
          //alert("dados Gravados com Sucesso!!");
      $("#_estado_geral").val('');
      $("#cabos_mangueira").val('');
      $("#interruptores").val('');
      $("#ruido").val('');
      $("#funcionamento").val('');
      $("#manometro").val('');
      $("#macarico").val('');
      $("#nivel_vidros").val('');
      $("#nome").val('');
      $("#image").val('');
      $("#utilizador").val('');
      $("#data_utilizador").val('');
      $("#observacao").val('');
      window.location.href="/ferramenta";
      console.log("cheguei!!!!!")})



    })
  }
})
$('#captarEpi').click(function(){
  if(validar()){
    $('#yes_no_title_modal').html('Mensagem do registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar a inspecção de <b>'+$('#nome').val()+'</b>?')
    $('#yes_no_modal').openModal();
    $('#yes_btn_modal').click(function(){

      var estado_geral=$("#_estado_geral").val();
      //ferra.data=body.data;
      var componentes=$("#componentes").val();
      var nome=$("#nome").val();
      var image=nome;
      var utilizador=$("#utilizador").val();
      //var data_utilizador=$("#data_utilizador").val();
      var observacao=$("#observacao").val();
      $.post("/epi/novo", {utilizador:utilizador,estado_geral:estado_geral,componentes:componentes,nome:nome,image:image,observacao:observacao}, function( data ) {
          //alert("dados Gravados com Sucesso!!");
      $("#_estado_geral").val('');
      $("#funcionamento").val('');
      $("#nome").val('');
      $("#image").val('');
      $("#utilizador").val('');
      $("#observacao").val('');
      window.location.href="/epi";
      console.log("cheguei!!!!!")})



    })
  }
})


$('#captarTanque').click(function(){
  if(validar()){
    $('#yes_no_title_modal').html('Mensagem do registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar a inspecção do tanque de <b>'+$('#motorista').val()+'</b>?')
    $('#yes_no_modal').openModal();
    $('#yes_btn_modal').click(function(){
      var estado_geral_=$("#estado_geral_").val();
      var freio_manual=$("#freio_manual").val();
      var pneus=$("#pneus").val();
      var tampa_combustivel=$("#tampa_combustivel").val();
      var chapa_matricula=$("#chapa_matricula").val();
      var cabo_polia_peca=$("#cabo_polia_peca").val();
      var trailer_licenciado=$("#trailer_licenciado").val();
      var tanque_abordo=$("#tanque_abordo").val();
      var luzes=$("#luzes").val();
      var acoplamento=$("#acoplamento").val();
      var parafusos_hook=$("#parafusos_hook").val();
      var rodas=$("#rodas").val();
      var motorista=$("#motorista").val();
      var observacao=$("#observacao").val();
      $.post( "/tanque/novo", {
        estado_geral_:estado_geral_,
        freio_manual:freio_manual,
        pneus:pneus,
        tampa_combustivel:tampa_combustivel,
        chapa_matricula:chapa_matricula,
        cabo_polia_peca:cabo_polia_peca,
        trailer_licenciado:trailer_licenciado,
        tanque_abordo:tanque_abordo,
        luzes:luzes,
        acoplamento:acoplamento,
        parafusos_hook:parafusos_hook,
        rodas:rodas,
        motorista:motorista, observacao:observacao
      }, function( data ) {
          //alert("dados Gravados com Sucesso!!");
      $("#estado_geral_").val('');
      $("#freio_manual").val('');
      $("#pneus").val('');
      $("#tampa_combustivel").val('');
      $("#chapa_matricula").val('');
      $("#cabo_polia_peca").val('');
      $("#trailer_licenciado").val('');
      $("#tanque_abordo").val('');
      $("#luzes").val('');
      $("#pneus").val('');
      $("#parafusos_hook").val('');
      $("#rodas").val('');
      $("#motorista").val('');
      $("#observacao").val('');
      window.location.href="/tanque";
      console.log("cheguei!!!!!")})



    })
  }
})

  $('#captarGerador').click(function(){
  if(validar()){
    $('#yes_no_title_modal').html('Mensagem do registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar a inspecção do tanque de <b>'+$('#motorista').val()+'</b>?')
    $('#yes_no_modal').openModal();
    $('#yes_btn_modal').click(function(){
      var estado_geral_=$("#estado_geral_").val();
      var freio_manual=$("#freio_manual").val();
      var pneus=$("#pneus").val();
      var tampa_combustivel=$("#tampa_combustivel").val();
      var chapa_matricula=$("#chapa_matricula").val();
      var cabo_polia_peca=$("#cabo_polia_peca").val();
      var trailer_licenciado=$("#trailer_licenciado").val();
      var gerador_abordo=$("#gerador_abordo").val();
      var luzes=$("#luzes").val();
      var acoplamento=$("#acoplamento").val();
      var parafusos_hook=$("#parafusos_hook").val();
      var roda_sobressalente=$("#roda_sobressalente").val();
      var motorista=$("#motorista").val();
      var interruptores_eletrico=$("#interruptores_eletrico").val();
      var manometro=$("#manometro").val();
      var licenca_veiculo=$("#licenca_veiculo").val();
      var roda_reboque=$("#roda_reboque").val();
      var bateria=$("#bateria").val();
      var ficha_electrica=$("#ficha_electrica").val();
      var observacao=$("#observacao").val();
      $.post( "/gerador/novo", {
        estado_geral_:estado_geral_,
        freio_manual:freio_manual,
        pneus:pneus,
        tampa_combustivel:tampa_combustivel,
        chapa_matricula:chapa_matricula,
        cabo_polia_peca:cabo_polia_peca,
        trailer_licenciado:trailer_licenciado,
        gerador_abordo:gerador_abordo,
        luzes:luzes,
        acoplamento:acoplamento,
        parafusos_hook:parafusos_hook,
        roda_sobressalente:roda_sobressalente,
        motorista:motorista,
        interruptores_eletrico:interruptores_eletrico,
        manometro:manometro,
        licenca_veiculo:licenca_veiculo,
        roda_reboque:roda_reboque,
        bateria:bateria,
        ficha_electrica:ficha_electrica, observacao:observacao
      }, function( data ) {
          //alert("dados Gravados com Sucesso!!");
      $("#freio_manual").val('');
      $("#pneus").val('');
      $("#tampa_combustivel").val('');
      $("#chapa_matricula").val('');
      $("#cabo_polia_peca").val('');
      $("#trailer_licenciado").val('');
      $("#gerador_abordo").val('');
      $("#luzes").val('');
      $("#pneus").val('');
      $("#parafusos_hook").val('');
      $("#roda_sobressalente").val('');
      $("#motorista").val();
      $("#interruptores_eletrico").val('');
      $("#manometro").val('');
      $("#licenca_veiculo").val('');
      $("#roda_reboque").val('');
      $("#bateria").val('');
      $("ficha_electrica").val('');
      $("#observacao").val('');
      window.location.href="/gerador";
      console.log("cheguei!!!!!")})



    })
  }
})

$('#captarMensal').click(function(){
  if(validar()){
    $('#yes_no_title_modal').html('Mensagem do registo')
    $('#yes_no_content_modal').html('Deseja realmente gravar a inspenção do <b>'+$('#motorista').val()+'</b>?')
    $('#yes_no_modal').openModal();
    $('#yes_btn_modal').click(function(){
      var estado_pintura=$("#estado_pintura").val();
      var lubrificacao_tubos=$("#lubrificacao_tubos").val();
      var kit_maos_camera=$("#kit_maos_camera").val();
      var condicionado_electrico=$("#condicionado_electrico").val();
      var porcas_parafusos=$("#porcas_parafusos").val();
      var sinalizacao=$("#sinalizacao").val();
      var documentos=$("#documentos").val();
      var parabrisas=$("#parabrisas").val();
      var sist_direcao=$("#sist_direcao").val();
      var trinco_seguranca=$("#trinco_seguranca").val();
      var espelhos=$("#espelhos").val();
      var travoes=$("#travoes").val();
      var buzina=$("#buzina").val();
      var socorro_extintor=$("#socorro_extintor").val();
      var macaco_roda=$("#macaco_roda").val();
      var vidros_manometro=$("#vidros_manometro").val();
      var liquido=$("#liquido").val();
      var tapetes=$("#tapetes").val();
      var bateria=$("#bateria").val();
      var etiquetas=$("#etiquetas").val();
      var sinais_perigo=$("#sinais_perigo").val();
      var quilometragem=$("#quilometragem").val();
      var data=$("#data").val();
      var inspector=$("#inspector").val();
      var matricula=$("#matricula").val();
      var motorista=$("#motorista").val();
      var marca_modelo=$("#marca_modelo").val();
      var numero_registo=$("#numero_registo").val();
      var mes=$("#mes").val();
      var observacao=$("#observacao").val();
      $.post( "/inspmensal/novo", {estado_pintura:estado_pintura,
        lubrificacao_tubos:lubrificacao_tubos,
        kit_maos_camera:kit_maos_camera,
        condicionado_electrico:condicionado_electrico,
        porcas_parafusos:porcas_parafusos,
        sinalizacao:sinalizacao,
        documentos:documentos,
        parabrisas:parabrisas,
        sist_direcao:sist_direcao,
        trinco_seguranca:trinco_seguranca,
        espelhos:espelhos,
        travoes:travoes,
        buzina:buzina,
        socorro_extintor:socorro_extintor,
        macaco_roda:macaco_roda,
        vidros_manometro:vidros_manometro,
        liquido:liquido,
        tapetes:tapetes,
        bateria:bateria,
        etiquetas:etiquetas,
        sinais_perigo:sinais_perigo,
        quilometragem:quilometragem,
        data:data,
        inspector:inspector,
        matricula:matricula,
        motorista:motorista,
        marca_modelo:marca_modelo,
        numero_registo:numero_registo,
        mes:mes, observacao:observacao}, function( data ) {
          //alert("dados Gravados com Sucesso!!");
        $("#estado_pintura").val('');
        $("#lubrificacao_tubos").val('');
        $("#kit_maos_camera").val();
        $("#condicionado_electrico").val('');
        $("#porcas_parafusos").val('');
        $("#sinalizacao").val('');
        $("#documentos").val('');
        $("#parabrisas").val('');
        $("#sist_direcao").val('');
        $("#trinco_seguranca").val('');
        $("#espelhos").val('');
        $("#travoes").val('');
        $("#buzina").val('');
        $("#socorro_extintor").val('');
        $("#macaco_roda").val('');
        $("#vidros_manometro").val('');
        $("#liquido").val('');
        $("#tapetes").val('');
        $("#bateria").val('');
        $("#etiquetas").val('');
        $("#sinais_perigo").val('');
        $("#quilometragem").val('');
        $("#data").val('');
        $("#inspector").val('');
        $("#matricula").val('');
        $("#motorista").val('');
        $("#marca_modelo").val('');
        $("#numero_registo").val('');
        $("#mes").val('');
        $("#observacao").val('');
      window.location.href="/inspmensal";
      console.log("cheguei!!!!!")})



    })
  }
})




// $('#upexcel').change(function (e) {
//               var rABS = true;
//               var files = e.target.files, f = files[0];
//               if (files) {
//                   var reader = new FileReader();
//                   reader.onload = function (e) {
//                       var data = e.target.result;
//                       if (!rABS) data = new Uint8Array(data);
//                       //ler o excel
//                       var workbook = XLSX.read(data, { type: rABS ? 'binary' : 'array' });
//                       // pegar o nome da primeira folha/sheet
//                       var first_sheet_name = workbook.SheetNames[0];

//                       /* Get Objecto que representa a folha1 */
//                       var worksheet = workbook.Sheets[first_sheet_name];

//                       //extrair dados da primeira folha como array de objectos
//                       let json = XLSX.utils.sheet_to_json(worksheet,
//                           {
//                               "range": 1, // a partir de que linha deve ler os dados (para nao ler com a linha dos titulos)
//                               "header": ["matricula", "kilometragem", "combustivel"] // lista dos nomes para os campos que correspondem as colunas do excel
//                           	// "header": ["nome", "telefone_1", "email", "regiao", "departamento", "nome_supervisor"]
//                           });

//                       //imprimir na consola
//                       var m=JSON.stringify(json);

//                       console.log(m);
//                       $.post("/utilizador/update", {m:m}, function(data){
//                       	//window.location.href="/utilizador";
//                       })

//                       //preencher tabela
//                       // let tabela = document.getElementById("tabela");
//                       // tabela.append("<thead></thead>")
//                   }
//                   if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);
//               }
//           });

// 		$('#registar_editacao').click(function(){
//       var referencia = $(this).attr("detalhesusuario");
//       if(validar()){
//         $('#yes_no_title_modal').html('Message System')
//         $('#yes_no_content_modal').html('do you really to update data of <b>'+$('#nome').val()+'</b>?')
//         $('#yes_no_modal').openModal();
//         $('#yes_btn_modal').click(function(){
//           var identificacao=referencia;
//           var user_code=$("#user_code").val();
//           var nome=$("#nome").val();
//           var kilometragem=$("#kilometragem").val();
//           var carta_conducao=$("#carta_conducao").val();
//           var data_nascimento= $("#data_nascimento").val();
//           var Validade_carta= $("#Validade_carta").val();
//           var regiao= $("#regiao").val();
//           var departamento= $("#departamento").val();
//           var provincia_trabalho=$("#provincia_trabalho").val();
//           var telefone_supervisor= $("#telefone_supervisor").val();
//           var matricula=$("#matricula").val().toUpperCase();
//           var supervisor=$("#supervisor").val();
//           var funcao=$("#funcao").val();
//           var marca=$("#marca").val();
//           var modelo=$("#modelo").val();
//           var ano_aquisicao=$("#ano_aquisicao").val();
//           var telefone_1=$("#telefone_1").val();
//           // var user_pettycash=$("#user_pettycash").val();
//           var nome_supervisor=$("#nome_supervisor").val();
//           var email=$("#email").val();
//           var username=$("#username").val();
//           var nivel_acesso= $("#nivel_acesso").val();
//           var senha=$("#senha").val();
//           $.post( "/utilizador/editar",
//           { user_code:user_code,
//             nome:nome,
//             identificacao:identificacao,
//             kilometragem:kilometragem,
//             carta_conducao:carta_conducao,
//             data_nascimento:data_nascimento,
//             Validade_carta:Validade_carta,
//             nome_supervisor:nome_supervisor,
//             regiao:regiao,
//             departamento:departamento,
//             provincia_trabalho:provincia_trabalho,
//             telefone_supervisor:telefone_supervisor,
//             matricula:matricula,
//             supervisor:supervisor,
//             funcao:funcao,
//             marca:marca,
//             modelo:modelo,
//             ano_aquisicao:ano_aquisicao,
//             telefone_1:telefone_1,
//             email:email,
//             username:username,
//             nivel_acesso:nivel_acesso,
//             senha:senha}, function( data ) {
//               //alert("dados Gravados com Sucesso!!");
//           $("#nome").val('');
//           $("#carta_conducao").val('');
//           $("#data_nascimento").val('');
//           $("#Validade_carta").val('');
//           $("#regiao").val('');
//           $("#departamento").val('');
//           $("#provincia_trabalho").val('');
//           $("#telefone_supervisor").val('');
//           $("#matricula").val('')
//           $("#supervisor").val('');
//           $("#funcao").val('');
//           $("#marca").val('');
//           $("#modelo").val('');
//           $("#ano_aquisicao").val('');
//           $("#telefone_1").val('');
//           $("#email").val('');
//           $("#username").val('');
//           $("#nivel_acesso").val('');
//           $("#senha").val('');
//           $("#kilometragem").val('');
//           window.location.href="/utilizador";
//           console.log("cheguei!!!!!")
//    })
  
  
  
//         })
//       }
//     })


var showCity = function(selectedState){
   $('#terms option').hide();
      $('#terms').find('option').filter(function(){
          var city = $(this).text().toLowerCase();
          
           return city.indexOf(selectedState.toLowerCase())!=-1;
         
      }).show();
      //set default value
      // var defaultCity = $('#terms option:visible:first').text();
      // $('#terms').val(defaultCity);
  };

  var showCity1 = function(selectedState){
   $('#terms option').hide();
      $('#terms').find('option').filter(function(){
          var city = $(this).text().toLowerCase();
          // console.log(city)
         
             return (city.indexOf(selectedState.toLowerCase())==-1 && city!="cash");
      }).show();
      //set default value
      // var defaultCity = $('#terms option:visible:first').text();
      // $('#terms').val(defaultCity);
  };

  //set default state
  var state = $('#payment_method').val();
  showCity(state);
  $('#payment_method').change(function(){
    if($(this).val().toLowerCase()=="cash")
      {showCity($(this).val());
        $('#terms').val('');

      }
    else
      {showCity1($(this).val());
        $('#terms').val('');}

  });


    $("#carregar_photo").change(function(e){
      $('#loading').fadeIn().delay(7000).fadeOut();
      // $.post("/inspdiaria/actualzacao_kilometro", {m:m}, function(data){
      //   //window.location.href="/utilizador";
      // }) carregar_photo
  
      let perfil_photoo= new FormData();
      var photo_perfil=e.target.files;
          if(photo_perfil.length!=0){
          for(let i = 0; i < photo_perfil.length; i++){
            perfil_photoo.append('photo_perfil', photo_perfil[i]);
          }
          }
          console.log(photo_perfil);
          let ruless= "/utilizador/carregar_photo";
          var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST',ruless, true);
          xhr.send(perfil_photoo);
  
  
  
      
  
      setTimeout(function(){window.location.href="/inicio"}, 3000);
      
    });



      $('#carragemanto_armezam').click(function (e) {
                  var comprovativo=$("#carrager_comprovativo").get(0).files;
                  var files=$("#carrager_ficheiro").get(0).files;
                  var rABS = true;
                  var  f = files[0];

                  if (files && comprovativo) {
                      var reader = new FileReader();
                      reader.onload = function (e) {
                          var data = e.target.result;
                          if (!rABS) data = new Uint8Array(data);
                          //ler o excel
                          var workbook = XLSX.read(data, { type: rABS ? 'binary' : 'array', cellDates: true, dateNF: 'yyyy/mm/dd;@' });
                          // pegar o nome da primeira folha/sheet
                          var first_sheet_name = workbook.SheetNames[0];
  
                          /* Get Objecto que representa a folha1 */
                          var worksheet = workbook.Sheets[first_sheet_name];
  
                          //extrair dados da primeira folha como array de objectos
                          let json = XLSX.utils.sheet_to_json(worksheet,
                              {
                                  "range": 1, // a partir de que linha deve ler os dados (para nao ler com a linha dos titulos)
                                  "header": ["sn", "pn", "quant", "descr", "wh", "owner", "pod"] // lista dos nomes para os campos que correspondem as colunas do excel
                                // "header": ["nome", "telefone_1", "email", "regiao", "departamento", "nome_supervisor"]
                              });
  
                          //imprimir na consola
                          var m=JSON.stringify(json);
  
                          console.log(m);
                          var transporte_ficheiro=new FormData();

                          if(comprovativo.length!=0){
                              for(let i = 0, j = comprovativo.length; i<j;i++){
                                transporte_ficheiro.append('carrager_comprovativo', comprovativo[i]);
                              }
                              }

                              transporte_ficheiro.append("m", m)

                          var xhr= new XMLHttpRequest()
                          xhr.open("POST", "/armazem/uploadfichiero", true);
                          xhr.send(transporte_ficheiro);

                          // $.post("/armazem/uploadfichiero", {m:m}, function(data){
                          //   //window.location.href="/utilizador";
                          // })
  
                          $('#loading').fadeIn().delay(12000).fadeOut();

                          // /**************************************************************
                           xhr.onreadystatechange = function () {
                          if (xhr.readyState === 4) {
                            if (xhr.status === 200) { // When data is received successfully

                              Materialize.toast("Ficheiro Carregado com Sucesso!", 2000, "rounded");
                              

                             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
                            }
                          }
                        };

                          
                      }
                      if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);
                  }
              });
   $('#importorxtaxaoSinto').click(function (e) {
                  
                  var files=$("#comprovativo").get(0).files;
                  var rABS = true;
                  var  f = files[0];

                  if (files && comprovativo) {
                      var reader = new FileReader();
                      reader.onload = async function (e) {
                          var data = e.target.result;
                          if (!rABS) data = new Uint8Array(data);
                          //ler o excel
                          var workbook = XLSX.read(data, { type: rABS ? 'binary' : 'array', cellDates: true, dateNF: 'yyyy/mm/dd;@' });
                          // pegar o nome da primeira folha/sheet
                          var first_sheet_name = workbook.SheetNames[0];
  
                          /* Get Objecto que representa a folha1 */
                          var worksheet = workbook.Sheets[first_sheet_name];


                          // ********************************************************inicio de luta*************************************
                          var m={};
                          var compsheet=await workbook.SheetNames.length;
                          console.log(compsheet, XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]]));
                          workbook.SheetNames.map(async function(obj, cont){

                           
                             m[workbook.SheetNames[cont]]= XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[cont]]);
                            
                            
                          })

                          console.log(m)


                          // *************************************************************fim********************************************
  
                          //extrair dados da primeira folha como array de objectos
                          // let json = XLSX.utils.sheet_to_json(worksheet,
                          //     {
                          //         "range": 1, // a partir de que linha deve ler os dados (para nao ler com a linha dos titulos)
                          //         "header": ["sn", "pn", "quant", "descr", "wh", "owner", "pod"] // lista dos nomes para os campos que correspondem as colunas do excel
                          //       // "header": ["nome", "telefone_1", "email", "regiao", "departamento", "nome_supervisor"]
                          //     });
  
                          // //imprimir na consola
                          var m1=JSON.stringify(m);
  
                          console.log(m);
                          var transporte_ficheiro=new FormData();

                          // if(comprovativo.length!=0){
                          //     for(let i = 0, j = comprovativo.length; i<j;i++){
                          //       transporte_ficheiro.append('carrager_comprovativo', comprovativo[i]);
                          //     }
                          //     }

                              transporte_ficheiro.append("m", m1)

                          var xhr= new XMLHttpRequest()
                          xhr.open("POST", "/manutencao/importaxao_file", true);
                          xhr.send(transporte_ficheiro);

                         
  
                          $('#loading').fadeIn().delay(12000).fadeOut();

                          // /**************************************************************
                        //    xhr.onreadystatechange = function () {
                        //   if (xhr.readyState === 4) {
                        //     if (xhr.status === 200) { // When data is received successfully

                        //       Materialize.toast("Ficheiro Carregado com Sucesso!", 2000, "rounded");
                              

                        //      setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
                        //     }
                        //   }
                        // };

                          
                      }
                      if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);
                  }
              });
  
    
  
  
    $('#upexcel').change(function (e) {
                  var rABS = true;
                  var files = e.target.files, f = files[0];
                  if (files) {
                      var reader = new FileReader();
                      reader.onload = function (e) {
                          var data = e.target.result;
                          if (!rABS) data = new Uint8Array(data);
                          //ler o excel
                          var workbook = XLSX.read(data, { type: rABS ? 'binary' : 'array', cellDates: true, dateNF: 'yyyy/mm/dd;@' });
                          // pegar o nome da primeira folha/sheet
                          var first_sheet_name = workbook.SheetNames[0];
  
                          /* Get Objecto que representa a folha1 */
                          var worksheet = workbook.Sheets[first_sheet_name];
  
                          //extrair dados da primeira folha como array de objectos
                          let json = XLSX.utils.sheet_to_json(worksheet,
                              {
                                  "range": 1, // a partir de que linha deve ler os dados (para nao ler com a linha dos titulos)
                                  "header": ["nome","description_item", "quant"] // lista dos nomes para os campos que correspondem as colunas do excel
                                // "header": ["nome", "telefone_1", "email", "regiao", "departamento", "nome_supervisor"]
                              });
  
                          //imprimir na consola
                          var m=JSON.stringify(json);
  
                          console.log(m);
                          var req = new XMLHttpRequest();
                        req.open('POST', '/armazem/actualzacao_kilometro"', true); // Open an async AJAX request.
                        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
                        req.responseType = 'blob'; // Define the expected data as blob
                         req.send(m);
                        req.onreadystatechange = function () {
                          if (req.readyState === 4) {
                            if (req.status === 200) { // When data is received successfully
                              var data = req.response;
                              var defaultFilename = 'ficheiro.csv';
                              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
                              if (typeof window.navigator.msSaveBlob === 'function') {
                                // If it is IE that support download blob directly.
                                window.navigator.msSaveBlob(data, defaultFilename);
                              } 
                              else 
                              {
                                var blob = data;
                                var link = document.createElement('a');
                                link.href = window.URL.createObjectURL(blob);
                                link.download = defaultFilename;
                                document.body.appendChild(link);

                                link.click(); // create an <a> element and simulate the click operation.
                              }
                            }
                          }
                        };


                          // $.post("/armazem/actualzacao_kilometro", {m:m}, function(data){

                          //   //window.location.href="/utilizador";
                          // })
  
                          $('#loading').fadeIn().delay(7000).fadeOut();
  
                          // setTimeout(function(){window.location.href="/inspdiaria"}, 3000);
  
                          //preencher tabela
                          // let tabela = document.getElementById("tabela");
                          // tabela.append("<thead></thead>")
                      }
                      if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);
                  }
              });
  
              $('#upexcelUtilizador').change(function (e) {
                var rABS = true;
                var files = e.target.files, f = files[0];
                if (files) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var data = e.target.result;
                        if (!rABS) data = new Uint8Array(data);
                        //ler o excel
                        var workbook = XLSX.read(data, { type: rABS ? 'binary' : 'array', cellDates: true, dateNF: 'yyyy/mm/dd;@' });
                        // pegar o nome da primeira folha/sheet
                        var first_sheet_name = workbook.SheetNames[0];
  
                        /* Get Objecto que representa a folha1 */
                        var worksheet = workbook.Sheets[first_sheet_name];
  
                        //extrair dados da primeira folha como array de objectos
                        let json = XLSX.utils.sheet_to_json(worksheet,
                            {
                                "range": 1, // a partir de que linha deve ler os dados (para nao ler com a linha dos titulos)
                                "header": ["codigo", "nome_proprio", "nome"] // lista dos nomes para os campos que correspondem as colunas do excel
                              // "header": ["nome", "telefone_1", "email", "regiao", "departamento", "nome_supervisor"]
                            });
  
                        //imprimir na consola
                        var m=JSON.stringify(json);
  
                        console.log(m);
                        $.post("/utilizador/actualzacao_Hr", {m:m}, function(data){
                          //window.location.href="/utilizador";
                        })
  
                        $('#loading').fadeIn().delay(7000).fadeOut();
  
                        setTimeout(function(){window.location.href="/inspdiaria"}, 3000);
  
                        //preencher tabela
                        // let tabela = document.getElementById("tabela");
                        // tabela.append("<thead></thead>")
                    }
                    if (rABS) reader.readAsBinaryString(f); else reader.readAsArrayBuffer(f);
                }
            });

          $("#uploadimg").change( function(evt) {
            var file = evt.target.files[0]
            reader = new FileReader();
    
            reader.onloadend = function () {
                var img = new Image();
                img.src = reader.result;
                BarcodeReader.DecodeImage(img);
            }
    
            reader.readAsDataURL(file);
        });
  
        $('#registar_editacao').click(function(){
            if(validar()){
              $('#yes_no_title_modal').html('Message System')
              // $('#yes_no_content_modal').html('do you really to update data of <b>'+$('#nome').val()+'</b>?')
              $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente o actualizar  <b>':'Do you really want to update <b>')+$('#nome').val()+'</b>?')
              $('#yes_no_modal').openModal();
              $('#yes_btn_modal').click(function(e){
                $('#loading').fadeIn().delay(10000).fadeOut();
                e.stopImmediatePropagation();
                 e.stopPropagation();
        var userForm = new FormData();
        if($("#nivel_acesso").val()=="cliente")
        {
                userForm.append("identificacao",$("#nome").attr("identj"));
                userForm.append("nome",$("#nome").val());
                userForm.append("regiao", $("#regiao").val());
                userForm.append("regiao_id", $("#regiao").find("option:selected").data("cont"));
                userForm.append("provincia_trabalho",$("#provincia_trabalho").val());
                userForm.append("provincia_id", $("#provincia_trabalho").find("option:selected").data("cont"));
                userForm.append("telefone_1",$("#telefone_1").val());
                userForm.append("email",$("#email").val());
                userForm.append("username",$("#username").val());
                userForm.append("nivel_acesso", $("#nivel_acesso").val());
                userForm.append("senha",$("#senha").val());
              }
            if($("#nivel_acesso").val()!="cliente"){
                userForm.append("identificacao",$("#nome").attr("identj"));
                userForm.append("user_code",$("#user_code").val());
                userForm.append("nome",$("#nome").val());
                userForm.append("kilometragem",$("#kilometragem").val());
                userForm.append("carta_conducao",$("#carta_conducao").val());
                userForm.append("data_nascimento", $("#data_nascimento").val());
                userForm.append("Validade_carta", $("#Validade_carta").val());
                userForm.append("regiao", $("#regiao").val());
                userForm.append("regiao_id", $("#regiao").find("option:selected").data("cont"));
                userForm.append("departamento", $("#departamento").val());
                userForm.append("departamento_id", $("#departamento").find("option:selected").data("cont"));
                userForm.append("provincia_trabalho",$("#provincia_trabalho").val());
                userForm.append("provincia_id", $("#provincia_trabalho").find("option:selected").data("cont"));
                userForm.append("telefone_supervisor", $("#telefone_supervisor").val());
                userForm.append("matricula",$("#matricula").val().toUpperCase());
                userForm.append("supervisor",$("#supervisor").val());
                userForm.append("funcao",$("#funcao").val());
                userForm.append("funcao_id", $("#funcao").find("option:selected").data("cont"));
                userForm.append("marca",$("#marca").val());
                userForm.append("modelo",$("#modelo").val());
                userForm.append("ano_aquisicao",$("#ano_aquisicao").val());
                userForm.append("telefone_1",$("#telefone_1").val());
                userForm.append("nome_supervisor",$("#nome_supervisor").val());
                userForm.append("email",$("#email").val());
                userForm.append("username",$("#username").val());
                userForm.append("nivel_acesso", $("#nivel_acesso").val());
                userForm.append("senha",$("#senha").val());

            }

            var xhr=new XMLHttpRequest();
            xhr.open("POST", "/utilizador/editar", true);
            xhr.send(userForm);

            xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
               

                setTimeout(function(){
                    window.location.href="/utilizador";
                  }, 1500)
              }
            }
          };


                
        
        
        
              })
            }
          })
  

$('#registar_util').click(function(){
    if(validar()){


    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente o gravar o utilizador  <b>':'Do you really want to save <b>')+$('#nome').val()+'</b>?')

      // $('#yes_no_content_modal').html('Deseja realmente registar o utilizador <b>'+$('#nome').val()+'</b>?')
      $('#yes_no_modal').openModal();
      $('#yes_btn_modal').click(function(e){ 
         $('#loading').fadeIn().delay(7000).fadeOut();
        e.stopImmediatePropagation();
        e.stopPropagation();
        var userForm = new FormData();
        if($("#nivel_acesso").val()=="cliente")
        {
                userForm.append("nome",$("#nome").val());
                userForm.append("regiao", $("#regiao").val());
                userForm.append("regiao_id", $("#regiao").find("option:selected").data("cont"));
                userForm.append("provincia_trabalho",$("#provincia_trabalho").val());
                userForm.append("provincia_id", $("#provincia_trabalho").find("option:selected").data("cont"));
                userForm.append("telefone_1",$("#telefone_1").val());
                userForm.append("email",$("#email").val());
                userForm.append("username",$("#username").val());
                userForm.append("nivel_acesso", $("#nivel_acesso").val());
                userForm.append("senha",$("#senha").val());
              }
            if($("#nivel_acesso").val()!="cliente"){

                userForm.append("user_code",$("#user_code").val());
                userForm.append("nome",$("#nome").val());
                userForm.append("kilometragem",$("#kilometragem").val());
                userForm.append("carta_conducao",$("#carta_conducao").val());
                userForm.append("data_nascimento", $("#data_nascimento").val());
                userForm.append("Validade_carta", $("#Validade_carta").val());
                userForm.append("regiao", $("#regiao").val());
                userForm.append("regiao_id", $("#regiao").find("option:selected").data("cont"));
                userForm.append("departamento", $("#departamento").val());
                userForm.append("departamento_id", $("#departamento").find("option:selected").data("cont"));
                userForm.append("provincia_trabalho",$("#provincia_trabalho").val());
                userForm.append("provincia_id", $("#provincia_trabalho").find("option:selected").data("cont"));
                userForm.append("telefone_supervisor", $("#telefone_supervisor").val());
                userForm.append("matricula",$("#matricula").val().toUpperCase());
                userForm.append("supervisor",$("#supervisor").val());
                userForm.append("funcao",$("#funcao").val());
                userForm.append("funcao_id", $("#funcao").find("option:selected").data("cont"));
                userForm.append("marca",$("#marca").val());
                userForm.append("modelo",$("#modelo").val());
                userForm.append("ano_aquisicao",$("#ano_aquisicao").val());
                userForm.append("telefone_1",$("#telefone_1").val());
                userForm.append("nome_supervisor",$("#nome_supervisor").val());
                userForm.append("email",$("#email").val());
                userForm.append("username",$("#username").val());
                userForm.append("nivel_acesso", $("#nivel_acesso").val());
                userForm.append("senha",$("#senha").val());

            }

            var xhr=new XMLHttpRequest();
            xhr.open("POST", "/utilizador/novo", true);
            xhr.send(userForm);
              xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
               

                setTimeout(function(){
                    window.location.href="/utilizador";
                  }, 1500)
              }
            }
          };
        



      })
    }
  });

$("#proposito").change(function(){
  if($(this).val()=="project")
  {
   $(".clientte_name").removeClass("hide");
   $(".quotation_number_project").removeClass("hide"); 

  }
  else{
     $(".clientte_name").addClass("hide");
   $(".quotation_number_project").addClass("hide"); 

  }
})


$('#captarTransferencia').click(function(){
  if(validar()){
    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente transferir o veiculo <b>':'Do you really want to save <b>') +$('#marca_modelo').val()+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"'s</b> Transference?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#yes_btn_modal').click(function(e){
     e.stopPropagation();
      e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    // *******************************************************
    var pcote_=new FormData();
       pcote_.append("nivel",$("input[name='nivel']:checked").val());
       pcote_.append("carrocaria",$("input[name='carrocaria']:checked").val());
       pcote_.append("razaoCarrocari",JSON.stringify($("#razaoCarrocaria").val()));
       pcote_.append("luzes",$("input[name='luzes']:checked").val());
       pcote_.append("parabrisas",$("input[name='parabrisa']:checked").val());
       pcote_.append("pneus",$("input[name='pneus']:checked").val());
       pcote_.append("razaoPneus",JSON.stringify($("#razaoPneus").val()));
       pcote_.append("razaoPressao",JSON.stringify($("#razaoPressao").val()));
       pcote_.append("razaoPorcas",JSON.stringify($("#razaoPorcas").val()));
       pcote_.append("razaoVidros",JSON.stringify($("#razaoVidros").val()));
       pcote_.append("razaoLuzes",JSON.stringify($("#razaoLuzes").val()));
       pcote_.append("razaoNivel",JSON.stringify($("#razaoNivel").val()));
       pcote_.append("razaoTravoes",JSON.stringify($("#razaoTravoes").val()));
       pcote_.append("razaoCamera",JSON.stringify($("#razaoCamera").val()));
       pcote_.append("porcas",$("input[name='porcas']:checked").val());
       pcote_.append("pressao",$("input[name='pressao']:checked").val());
       pcote_.append("vidros",$("input[name='vidros']:checked").val());
      // var refrigeracao=$("input[name='refrigeracao']:checked").val();
       pcote_.append("travoes",$("input[name='travoes']:checked").val());
       pcote_.append("camera",$("input[name='camera']:checked").val());
       pcote_.append("handsfree",$("input[name='handsfree']:checked").val());
       pcote_.append("motorista",$("#motorista").val());
      // var data=$("#data").val();
       pcote_.append("matricula",$("#matricula").val());
       pcote_.append("supervisor",$("#supervisor").val());
      // var nome_condutor=$("#nome_condutor").val();
       pcote_.append("nome_receptor",$("#nome_receptor").val());
       pcote_.append("data_transferencia",$("#data_transferencia").val());
       pcote_.append("marca_modelo",$("#marca_modelo").val());
       pcote_.append("quilometragem",$("#quilometragem").val());

      var xhr=new XMLHttpRequest();
      xhr.open("POST", "/transferencia/novo", true);
      xhr.send(pcote_);
      xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

              setTimeout(function(){window.location.href="/transferencia"}, 1000)
            }
          }
        };

    // ******************************************************


    })
  }
})



$("#cancelar1").click(function(){
      window.location.href="/inspdiaria"
    })
$("#cancel_action").click(function(){
      window.location.href="/ferramenta"
    })
$("#cancel_action2").click(function(){
      window.location.href="/ferramenta"
    })

$("#cancelar_util").click(function(){
      window.location.href="/inicio"
    })
$("#cancelar_acao").click(function(){
      window.location.href="/inspdiaria"
    })

$("#cancelarEpi").click(function(){
      window.location.href="/epi"
    })

$("#cancelarFerramenta").click(function(){
      window.location.href="/ferramenta"
    })	
$("#cancelarTanque").click(function(){
      window.location.href="/tanque"
    })	
$("#cancelarMensal").click(function(){
      window.location.href="/inspmensal"
    })	
$("#cancelar1").click(function(){
      window.location.href="/inspdiaria"
    })
$("#cancelar_mensagem").click(function(){
      window.location.href="/mensagem"
    })

$("#cancelarTransferencia").click(function(){
      window.location.href="/transferencia"
    })
$("#cancelarGerador").click(function(){
      window.location.href="/gerador"
    })
$('#enviar').click(function(){
  if(validar()){
    $('#yes_no_title_modal').html('Mensagem do registo')
    $('#yes_no_content_modal').html('Deseja realmente enviar a mensagem para  <b>'+$('#destinatario').val()+'</b>?')
    $('#yes_no_modal').openModal();
    $('#yes_btn_modal').click(function(e){
      e.stopPropagation();
      e.stopImmediatePropagation();
      var destinatario=$("#destinatario").val();
      var assunto=$("#assunto").val();
      var mensage=$("#icon_prefix2").val();
      $.post( "/mensagem/novo", {destinatario:destinatario, assunto:assunto, conteudo:mensage, remetente:"eu"}, function( data ) {
      $("#destinatario").val('');
      $("#assunto").val('');
      $("#icon_prefix2").val();
      
      window.location.href="/mensagem/saida";
      console.log("cheguei!!!!!")
})



    })
  }
})
$("#entrar").click(function(){
  var username=$("#username").val().trim();
  var senha=$("#senha").val().trim();
  var confirm=$("#confirmacaoo").val().trim();
  $.post("/", {senha:senha, username:username, confirm:confirm}, function(data){
    $("#username").val('');
    $("#senha").val('');
  })
})


$("#updatepwd").click(function(){
  var username=$("#username").val();
  var senha=$("#senha").val();
  $.post("/change", {senha:senha, username:username}, function(data){
    $("#username").val('');
    $("#senha").val('');
  })
})

function actualizarDados(){
          $.getJSON('/inspdiaria', function(result){
            $('#table_list .table_body').html('');
            console.log(result[0]);
            for (var i = 0; i < result.length; i++) {
              $('#table_list .table_body').append('<tr><td>'+result[i].motorista+'</td><td>'+result[i].matricula+'</td><td>'+result[i].data+'</td></tr>');
            };
          });


        }
// function actualizarDados_Util(){
// 	$.getJSON('/utilizador', function(result){
// 		$('#table_list .table_body').html('');
// 		console.log(result[0]);
// 		for (var i = 0; i < result.length; i++) {
// 			$('#table_list .table_body').append('<tr><td>'+result[i].motorista+'</td><td>'+result[i].matricula+'</td><td>'+result[i].data+'</td></tr>');
// 		};
// 	});


// }






$('#provincia_nascimento').change(function(){
  updateDistritos('provincia_nascimento', 'distrito_nascimento');
})

$('#provincia_residencia').change(function(){
  updateDistritos('provincia_residencia', 'distrito_residencia');
});



$("#category").change(function(){
  var category=["Assets", "Expenses", "Stock"];
  var subcategory=[["Cellphone", "Deskphone", "Desktop", "Laptop", "Server", "Fire Equipment", "Climbing Kit", "Multimeter", "Battery Analyzer", "Civil Tools", "Disposable Tools", "Electrical", "Electrical Tools", "Electronic Tools", "Handtool", "Kit Tools", "Mechanical Tools", "Other Tools", "Special Tools", "Transmission", "Workshop Tools", "Airconditioner"],["Advertising","Airfreight","Civil Construction","Computer Maintenance & Support","Crane Hire","Customs, Freight & Delivery Charges","Entertainment","Equipment Hire","Fault Location & Repair","Import Duties","Insurance","Labour","Legal Services","Load, Transport & Offload","Maintenance & Servicing","Mechanical Repairs","Medicals","Payroll Support","Printing Service","Recruitment","Rental","Repairs","S.H.E.Q Inspections & Services","Services & Sub Contracting","Software","Staff Accommodation","Subcriptions","Training","Translation Services","Travelling","Vehicles","Waste Container Services"],["Air Conditioniner","Chemicals","Civil","Cleaning/ Sanitation","Consumables","Electrical","Fleet","Generators","IT Accessories","Locks","Oil/Fuel","Other","Poison","R F","S.H.E.Q","Spares","Stationery"]];
  let ten= $("#category").val();
  // console.log(subcat)
  let gh = category.indexOf(ten);
  $('#subcategory').empty(); 
  console.log(ten, gh)
subcategory[gh].forEach(function(distrito){
  $('#subcategory').append('<option value="'+distrito+'">'+distrito+'</option>')
})

})






$('#mocambique').click(function(){
  $('#mocambicano_container').removeClass('hide');
  $('#estrangeiro_container').addClass('hide');
})

$('#estrangeiro').click(function(){
  $('#estrangeiro_container').removeClass('hide');
  $('#mocambicano_container').addClass('hide');
})



$("input[name='cliente_stock']").change(function(){
  if($(this).val()=="sim")
    $(".clientee").removeClass("hide");
  else
    $(".clientee").addClass("hide");

})

$('#estado_civil').change(function(){
  if($(this).val().match(/casado/i)){
    $('#conjuge_container').removeClass('hide');
    $('#conjuge_container input').addClass('preencher');
  } else {
    $('#conjuge_container input').removeClass('preencher');
    $('#conjuge_container').addClass('hide');
  }
})
// **********************************************************************


$('ul.tabs li').click(function(){
  var tab_id = $(this).attr('data-tab');

  $('ul.tabs li').removeClass('currentMan');
  $('.tab-content').removeClass('currentMan');

  $(this).addClass('currentMan');
  $("#"+tab_id).addClass('currentMan');
})
// ******************************************** seccao dos stocks ***************************************************************************
$("#registar_stock_item").click(function(){
if(validar()){

 $('#loading').fadeIn().delay(7000).fadeOut();
  var stock_item= new FormData();


  // let name = $("#name").val();
  let description_item = $("#description_item").val().trim()
  let context = $("#context").val();
  let unit_sale = $("#unit_sale").val();
  let serialized_item = $("input[name='serialized_item']:checked").val();
  let cliente_stock = $("input[name='cliente_stock']:checked").val();
  if(cliente_stock=="Cliente")
    {let cliente = $("#cliente").val();
    stock_item.append("cliente_name", cliente);

    }
  let category = $("#category").val();
  let subcategory = $("#subcategory").val();
  let product_code = $("#mestsre").val();
  let lead_time = $("#lead_time").val();
  let part_number = $("#part_number").val();
  // let list_date_price  = $("#list_date_price").val();

  

  // stock_item.append("name", name);
  stock_item.append("description_item", description_item);
  stock_item.append("context", context);
  stock_item.append("unit_sale", unit_sale);
  stock_item.append("serialized_item", serialized_item);
  stock_item.append("cliente_stock", cliente_stock);
  
  stock_item.append("category", category);
  stock_item.append("subcategory", subcategory);
  stock_item.append("product_code", product_code);
  stock_item.append("lead_time", lead_time);
  stock_item.append("part_number", part_number);
  // stock_item.append("list_date_price",list_date_price);

  var xhr = new XMLHttpRequest();
  // Add any event handlers here...
  xhr.open('POST', "/stock_item/novo", true);
  xhr.send(stock_item);

  setTimeout(function(){window.location.href="/stock_item"}, 1000)
  
}





  });
  

  $("#registar_stock_item_editado").click(function(){
    $('#loading').fadeIn().delay(7000).fadeOut();
     var stock_item= new FormData();
 
 
     // let name = $("#name").val();
     let description_item = $("#description_item").val().trim();
     let fisher= $("#description_item").attr("fisher").trim();
     let context = $("#context").val();
     let unit_sale = $("#unit_sale").val();
     let serialized_item = $("input[name='serialized_item']:checked").val();
     let cliente_stock = $("input[name='cliente_stock']:checked").val();
     if(cliente_stock=="Cliente")
       {let cliente = $("#cliente").val();
       stock_item.append("cliente_name", cliente);
 
       }
      else{
        let cliente = '';
       stock_item.append("cliente_name", cliente);

      }
     let category = $("#category").val();
     let subcategory = $("#subcategory").val();
     let product_code = $("#mestsre").val();
     let lead_time = $("#lead_time").val();
     let part_number = $("#part_number").val();
     // let list_date_price  = $("#list_date_price").val();
 
     
 
     // stock_item.append("name", name);
     stock_item.append("description_item", description_item);
     stock_item.append("fisher", fisher);
     stock_item.append("context", context);
     stock_item.append("unit_sale", unit_sale);
     stock_item.append("serialized_item", serialized_item);
     stock_item.append("cliente_stock", cliente_stock);
     
     stock_item.append("category", category);
     stock_item.append("subcategory", subcategory);
     stock_item.append("product_code", product_code);
     stock_item.append("lead_time", lead_time);
     stock_item.append("part_number", part_number);
     // stock_item.append("list_date_price",list_date_price);
 
     var xhr = new XMLHttpRequest();
     // Add any event handlers here...
     xhr.open('POST', "/stock_item/editar/item", true);
     xhr.send(stock_item);
 
     setTimeout(function(){window.location.href="/stock_item"}, 1500)
 
 
 
 
 
     })

// ***************************************scanner******************************

// ScanditSDK.configure("AV2e7gL8HAiwJ3BYBgopAUoYipFtFY1Mv2FB02Vbk13WXxdOxF3X9KlPeRt9AwQrxneo3gBqnVc0N1rPH3ZmyNRf00lOUikiV3h+8Z5l5HxrK3s5RyK3uskO+ReTgO0ICL8bBU2v/bbl/zOS+z84lSGB/5eJFwD22g2DaAEnEI2NHNS9XerTfas3kQGsuHKnrHngEhymKEVsHPs3x0EPdo+FGck7WKKE7rv6y6CFLI3iB2HyqsNOEfzLugDuKQjfFPN8HOxSDwkcrNEI3dVFt7Lp9zIn8/dW4jRfLuzt6O3UfyCd1rhQfTwz3qFDK4B0nzErzJiYbfk5f3LuQxIV44kOQBw+//ynVPikK8eaqSp3NR0wqFTvjDtXQOFlhEFpybSB75ysEJwbKFM+1NjC2mbW7TdQ8RnMkEk7eowQJ1rwEB4QC9sAfWOkjLlC7LdRgs4ypcLjjYB2GowBddHUOjHVjGBQD5O9xh0907DRNw2zSg+sqJMgW4h29ayvKT5M4oflegVvN0z49OOK6iumGbDa+7G2rg/ReAiJHkTs5UR7G/dCqmwXu6eXt9GjcKw3YU5hjomUjS0evSu9lqWSwS1UkmpzTMt99t1RDuwy/OZ0C+TGsp/f1EEdodiHt658nZDqDv4NVEuS6GaWH+Dqpx+tPuwbxqFd8SsNhIquAtci5wV0JXGqQOCV4BY5r0KYWtD52ntSA5fSwae/cloc3NauWbXsGVh/6DpFDeQMVZFND42cfDsANgN16UFbG7nwI3jsYqmx+Xqj7eZsP4OB9CKhkf6RfS+obyqc", {
//     engineLocation: "https://unpkg.com/scandit-sdk/build"
//     });

//     ScanditSDK.BarcodePicker.create(document.getElementById("scandit-barcode-picker"), {
//     playSoundOnScan: true,
//     vibrateOnScan: true
//     }).then(function(barcodePicker) {

//     var scanSettings = new ScanditSDK.ScanSettings({
//     enabledSymbologies: ["ean8", "ean13", "upca", "upce", "code128", "code39", "code93", "itf"],
//     codeDuplicateFilter: 1000
//     });
//     barcodePicker.applyScanSettings(scanSettings);

//       barcodePicker.on("scan", function(scanResult) {
    
//       document.getElementById("mestsre").value=scanResult.barcodes.reduce(function(string, barcode) {
//       return string + ScanditSDK.Barcode.Symbology.toHumanizedName(barcode.symbology) + ": " + barcode.data + "\n";
//       }, "")



//       });

//     // barcodePicker is ready here to be used (rest of the tutorial code should go here)
//     }); 

// $('#mestsre').on({
//   keypress: function() { typed_into = true; },
//   change: function() {
//       if (typed_into) {
//           alert('type');
//           typed_into = false; //reset type listener
//       } else {
//           alert('not type');
//       }
//   }
// });

$("#mestsre").on("change", function(){
// var stock_item= new FormData();
// stock_item.append("novo", $("#mestsre").val())

// var xhr = new XMLHttpRequest();
//                   // Add any event handlers here...
// xhr.open('POST',"/stock_item/verificacao", true);
// xhr.send(stock_item);
// console.log("cheguei")
setInterval(getAPIdata1($(this).val()), 2000);
})
    
// *************************************end scanner****************************
  $("#registar_car_service").click( async function(){
    if(validar()){
     $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data_user_new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a Ordem de servico?':'Do you realy want to save this car service?'))
  $('#yes_no_modal').openModal({dismissible:false});
   $("#no_btn_modal_").on( function(e){
      
  })
 
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();


    var p_order= new FormData();


    var primeiro_ficheiro=$("#primeiro_ficheiro").get(0).files;
      if(primeiro_ficheiro.length!=0){
      for(let i = 0, j = primeiro_ficheiro.length; i<j;i++){
        p_order.append('primeiro_ficheiro', primeiro_ficheiro[i]);
      }
      }

       


    

      $("td.item_nome").each(function(){
      p_order.append("item_nome", $(this).text().trim());
         });

      // p_order.append("cliente_reff", $("#supplier_service").find("option:selected").attr("cliente_reff"));


    p_order.append("requested_by", $("#requested_by").val());
    p_order.append("matricula", $("#matricula_service").val());
    p_order.append("marca", $("#marca").val());
    p_order.append("modelo", $("#modelo").val());
    p_order.append("quilometragem",$("#quilometragem").val());
    p_order.append("regiao", $("#regiao").val());
    p_order.append("supplier_service",$("#supplier_service").val());
    p_order.append("supplier_reff", $("#supplier_service").find("option:selected").attr("cliente_reff"));
    p_order.append("type_service", $("#type_service").val());

    

    var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', "/carservice/novo", true);
        xhr.send(p_order);

        setTimeout(function(){window.location.href="/carservice"}, 2500)

  })
}
})




  $("#registar_Po").click( async function(){
    if(validar() && $("#for_store").val()!=null){
     $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data_user_new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a P.O?':'Do you realy want to save this P.O?'))
  $('#yes_no_modal').openModal({dismissible:false});
   $("#no_btn_modal_").on( function(e){
      
  })
 
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();
    var requested_by = $("#requested_by").val();
    var supplier = $("#supplier").val();
    var deliver_shipping = $("#deliver_shipping").val();
    var supplier_contact = $("#supplier_contact").val();
    var address = $("#address").val();
    var supplier_code = $("#supplier_code").val();
    var payment_method = $("#payment_method").val();
    var terms = $("#terms").val();
    var department = $("#department").val();

    var proposito = $("#proposito").val();

    if(proposito=="project"){
    var clientte_name=$("#clientte_name").val();
    var quotation_number_project=$("#quotation_number_project").val();
    }

    var quotation_number = $("#quotation_number").val();
    var for_store = $("#for_store").val();
    var for_store_ref=$("#for_store").find("option:selected").data("for_store_ref");
    var po_approver = $("#po_approver").val();
    var currency =$("input[name='currency']:checked").val();
    // var exchange_rate =$("#exchange_rate").val();
    var comment =$("#comment").val();
   

    






    var p_order= new FormData();


    var primeiro_ficheiro=$("#primeiro_ficheiro").get(0).files;
      if(primeiro_ficheiro.length!=0){
      for(let i = 0, j = primeiro_ficheiro.length; i<j;i++){
        p_order.append('primeiro_ficheiro', primeiro_ficheiro[i]);
      }
      }

       var segundo_ficheiro=$("#segundo_ficheiro").get(0).files;
      if(segundo_ficheiro.length!=0){
      for(let i = 0, j = segundo_ficheiro.length; i<j;i++){
        p_order.append('segundo_ficheiro', segundo_ficheiro[i]);
      }
      }


       var terceiro_ficheiro=$("#terceiro_ficheiro").get(0).files;
      if(terceiro_ficheiro.length!=0){
      for(let i = 0, j = terceiro_ficheiro.length; i<j;i++){
        p_order.append('terceiro_ficheiro', terceiro_ficheiro[i]);
      }
      }


    $("td.item_quantidade").each(function(){
      p_order.append("quantidades",$(this).text().trim());

    })


     $("td.item_preco").each(function(){
      p_order.append("item_preco",$(this).text().trim());

    })

      $("td.item_nome").each(function(){
      p_order.append("item_nome",$(this).text().trim());
      p_order.append("referencia", $(this).attr("data-referenciaa"));
      p_order.append("serialized", $(this).attr("data-serialized"));
       p_order.append("cliente_name", $(this).attr("data-cliente_name"));
       

    });
      p_order.append("cliente_reff", $("#supplier").find("option:selected").attr("cliente_reff"));

       $("td.total").each(function(){
      p_order.append("total",$(this).text().trim());

    })
    p_order.append("department_ref", $("#department").find("option:selected").data("cont"));
    p_order.append("sub_total",$("td#subtotal").text());

    p_order.append("iva",$("td#iva_valor").text());

    p_order.append("total_a_pagar",$("td#total_a_pagar").text());

    p_order.append("valor_em_metical", $("td#metical_converted").text());
    p_order.append("valor_em_dolar", $("td#dolar_converted").text());
    p_order.append("valor_em_euro", $("td#euro_converted").text());
    p_order.append("valor_em_rand", $("td#rand_converted").text());


    if(proposito=="project"){
    p_order.append("clientte_name", clientte_name);
    p_order.append("quotation_number_project", quotation_number_project);
  }

    p_order.append("requested_by",requested_by);
    p_order.append("supplier",supplier);
    p_order.append("deliver_shipping",deliver_shipping);
    p_order.append("supplier_contact",supplier_contact);
    p_order.append("address",address);
    p_order.append("supplier_code",supplier_code);
    p_order.append("payment_method",payment_method);
    p_order.append("terms",terms);
    p_order.append("department",department);
    p_order.append("proposito",proposito);
    p_order.append("quotation_number",quotation_number);
    p_order.append("for_store",for_store);
    p_order.append("for_store_ref",for_store_ref);
    p_order.append("po_approver",po_approver);
    p_order.append("currency",currency);
    // p_order.append("exchange_rate",exchange_rate);
    p_order.append("comment",comment);

    var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', "/purchase_order/novo", true);
        xhr.send(p_order);
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              
              Materialize.toast("gravado com sucesso", 2000, "rounded");
              setTimeout(function(){window.location.href="/purchase_order"}, 1000)
            }
          }
        };

        // setTimeout(function(){window.location.href="/purchase_order"}, 2500)

  })
}
})
$("#gravar__").click( async function(){
    if(validar() && $("#for_store").val()!=null){
     $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data_user_new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a P.O?':'Do you realy want to save this P.O?'))
  $('#yes_no_modal').openModal({dismissible:false});
   $("#no_btn_modal_").on( function(e){
      
  })
 
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();
    var requested_by = $("#requested_by").val();
    var supplier = $("#supplier").val();
    var deliver_shipping = $("#deliver_shipping").val();
    var supplier_contact = $("#supplier_contact").val();
    var address = $("#address").val();
    var supplier_code = $("#supplier_code").val();
    var payment_method = $("#payment_method").val();
    var terms = $("#terms").val();
    var department = $("#department").val();
    var proposito = $("#proposito").val();
    var quotation_number = $("#quotation_number").val();
    var for_store = $("#for_store").val();
    var for_store_ref=$("#for_store").find("option:selected").data("for_store_ref");
    var po_approver = $("#po_approver").val();
    var currency =$("input[name='currency']:checked").val();
    // var exchange_rate =$("#exchange_rate").val();
    var comment =$("#comment").val();
   

    






    var p_order= new FormData();


    var primeiro_ficheiro=$("#primeiro_ficheiro").get(0).files;
      if(primeiro_ficheiro.length!=0){
      for(let i = 0, j = primeiro_ficheiro.length; i<j;i++){
        p_order.append('primeiro_ficheiro', primeiro_ficheiro[i]);
      }
      }

       var segundo_ficheiro=$("#segundo_ficheiro").get(0).files;
      if(segundo_ficheiro.length!=0){
      for(let i = 0, j = segundo_ficheiro.length; i<j;i++){
        p_order.append('segundo_ficheiro', segundo_ficheiro[i]);
      }
      }


       var terceiro_ficheiro=$("#terceiro_ficheiro").get(0).files;
      if(terceiro_ficheiro.length!=0){
      for(let i = 0, j = terceiro_ficheiro.length; i<j;i++){
        p_order.append('terceiro_ficheiro', terceiro_ficheiro[i]);
      }
      }


    $("td.item_quantidade").each(function(){
      p_order.append("quantidades",$(this).text().trim());

    })


     $("td.item_preco").each(function(){
      p_order.append("item_preco",$(this).text().trim());

    })

      $("td.item_nome").each(function(){
      p_order.append("item_nome",$(this).text().trim());
      p_order.append("referencia", $(this).attr("data-referenciaa"));
      p_order.append("serialized", $(this).attr("data-serialized"));
       p_order.append("cliente_name", $(this).attr("data-cliente_name"));
       

    });
      p_order.append("cliente_reff", $("#supplier").find("option:selected").attr("cliente_reff"));

       $("td.total").each(function(){
      p_order.append("total",$(this).text().trim());

    })
        
    p_order.append("sub_total",$("td#subtotal").text());

    p_order.append("iva",$("td#iva_valor").text());

    p_order.append("total_a_pagar",$("td#total_a_pagar").text());

    p_order.append("valor_em_metical", $("td#metical_converted").text());
    p_order.append("valor_em_dolar", $("td#dolar_converted").text());
    p_order.append("valor_em_euro", $("td#euro_converted").text());
    p_order.append("valor_em_rand", $("td#rand_converted").text());


     if(proposito=="project"){
    p_order.append("clientte_name", $("#clientte_name").val());
    p_order.append("quotation_number_project", $("#quotation_number_project").val());
  }




    p_order.append("requested_by",requested_by);
    p_order.append("supplier",supplier);
    p_order.append("deliver_shipping",deliver_shipping);
    p_order.append("supplier_contact",supplier_contact);
    p_order.append("address",address);
    p_order.append("supplier_code",supplier_code);
    p_order.append("payment_method",payment_method);
    p_order.append("terms",terms);
    p_order.append("department",department);
    p_order.append("proposito",proposito);

    if(proposito=="project"){
    var clientte_name=$("#clientte_name").val();
    var quotation_number_project=$("#quotation_number_project").val();
    }

    p_order.append("department_ref", $("#department").find("option:selected").data("cont"));
    p_order.append("quotation_number",quotation_number);
    p_order.append("for_store",for_store);
    p_order.append("for_store_ref",for_store_ref);
    p_order.append("po_approver",po_approver);
    p_order.append("currency",currency);
    p_order.append("returned_reason","Incomplete");
    p_order.append("returned",true);
    p_order.append("unprocessed","Unprocessed");
    p_order.append("comment",comment);

    var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', "/purchase_order/gravar_", true);
        xhr.send(p_order);
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

              setTimeout(function(){window.location.href="/purchase_order"}, 1000)
            }
          }
        };

        // setTimeout(function(){window.location.href="/purchase_order"}, 2500)

  })
}
})

$("#registar_Po_editado").click( async function(){
if(validar()){
     $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data_user_new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente gravar a P.O?':'Do you realy want to save thid P.O?'))
  $('#yes_no_modal').openModal({dismissible:false});
   $("#no_btn_modal_").on( function(e){
      
  })
 
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $('#loading').fadeIn().delay(7000).fadeOut();
    var requested_by = $("#requested_by").val();
    var supplier = $("#supplier").val();
    var deliver_shipping = $("#deliver_shipping").val();
    var supplier_contact = $("#supplier_contact").val();
    var address = $("#address").val();
    var supplier_code = $("#supplier_code").val();
    var payment_method = $("#payment_method").val();
    var terms = $("#terms").val();
    var department = $("#department").val();
    var proposito = $("#proposito").val();

    if(proposito=="project"){
    var clientte_name=$("#clientte_name").val();
    var quotation_number_project=$("#quotation_number_project").val();
    }

    var quotation_number = $("#quotation_number").val();
    var for_store = $("#for_store").val();
    var for_store_ref=$("#for_store").find("option:selected").data("for_store_ref");
    var po_approver = $("#po_approver").val();
    var currency =$("input[name='currency']:checked").val();
    // var exchange_rate =$("#exchange_rate").val();
    var comment =$("#comment").val();
    var ide=$("#requested_by").attr("data-new-sr");  
   

    






    var p_order= new FormData();


    var primeiro_ficheiro=$("#primeiro_ficheiro").get(0).files;
      if(primeiro_ficheiro.length!=0){
      for(let i = 0, j = primeiro_ficheiro.length; i<j;i++){
        p_order.append('primeiro_ficheiro', primeiro_ficheiro[i]);
      }
      }

       var segundo_ficheiro=$("#segundo_ficheiro").get(0).files;
      if(segundo_ficheiro.length!=0){
      for(let i = 0, j = segundo_ficheiro.length; i<j;i++){
        p_order.append('segundo_ficheiro', segundo_ficheiro[i]);
      }
      }


       var terceiro_ficheiro=$("#terceiro_ficheiro").get(0).files;
      if(terceiro_ficheiro.length!=0){
      for(let i = 0, j = terceiro_ficheiro.length; i<j;i++){
        p_order.append('terceiro_ficheiro', terceiro_ficheiro[i]);
      }
      }


    $("td.item_quantidade").each(function(){
      p_order.append("quantidades",$(this).text().trim());

    })


     $("td.item_preco").each(function(){
      p_order.append("item_preco",$(this).text().trim());

    })

      $("td.item_nome").each(function(){
      p_order.append("item_nome",$(this).text().trim());
      p_order.append("referencia", $(this).attr("data-referenciaa"));
      p_order.append("serialized", $(this).attr("data-serialized"));
      p_order.append("cliente_name", $(this).attr("data-cliente_name"));

    });
       p_order.append("cliente_reff", $("#supplier").find("option:selected").attr("cliente_reff"));


       $("td.total").each(function(){
      p_order.append("total",$(this).text().trim());

    })
        
    p_order.append("sub_total",$("td#subtotal").text().trim());

    p_order.append("iva",$("td#iva_valor").text());

    p_order.append("total_a_pagar",$("td#total_a_pagar").text());

    p_order.append("valor_em_metical", $("td#metical_converted").text());
    p_order.append("valor_em_dolar", $("td#dolar_converted").text());
    p_order.append("valor_em_euro", $("td#euro_converted").text());
    p_order.append("valor_em_rand", $("td#rand_converted").text());


    if(proposito=="project"){
        p_order.append("clientte_name", clientte_name);
        p_order.append("quotation_number_project", quotation_number_project);
      }

      p_order.append("department_ref", $("#department").find("option:selected").data("cont"));
    p_order.append("requested_by",requested_by);
    p_order.append("idee",ide);
    p_order.append("supplier",supplier);
    p_order.append("deliver_shipping",deliver_shipping);
    p_order.append("supplier_contact",supplier_contact);
    p_order.append("address",address);
    p_order.append("supplier_code",supplier_code);
    p_order.append("payment_method",payment_method);
    p_order.append("terms",terms);
    p_order.append("department",department);
    p_order.append("proposito",proposito);
    p_order.append("quotation_number",quotation_number);
    p_order.append("for_store",for_store);
    p_order.append("for_store_ref",for_store_ref);
    p_order.append("po_approver",po_approver);
    p_order.append("currency",currency);
    // p_order.append("exchange_rate",exchange_rate);
    p_order.append("comment",comment);

    var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', "/purchase_order/po_editado", true);
        xhr.send(p_order);
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

              setTimeout(function(){window.location.href="/purchase_order"}, 1000)
            }
          }
        };

        // setTimeout(function(){window.location.href="/purchase_order"}, 2500)

  })
}
})


$(".detalhescsss").click(function(){
  console.log($(this).attr("labesl"))
  if($(this).attr("labesl")=="undefined"){
    window.location.href="/manutencao/detalhesJobcardCallOut/"+$(this).attr("labell")
  }else

  window.location.href="/climatizacao/detalhes/"+$(this).attr("labell")
})


  $("#notifycallcenterhvacClicar").click(function(){
    var jobcardhvacid = $(this).attr("data-user-new");
    console.log(jobcardhvacid);
    console.log("Notify call center");

    
    var jobcard_remedialactioncomp = $("#jobcard_remedialaction").val();
    var jobcard_healthsafetycomp = $("#jobcard_healthsafety").val();
    var jobcard_hsreasoncomp = $("#jobcard_hsreason").val();
    if(((jobcard_remedialactioncomp == "") && (jobcard_healthsafetycomp == null)) || ((jobcard_healthsafetycomp == "Yes") && (jobcard_hsreasoncomp == ""))){

      $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
     $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Por favor, preencha todos campos.':'Please fill out all fields.'))
     $('#msg_modal').openModal();

   }else{

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente enviar para aprovação esta folha de serviço':'Do you really want to send this jobcard to approval? <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#yes_btn_modal').click(function(e){
        $('#loading').fadeIn().delay(20000).fadeOut();
        e.stopPropagation();

        var hvacformdata = new FormData();
        var rule= "/climatizacao/sendforapprovalhvac";
        
        console.log("pela segunda vez ", jobcardhvacid);
        hvacformdata.append("jobcardhvacid", jobcardhvacid);

        var jobcard_remedialaction = $("#jobcard_remedialaction").val();
        hvacformdata.append("jobcard_remedialaction", jobcard_remedialaction);

        var jobcard_healthsafety = $("#jobcard_healthsafety").val();
        hvacformdata.append("jobcard_healthsafety", jobcard_healthsafety);

        var jobcard_hsreason;

        if(jobcard_healthsafety == "No"){
           jobcard_hsreason = "";
        }else{
          jobcard_hsreason = $("#jobcard_hsreason").val();
        }
        
        hvacformdata.append("jobcard_hsreason", jobcard_hsreason);

        console.log("qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq");
        console.log(hvacformdata);

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', rule, true);
        xhr.send(hvacformdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) { // When data is received successfully
                    setTimeout(function(){window.location.href="/climatizacao/correctivainprogress"}, 1500)
                }
            }
        }
    })
  }
});

$(".notifycallcenterhvac").click(function(){
    var jobcardhvacid = $(this).attr("data-user-new");
    console.log(jobcardhvacid);
    console.log("Notify call center");

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente enviar para aprovação esta folha de serviço':'Do you really want to send this jobcard to approval? <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#yes_btn_modal').click(function(e){
        $('#loading').fadeIn().delay(20000).fadeOut();
        e.stopPropagation();

        var hvacformdata = new FormData();
        var rule= "/climatizacao/sendforapprovalhvac";
        
        console.log("pela segunda vez ", jobcardhvacid);
        hvacformdata.append("jobcardhvacid", jobcardhvacid);

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', rule, true);
        xhr.send(hvacformdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) { // When data is received successfully
                    setTimeout(function(){window.location.href="/climatizacao/correctivainprogress"}, 1500)
                }
            }
        }
    })
});


$("#aprovarcallouthvac").click(function(){
    var jobcardhvacid = $(this).attr("data-user-new");
    console.log(jobcardhvacid);
    console.log("Approve");

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente aprovar esta folha de serviço':'Do you really want to approve this jobcard to approval? <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#yes_btn_modal').click(function(e){
        $('#loading').fadeIn().delay(20000).fadeOut();
        e.stopPropagation();

        var hvacformdata = new FormData();
        var rule= "/climatizacao/approvecallouthvac";
        
        console.log("pela segunda vez ", jobcardhvacid);
        hvacformdata.append("jobcardhvacid", jobcardhvacid);

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', rule, true);
        xhr.send(hvacformdata);
        // xhr.onreadystatechange = function () {
        //     if (xhr.readyState === 4) {
        //         if (xhr.status === 200) { // When data is received successfully
        //             setTimeout(function(){window.location.href="/manutencao/ttnumberhome/inprogress"}, 1500)
        //         }
        //     }
        // }
        setTimeout(function(){window.location.href="/climatizacao/correctivainprogress/"}, 1500)
    })
});



$(".saidasitecallouthvac").click(function () {
    var jobcardhvacid = $(this).attr("data-user-new");
    console.log(jobcardhvacid);
    console.log("Leave Site");

    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente sair do local?':'Do you really want to leave this location? <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#yes_btn_modal').click(function(e){
        $('#loading').fadeIn().delay(20000).fadeOut();
        e.stopPropagation();

        var hvacformdata = new FormData();
        var rule= "/climatizacao/leavesitecallouthvac";
        
        console.log("pela segunda vez ", jobcardhvacid);
        hvacformdata.append("jobcardhvacid", jobcardhvacid);

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', rule, true);
        xhr.send(hvacformdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) { // When data is received successfully
                    setTimeout(function(){window.location.href="/climatizacao/correctivacomplete"}, 1500)
                }
            }
        }
    });

});


  $("#emprogresso").click(function(){
      window.location.href="/purchase_order/emprogresso"
    });

  $("#car_serivce").click(function(){
      window.location.href="/carservice";
    })

   $("#aprovados").click(function(){
      window.location.href="/purchase_order/aprovados"
    })

  $("#finalizados").click(function(){
      window.location.href="/purchase_order/finalizados"
    })

   $("#reprovados").click(function(){
      window.location.href="/purchase_order/reprovados"
    })

   $("#relatrios").click(function(){
      window.location.href="/purchase_order/relatorios"
    })

   $("#cancelar_bbkt").click(function(){
      window.location.href="/stock_request/home"
    });


    $('.hvacsignature').click(function(){
          var referencia = $(this).attr("data-user-new");
          console.log(referencia, "*********");
          window.location.href="/climatizacao/detalhesassinaturahvacjobcard/" + referencia;
    });



   

    $("#registar_StRequestWh").click(function(){

      if(validar()){
    
      $('#loading').fadeIn().delay(7000).fadeOut();
        var requested_by = $("#requested_by").val();
        // var company = $("#company").val();
        var request_from = $("#request_from").val();
        var request_from_ref=$("#request_from").find("option:selected").data("wh");
        var responsaveis=$("#request_from").find("option:selected").data("resp");
        var responsaveis_armazem1=$("#request_from").find("option:selected").data("chefe");
        if( responsaveis_armazem1.indexOf(",")!=-1)
          var responsaveis_armazem = responsaveis_armazem1.split(",");
        else
          var responsaveis_armazem= [responsaveis_armazem1];
        var department = $("#department").val(); 
        // $("#request_from").find("option:selected").data("resp");
        var Date_required = $("#Date_required").val();
        // var quote_BS_number = $("#quote_BS_number").val();
        var reason = $("#reason").val();
        var book_out_to_store = $("#book_out_to_store").val();
        // var responsaveis = $("#responsaveis").val();
        // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
        
    
    
        var stock_request_form= new FormData();
    
        responsaveis_armazem.forEach(function(item){
          stock_request_form.append("responsaveis_arrmazem", item);
        });
    
        $("td.item_quantidade").each(function(){
            stock_request_form.append("quantidades",$(this).text());
    
          })
        
        $("td.item_nome").each(function(){
            stock_request_form.append("item_nome",$(this).text().trim());
             stock_request_form.append("referencia", $(this).attr("data-referenciaa"));
             stock_request_form.append("serialized", $(this).attr("data-serialized"));
             stock_request_form.append("cliente_name", $(this).attr("data-cliente_name"));
    
          })
    
          stock_request_form.append("requested_by",requested_by);
          stock_request_form.append("chefe_departamento",$("#department").find("option:selected").data("chefe_d"));
          // stock_request_form.append("company",company);
          stock_request_form.append("request_from",request_from);
          stock_request_form.append("request_from_ref",request_from_ref);
          stock_request_form.append("department",department);
          stock_request_form.append("Date_required",Date_required);
          // stock_request_form.append("quote_BS_number",quote_BS_number);
          stock_request_form.append("reason",reason);
          stock_request_form.append("book_out_to_store",book_out_to_store);
          stock_request_form.append("requested_by_ref", $("#book_out_to_store").attr("randwom"));
          stock_request_form.append("responsaveis",responsaveis);
    
          var xhr = new XMLHttpRequest();
              // Add any event handlers here...
              xhr.open('POST', "/armazem/stockrequestwh/novo", true);
              xhr.send(stock_request_form);
               xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
    
              
            }
    
      });

  $("#criacaoandepto").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    // var requested_by = $("#requested_by").val();
    // var company = $("#company").val();




    // var nome = $("#nome").val();
    // var chefe_depart = $("#chefe_depart").val();
    // var limite_po = $("#limite_po").val();
    // var lim_me=  $("#limite_mensals").val();
    // var chefe_depart_id=$("#chefe_depart").find("option:selected").data("ident");
   
   
    // var responsaveis = $("#responsaveis").val();
    // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
    


    stock_request= new FormData();

  stock_request.append("departamento",$("#departamento").val());
  if($("#departamento").val()!=null)
    stock_request.append("departamento_ref",$("#departamento").find("option:selected").data("cont"));

stock_request.append("cliente",$("#cliente_hvac").val());
if($("#cliente_hvac").val()!=null)
    stock_request.append("cliente_ref",$("#cliente_hvac").find("option:selected").data("cont"));
stock_request.append("filial",$("#filial").val());
if($("#filial").val()!=null)
    stock_request.append("filial_ref",$("#filial").find("option:selected").data("cont"));

stock_request.append("regiao",$("#regiao").val());
if($("#regiao").val()!=null)
    stock_request.append("regiao_ref",$("#regiao").find("option:selected").data("cont"));

stock_request.append("provincia",$("#provincia_trabalho").val());
if($("#provincia_trabalho").val()!=null)
    stock_request.append("provincia_ref",$("#provincia_trabalho").find("option:selected").data("cont"));

stock_request.append("tecnico",$("#tecnico").val());
if($("#tecnico").val()!=null)
    stock_request.append("tecnico_ref",$("#tecnico").find("option:selected").data("cont"));

stock_request.append("viatura",$("#viatura").val());
stock_request.append("local",$("#local").val());
stock_request.append("prioridade",$("#jobcard_priority").val());
stock_request.append("data_inicio",$("#data").val());
stock_request.append("razao",$("#razao").val());

if($("td.item_nome").text().trim()!=null)
$("td.item_nome").each(function(){
      stock_request.append("assistente",$(this).text().trim());
       stock_request.append("referencia", $(this).attr("data-referenciaa"));


    })
    
    
      
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/climatizacao/hvaccorrtsve", true);
          xhr.send(stock_request);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/climatizacao/correctivanew"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

 $("#criacao_hvac_clinet").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    // var requested_by = $("#requested_by").val();
    // var company = $("#company").val();




    // var nome = $("#nome").val();
    // var chefe_depart = $("#chefe_depart").val();
    // var limite_po = $("#limite_po").val();
    // var lim_me=  $("#limite_mensals").val();
    // var chefe_depart_id=$("#chefe_depart").find("option:selected").data("ident");
   
   
    // var responsaveis = $("#responsaveis").val();
    // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
    


    stock_request= new FormData();

  stock_request.append("nome_cliente",$("#nome_cliente").val());
  

stock_request.append("numero_primavera",$("#numero_primavera").val());

stock_request.append("regiao",$("#regiao").val());
if($("#regiao").val()!=null)
    stock_request.append("regiao_ref",$("#regiao").find("option:selected").data("cont"));

stock_request.append("provincia",$("#provincia").val());
if($("#provincia").val()!=null)
    stock_request.append("provincia_ref",$("#provincia").find("option:selected").data("cont"));



stock_request.append("numero_cliente",$("#numero_cliente").val());
stock_request.append("rua",$("#rua").val());


stock_request.append("telefone",$("#telefone").val());
    
stock_request.append("email",$("#email").val());
stock_request.append("telemovel",$("#telemovel").val());
stock_request.append("bairro",$("#bairro").val());

      
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/climatizacao/cliente_hvac_re", true);
          xhr.send(stock_request);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               if(signal != "true"){
                    setTimeout(function(){window.location.href="/climatizacao/novo"}, 1500)
                }else{
                    setTimeout(function(){window.location.href="/cliente/clienteshvac"}, 1500)
                }

              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

 $("#criarFilialHvac").click(function(){
    var signal = $(this).attr("signal");
    console.log(signal);
    var id = $(this).attr("detalhesCliente");
    console.log(id);

    setTimeout(function(){
        window.location.href=`/cliente/novafilial/${id}`;
    }, 300);
    
 });



 $("#criacao_hvac_filiaoks").click(function(){
  var signal = $(this).attr("signal");
    var id = $(".preencher").attr("idioty");
    console.log(id)
    console.log(signal);

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    // var requested_by = $("#requested_by").val();
    // var company = $("#company").val();




    // var nome = $("#nome").val();
    // var chefe_depart = $("#chefe_depart").val();
    // var limite_po = $("#limite_po").val();
    // var lim_me=  $("#limite_mensals").val();
    // var chefe_depart_id=$("#chefe_depart").find("option:selected").data("ident");
   
   
    // var responsaveis = $("#responsaveis").val();
    // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
    


    stock_request= new FormData();

  stock_request.append("nome_cliente",$("#nome_cliente").val());
  stock_request.append("nreffgty",$("#nome_cliente").attr("idioty"));
  

stock_request.append("nome",$("#nome").val());
stock_request.append("bairro",$("#bairro").val());
// stock_request.append("nome_cliente",$("#nome_cliente").val());
stock_request.append("regiao",$("#regiao").val());
if($("#regiao").val()!=null)
    stock_request.append("regiao_ref",$("#regiao").find("option:selected").data("cont"));

stock_request.append("provincia",$("#provincia").val());
if($("#provincia").val()!=null)
    stock_request.append("provincia_ref",$("#provincia").find("option:selected").data("cont"));



stock_request.append("numero_cliente",$("#numero_cliente").val());
stock_request.append("rua",$("#rua").val());

    
    
      
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/climatizacao/clientefiliare", true);
          xhr.send(stock_request);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               if(signal != "true"){
                    setTimeout(function(){window.location.href="/climatizacao/novo"}, 1500)
               }else{
                    setTimeout(function(){window.location.href=`/cliente/editarClientehvac/${id}`}, 1500)

               }
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

 $("#criacaoeditasxandepto").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    // var requested_by = $("#requested_by").val();
    // var company = $("#company").val();
  var tysu=$(this).attr("entrsa")




    // var nome = $("#nome").val();
    // var chefe_depart = $("#chefe_depart").val();
    // var limite_po = $("#limite_po").val();
    // var lim_me=  $("#limite_mensals").val();
    // var chefe_depart_id=$("#chefe_depart").find("option:selected").data("ident");
   
   
    // var responsaveis = $("#responsaveis").val();
    // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
    


    stock_request= new FormData();









  stock_request.append("departamento",$("#departamento").val());
  if($("#departamento").val()!=null)
    stock_request.append("departamento_ref",$("#departamento").find("option:selected").data("cont"));

stock_request.append("cliente",$("#cliente_hvac").val());
if($("#cliente_hvac").val()!=null)
    stock_request.append("cliente_ref",$("#cliente_hvac").find("option:selected").data("cont"));
stock_request.append("filial",$("#filial").val());
if($("#filial").val()!=null)
    stock_request.append("filial_ref",$("#filial").find("option:selected").data("cont"));

stock_request.append("regiao",$("#regiao").val());
if($("#regiao").val()!=null)
    stock_request.append("regiao_ref",$("#regiao").find("option:selected").data("cont"));

stock_request.append("provincia",$("#provincia_trabalho").val());
if($("#provincia_trabalho").val()!=null)
    stock_request.append("provincia_ref",$("#provincia_trabalho").find("option:selected").data("cont"));

stock_request.append("tecnico",$("#tecnico").val());
if($("#tecnico").val()!=null)
    stock_request.append("tecnico_ref",$("#tecnico").find("option:selected").data("cont"));

stock_request.append("viatura",$("#viatura").val());
stock_request.append("local",$("#local").val());
stock_request.append("prioridade",$("#jobcard_priority").val());
stock_request.append("data_inicio",$("#data").val());
stock_request.append("razao",$("#razao").val());
if($("td.item_nome").text().trim()!=null)
$("td.item_nome").each(function(){
      stock_request.append("assistente",$(this).text().trim());
       stock_request.append("referencia", $(this).attr("data-referenciaa"));


    })
    
    
      
     var nodsaa="/climatizacao/editarhvac/"+tysu;
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST',nodsaa , true);
          xhr.send(stock_request);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/climatizacao/correctivanew"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

 $("#filial").change(function(){
  var camn=$("#cliente_hvac").find("option:selected").data("cont")
  if($(this).val()=="Nova filial" && camn!=null){
    $('#loading').fadeIn().delay(10000).fadeOut();

      window.location.href="/climatizacao/novafilial/"+camn;

  }
  else
  {
    var tepero=JSON.parse($("#local").attr("makhapa"))
    var temoero= $("#cliente_hvac").find("option:selected").data("cont");   

    var new_options =tepero[tepero.findIndex(x=>x._id==temoero)].filial;
    var algo1=$("#filial").find("option:selected").data("cont")
    var new_options1=new_options.findIndex(x=>x._id==algo1);
    $('#regiao').empty();
    $('#provincia_trabalho').empty();
    var algo="<option value='"+new_options[new_options1].regiao+"' data-cont='"+new_options[new_options1].regiao_ref+"'>"+new_options[new_options1].regiao+"</option>";
     var algo2="<option value='"+new_options[new_options1].provincia+"' data-cont='"+new_options[new_options1].provincia_ref+"'>"+new_options[new_options1].provincia+"</option>";
    $("#regiao").html(algo);
    $("#provincia_trabalho").html(algo2);
    $("#local").val(new_options[new_options1].bairro)
  }

 })

$("#cliente_hvac").change(function(){
  if($(this).val()=="Novo")
    {
      $('#loading').fadeIn().delay(10000).fadeOut();
        window.location.href="/climatizacao/criarcliente"
      }
        else{

  var tepero=JSON.parse($("#local").attr("makhapa"))
  var temoero= $("#cliente_hvac").find("option:selected").data("cont");        
var new_options =tepero[tepero.findIndex(x=>x._id==temoero)].filial;

/* Remove all options from the select list */
$('#filial').empty();
var opcoess='<option value="" disabled selected> Escolha a opção</option>';
for(var i=0; i<new_options.length; i++)
  opcoess+="<option value='"+new_options[i].nome+"' data-cont='"+new_options[i]._id+"'>"+new_options[i].nome+"</option>";
 opcoess+="<option value='Nova filial'>Nova</option>";
$("#filial").html(opcoess);
// $("#filial").html("<option value='Novo'>Nova 1</option>");
/* Insert the new ones from the array above */
// for (var key in new_options)
// {
// var opt = document.createElement('option');
//     opt.text = new_options[key];
//     opt.value = key;
//     $('#filial').add(opt, null);
// }

        }
})


$("#updateClienteHvac").click(function(){
     var jobId = $(this).attr("detalhesCliente");
     var user = $(this).attr("detalhessession");
     var nf = $(this).attr("numerofiliais");
     console.log(nf);

     var rule = `/cliente/updateClienteHvac/${jobId}`;
     var clientformdata = new FormData();

     var nome_cliente = $("#nome_cliente").val();
     clientformdata.append("nome_cliente", nome_cliente);

     var numero_primavera = $("#numero_primavera").val();
     clientformdata.append("numero_primavera", numero_primavera);

     var regiao = $("#regiao").val();
     clientformdata.append("regiao", regiao);

     var provincia = $("#provincia").val();
     clientformdata.append("provincia", provincia);

     var rua = $("#rua").val();
     clientformdata.append("rua", rua);

     var xhr = new XMLHttpRequest();
     // Add any event handlers here...
     xhr.open('POST',rule, true);
     xhr.send(clientformdata);

     setTimeout(function(){
        window.location.href=`/cliente/clienteshvac`;
     }, 2500);
     
 });

 $("#updateFilialHvac").click(function(){
    var clienteId = $(this).attr("detalhesCliente");
    var filialId = $(this).attr("detalhesFilial");
    var user = $(this).attr("detalhessession");
    var nf = $(this).attr("numerofiliais");
    var index = $(this).attr("index");


    console.log(nf);
    console.log("A posição da cena " + index);

    var rule = `/cliente/updateFilialHvac/${clienteId}/${index}`;
    var filialformdata = new FormData();

    filialformdata.append("filialId", filialId);

    var nome_cliente = $("#nome_cliente").val();
    filialformdata.append("nome_cliente", nome_cliente);

    var filial_nome = $("#filial_nome").val();
    filialformdata.append("filial_nome", filial_nome);

    var regiao = $("#regiao").val();
    filialformdata.append("regiao", regiao);

    var provincia = $("#provincia").val();
    filialformdata.append("provincia", provincia);

    var rua = $("#rua").val();
    filialformdata.append("rua", rua);

    var bairro = $("#bairro").val();
    filialformdata.append("bairro", bairro);

    var lat = $("#lat").val();
    filialformdata.append("lat", lat);

    var long = $("#long").val();
    filialformdata.append("long", long);

    console.log(nome_cliente, filial_nome, regiao, provincia, rua, bairro,lat, long, filialId);

    var xhr = new XMLHttpRequest();
    // Add any event handlers here...
    xhr.open('POST',rule, true);
    xhr.send(filialformdata);

    setTimeout(function(){
       window.location.href=`/cliente/filialclimatizacao/${clienteId}`;
    }, 2500);
    
});




  $("#registar_sisadm_department").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    // var requested_by = $("#requested_by").val();
    // var company = $("#company").val();
    var nome = $("#nome").val();
    var chefe_depart = $("#chefe_depart").val();
    var limite_po = $("#limite_po").val();
    var lim_me=  $("#limite_mensals").val();
    // var chefe_depart_id=$("#chefe_depart").find("option:selected").data("ident");
   
   
    // var responsaveis = $("#responsaveis").val();
    // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
    


    var stock_request_form= new FormData();

  
    
    
      stock_request_form.append("nome",nome);
      
      // stock_request_form.append("company",company);
      // stock_request_form.append("request_from",request_from);
      stock_request_form.append("chefe_depart",chefe_depart);
      stock_request_form.append("limite_po",limite_po);
      // stock_request_form.append("chefe_depart_id",chefe_depart_id);
      stock_request_form.append("limite_mensal",lim_me);
      // stock_request_form.append("quote_BS_number",quote_BS_number);
      // stock_request_form.append("chefe_depart",chefe_depart);
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/departform", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });


    $("#registar_sisadm_rpvince").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    var requested_by = $("#requested_by").val();
    // var company = $("#company").val();
    var nome = $("#nome").val();
    var nome_supervisor = $("#nome_supervisor").val();
    var regiao = $("#regiao").val();
   
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);
      
      stock_request_form.append("nome_supervisor",nome_supervisor);
      stock_request_form.append("regiao",regiao);
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/provinceform", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { 
                
               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

      $("#registar_sisadm_rigeon").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    var requested_by = $("#requested_by").val();
    // var company = $("#company").val();
    var nome = $("#nome").val();
    var regional_manager = $("#regional_manager").val();
    
   
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);
      
      stock_request_form.append("regional_manager",regional_manager);
     
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/regionform", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { 
                
               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

      $("#nivel_acesso").change(function(){
        if($(this).val()=="cliente")
         { $(".exclusivo").addClass("hide");
            $(".exclusivo > input").removeClass("preencher");
          }
        if($(this).val()!="cliente")
          $(".exclusivo").removeClass("hide");
      })





      $("#registar_sisadm_vehichle").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    var requested_by = $("#requested_by").val();
    // var company = $("#company").val();
    var marca = $("#marca").val();
    var modelo = $("#modelo").val();
    
   
    var stock_request_form= new FormData();

      stock_request_form.append("marca",marca);
      
      stock_request_form.append("modelo",modelo);
     
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/vehichleform", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { 
                
               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

            $("#edistar_sisadm_vehichle").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    var requested_by = $("#requested_by").val();
    // var company = $("#company").val();
    var marca = $("#marca").val();
    var modelo = $("#modelo").val();
    
   
    var stock_request_form= new FormData();

      stock_request_form.append("marca",marca);
      
      stock_request_form.append("modelo",modelo);
     
     stock_request_form.append("idioty",$("#marca").attr("idioty"));
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/editar_viaturs", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { 
                
               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

  $("#editar_sisadm_rigeon").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    var requested_by = $("#requested_by").val();
    // var company = $("#company").val();
    var nome = $("#nome").val();
    var regional_manager = $("#regional_manager").val();
    
   
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);
      
      stock_request_form.append("regional_manager",regional_manager);
     stock_request_form.append("idioty",$("#nome").attr("idioty"));
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/editar_region", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { 
                
               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });


      $("#dsistar_sisadm_rpvince").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    var requested_by = $("#requested_by").val();
    // var company = $("#company").val();
    var nome = $("#nome").val();
    var nome_supervisor = $("#nome_supervisor").val();
    var regiao = $("#regiao").val();
   
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);
      
      stock_request_form.append("nome_supervisor",nome_supervisor);
      stock_request_form.append("idioty",$("#nome").attr("idioty"));
      stock_request_form.append("regiao",regiao);
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/editar_province", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { 
                
               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

  $("#registar_sisadm_functiom").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    
    // var company = $("#company").val();
    var nome = $("#nome").val();
    
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);

      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/functionform", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

  $("#registar_sisadm_nivel_acss").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    
    // var company = $("#company").val();
    var nome = $("#nome").val();
    
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);

      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/moduleform", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });


  $("#adicionar_modulukeUser").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
  var hgusm=$(this).attr("ghsyu");
    
    // var company = $("#company").val();
    var nome = $("#nome").val();
    
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);
       stock_request_form.append("hgusm",hgusm);
        stock_request_form.append("frere", $("#nome").find("option:selected").data("cont"));

      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/utilizador/addmodululedf", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/utilizador"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

  $("#edsistar_sisadm_functiom").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    
    // var company = $("#company").val();
    var nome = $("#nome").val();
    
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);
      stock_request_form.append("idioty",$("#nome").attr("idioty"));
     

      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/editar_function", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

  $("#edsistar_sisadm_modluke").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    
    // var company = $("#company").val();
    var nome = $("#nome").val();
    
    var stock_request_form= new FormData();

      stock_request_form.append("nome",nome);
      stock_request_form.append("idioty",$("#nome").attr("idioty"));
     

      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/editar_module", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });

  $("#editxltar_sisadm_department").click(function(){

  if(validar()){

  $('#loading').fadeIn().delay(10000).fadeOut();
    var requested_by = $("#requested_by").val();
    var idioty = $("#nome").attr("idioty");
    var nome = $("#nome").val();
    var chefe_depart = $("#chefe_depart").val();
    var limite_po = $("#limite_po").val();
    // var chefe_depart_id=$("#chefe_depart").val();
   
   
    // var responsaveis = $("#responsaveis").val();
    // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
    


    var stock_request_form= new FormData();

  
    
    
      stock_request_form.append("nome",nome);
      
      // stock_request_form.append("company",company);
      // stock_request_form.append("request_from",request_from);
      stock_request_form.append("chefe_depart",chefe_depart);
      stock_request_form.append("limite_po",limite_po);
      // stock_request_form.append("chefe_depart_id",chefe_depart_id);
      stock_request_form.append("idioty",idioty);
      stock_request_form.append("limite_mensal", $("#limite_mensals").val());
      // stock_request_form.append("chefe_depart",chefe_depart);
     
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/sisadmin/editar_depart", true);
          xhr.send(stock_request_form);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) { // When data is received successfully
                

               setTimeout(function(){window.location.href="/sisadmin"}, 1500)
              }
            }
          };


          // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
        }

  });



   

$("#registar_StRequest").click(function(){

if(validar()){

$('#loading').fadeIn().delay(10000).fadeOut();
  var requested_by = $("#requested_by").val();
  // var company = $("#company").val();
  var request_from = $("#request_from").val();
  var request_from_ref=$("#request_from").find("option:selected").data("wh");
  var responsaveis=$("#request_from").find("option:selected").data("resp");
  var responsaveis_armazem1=$("#request_from").find("option:selected").data("chefe");
  if( responsaveis_armazem1.indexOf(",")!=-1)
    var responsaveis_armazem = responsaveis_armazem1.split(",");
  else
    var responsaveis_armazem= [responsaveis_armazem1];
  var department = $("#department").val(); 
  // $("#request_from").find("option:selected").data("resp");
  var Date_required = $("#Date_required").val();
  // var quote_BS_number = $("#quote_BS_number").val();
  var reason = $("#reason").val();
  var book_out_to_store = $("#book_out_to_store").val();
  // var responsaveis = $("#responsaveis").val();
  // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
  


  var stock_request_form= new FormData();

  responsaveis_armazem.forEach(function(item){
    stock_request_form.append("responsaveis_arrmazem", item);
  });

  $("td.item_quantidade").each(function(){
      stock_request_form.append("quantidades",$(this).text());

    })
  
  $("td.item_nome").each(function(){
      stock_request_form.append("item_nome",$(this).text().trim());
       stock_request_form.append("referencia", $(this).attr("data-referenciaa"));
       stock_request_form.append("serialized", $(this).attr("data-serialized"));
       stock_request_form.append("cliente_name", $(this).attr("data-cliente_name"));

    })

    stock_request_form.append("requested_by",requested_by);
    stock_request_form.append("chefe_departamento",$("#department").find("option:selected").data("chefe_d"));
    // stock_request_form.append("company",company);
    stock_request_form.append("request_from",request_from);
    stock_request_form.append("request_from_ref",request_from_ref);
    stock_request_form.append("department",department);
    stock_request_form.append("Date_required",Date_required);
    // stock_request_form.append("quote_BS_number",quote_BS_number);
    stock_request_form.append("reason",reason);
    stock_request_form.append("book_out_to_store",book_out_to_store);
    stock_request_form.append("responsaveis",responsaveis);

    var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', "/Stock_request/novo", true);
        xhr.send(stock_request_form);
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };


        // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
      }

});

$("#registar_StReturn").click(function(){

if(validar()){

$('#loading').fadeIn().delay(7000).fadeOut();
  var requested_by = $("#requested_by").val();
  // var company = $("#company").val();
  var request_from = $("#request_from").val();
  var request_from_ref=$("#request_from").find("option:selected").data("wh");
  var responsaveis=$("#request_from").find("option:selected").data("resp");
  var responsaveis_armazem1=$("#request_from").find("option:selected").data("chefe");
  if( responsaveis_armazem1.indexOf(",")!=-1)
    var responsaveis_armazem = responsaveis_armazem1.split(",");
  else
    var responsaveis_armazem= [responsaveis_armazem1];
  var department = $("#department").val(); 
  // $("#request_from").find("option:selected").data("resp");
  var Date_required = $("#Date_required").val();
  // var quote_BS_number = $("#quote_BS_number").val();
  var reason = $("#reason").val();
  var book_out_to_store = $("#book_out_to_store").val();
  // var responsaveis = $("#responsaveis").val();
  // var responsaveis_armazem = JSON.parse($("#chefe_departamento").attr("chefdos"));
  


  var stock_request_form= new FormData();

  responsaveis_armazem.forEach(function(item){
    stock_request_form.append("responsaveis_arrmazem", item);
  });

  $("td.item_quantidade").each(function(){
      stock_request_form.append("quantidades",$(this).text());

    })
  
  $("td.item_nome").each(function(){
      stock_request_form.append("item_nome",$(this).text().trim());
       stock_request_form.append("referencia", $(this).attr("data-referenciaa"));
       stock_request_form.append("serialized", $(this).attr("data-serialized"));
        stock_request_form.append("status", $(this).attr("data-status"));
        stock_request_form.append("cliente_name", $(this).attr("data-cliente_name"));
         stock_request_form.append("num_serie", $(this).attr("data-num_serie"));
    })

    stock_request_form.append("returned_by",requested_by);
    stock_request_form.append("chefe_departamento",$("#department").find("option:selected").data("chefe_d"));
    // stock_request_form.append("company",company);
    stock_request_form.append("return_to",request_from);
    stock_request_form.append("return_to_ref",request_from_ref);
    stock_request_form.append("department",department);
    stock_request_form.append("Date_required",Date_required);
    // stock_request_form.append("quote_BS_number",quote_BS_number);
    stock_request_form.append("reason",reason);
    stock_request_form.append("book_out_to_store",book_out_to_store);
    stock_request_form.append("responsaveis",responsaveis);

    var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', "/stock_return/novo", true);
        xhr.send(stock_request_form);

        setTimeout(function(){window.location.href="/stock_return"}, 1500)
      }

});



$("#registar_StUsedd").click(function(){

  if(validar()){
  
  $('#loading').fadeIn().delay(7000).fadeOut();
   
  
  
    var stock_request_form= new FormData();

   stock_request_form.append("econtro",$("#quant_item").attr("econtro"));
  
  
    $("td.item_quantidade").each(function(){
        stock_request_form.append("quantidades",$(this).text());
  
      })
    
    $("td.item_nome").each(function(){
        stock_request_form.append("item_nome",$(this).text().trim());
        stock_request_form.append("referencia", $(this).attr("data-referenciaa"));
        stock_request_form.append("serialized", $(this).attr("data-serialized"));
        stock_request_form.append("status", $(this).attr("data-status"));
        stock_request_form.append("cliente_name", $(this).attr("data-cliente_name"));
        stock_request_form.append("num_serie", ($(this).attr("data-serialized")=="nao"?'': $(this).attr("data-num_serie")));
      })
  
      // stock_request_form.append("returned_by",requested_by);
      // stock_request_form.append("chefe_departamento",$("#department").find("option:selected").data("chefe_d"));
      // // stock_request_form.append("company",company);
      // stock_request_form.append("return_to",request_from);
      // stock_request_form.append("return_to_ref",request_from_ref);
      // stock_request_form.append("department",department);
      // stock_request_form.append("Date_required",Date_required);
      // // stock_request_form.append("quote_BS_number",quote_BS_number);
      // stock_request_form.append("reason",reason);
      // stock_request_form.append("book_out_to_store",book_out_to_store);
      // stock_request_form.append("responsaveis",responsaveis);
  
      var xhr = new XMLHttpRequest();
          // Add any event handlers here...
          xhr.open('POST', "/climatizacao/spareusedo", true);
          xhr.send(stock_request_form);
  
          setTimeout(function(){window.location.href="/stock_return"}, 1500)
        }
  
  });


$("#registar_StRequest_editado").click(function(){
$('#loading').fadeIn().delay(10000).fadeOut();
  // // var requested_by = $("#requested_by").val();
  // // var company = $("#company").val();
  // var request_from = $("#request_from").val();
  //  var request_from_ref=$("#request_from").find("option:selected").data("wh");
  // var department = $("#department").val();
  // var Date_required = $("#Date_required").val();
  // // var quote_BS_number = $("#quote_BS_number").val();
  // var reason = $("#reason").val();
  // var book_out_to_store = $("#book_out_to_store").val();
  // var responsaveis = $("#responsaveis").val();
// ************************************
  var requested_by = $("#requested_by").val();
  // var company = $("#company").val();
  var request_from = $("#request_from").val();
  var request_from_ref=$("#request_from").find("option:selected").data("wh");
  var responsaveis=$("#request_from").find("option:selected").data("resp");
  var responsaveis_armazem1=$("#request_from").find("option:selected").data("chefe");
  if( responsaveis_armazem1.indexOf(",")!=-1)
    var responsaveis_armazem = responsaveis_armazem1.split(",");
  else
    var responsaveis_armazem= [responsaveis_armazem1];
  var department = $("#department").val();
  var Date_required = $("#Date_required").val();
  // var quote_BS_number = $("#quote_BS_number").val();
  var reason = $("#reason").val();
  var book_out_to_store = $("#book_out_to_store").val();


// ******************************************


// ************************************************


  var stock_request_form= new FormData();

  $("td.item_quantidade").each(function(){
      stock_request_form.append("quantidades",$(this).text());

    })


  var caminho_totall =$("#responsaveis").attr("canal");
  var caminho_totalll = "/Stock_request/editado_stRequest/" + caminho_totall;
  
  $("td.item_nome").each(function(){
      stock_request_form.append("item_nome",$(this).text().trim());
      stock_request_form.append("referencia", $(this).attr("data-referenciaa"));
      stock_request_form.append("serialized", $(this).attr("data-serialized"));
      stock_request_form.append("cliente_name", $(this).attr("data-cliente_name"));

    })

    stock_request_form.append("requested_by",requested_by);
     stock_request_form.append("chefe_departamento",$("#department").find("option:selected").data("chefe_d"));
    // stock_request_form.append("company",company);
    stock_request_form.append("request_from",request_from);
     stock_request_form.append("request_from_ref",request_from_ref);
    stock_request_form.append("department",department);
    stock_request_form.append("Date_required",Date_required);
    // stock_request_form.append("quote_BS_number",quote_BS_number);
    stock_request_form.append("reason",reason);
    stock_request_form.append("book_out_to_store",book_out_to_store);
    stock_request_form.append("responsaveis",responsaveis);

    var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST',caminho_totalll , true);
        xhr.send(stock_request_form);
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };

        // setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)

})



  $("#registar_armazem").click(function(){
    $('#loading').fadeIn().delay(7000).fadeOut();
        var nome =$("#nome").val();
        var provincia =$("#provincia").val();
        var regiao =$("#regiao").val();
        var endereco =$("#endereco").val();
        var responsavel;

        var prp = $("#myTable_responsaveis tr td").text().replace(/delete_forever/g, ",");
         responsavel = prp.split(",");
         responsavel.pop();
         // responsavel=respnsavel.map(s=> s.trim());


        // $(".responsavel").each(function(){responsavel.push($(this).val())});


        var pessoas_permitidas;
        var pp=$("#myTable_tecnicos_permitidos tr td").text().replace(/delete_forever/g, ",");
        pessoas_permitidas=pp.split(",")
        pessoas_permitidas.pop();
          // pessoas_permitidas=pessoas_permitidas.map(s=> s.trim());
        // $(".pessoas_permitidas").each(function(){pessoas_permitidas.push($(this).val())});


        var armazemm=new FormData();

        armazemm.append("nome",nome);
        armazemm.append("provincia",provincia);
        armazemm.append("regiao",regiao);
        armazemm.append("endereco",endereco);

        for(let y=0;y<responsavel.length; y++){
          armazemm.append("responsavel", responsavel[y]);
        }

        for(let x=0; x<pessoas_permitidas.length; x++){
          armazemm.append("pessoas_permitidas", pessoas_permitidas[x]);
        }

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', "/armazem/novo", true);
        xhr.send(armazemm);

        setTimeout(function(){window.location.href="/armazem/central"}, 1000)



    })

  $("#editar_armazem").click(function(){
    $('#loading').fadeIn().delay(10000).fadeOut();
        var vallor=$(this).attr("valor");
        var nome =$("#nome").val();
        var provincia =$("#provincia").val();
        var regiao =$("#regiao").val();
        var endereco =$("#endereco").val();
        var responsavel;

        var prp = $("#myTable_responsaveis tr td").text().replace(/delete_forever/g, ",");
         responsavel = prp.split(",");
         responsavel.pop();
         responsavel=responsavel.map(s=> s.trim());

        // $(".responsavel").each(function(){responsavel.push($(this).val())});


        var pessoas_permitidas;
        var pp=$("#myTable_tecnicos_permitidos tr td").text().replace(/delete_forever/g, ",");
        pessoas_permitidas=pp.split(",")
        pessoas_permitidas.pop();
        pessoas_permitidas=pessoas_permitidas.map(s=> s.trim());
        // $(".pessoas_permitidas").each(function(){pessoas_permitidas.push($(this).val())});


        var armazemm=new FormData();

        armazemm.append("nome",nome);
        armazemm.append("provincia",provincia);
        armazemm.append("regiao",regiao);
        armazemm.append("endereco",endereco);
        armazemm.append("novo", vallor);

        for(let y=0;y<responsavel.length; y++){
          armazemm.append("responsavel", responsavel[y]);
        }

        for(let x=0; x<pessoas_permitidas.length; x++){
          armazemm.append("pessoas_permitidas", pessoas_permitidas[x]);
        }

        var xhr = new XMLHttpRequest();
        // Add any event handlers here...
        xhr.open('POST', "/armazem/editar09", true);
        xhr.send(armazemm);
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };

        // setTimeout(function(){window.location.href="/stock_request/home"}, 1500)



    })


$("#stock_request_home").click(function(){
  window.location.href="/stock_request/home"
})

$(".quantyy").on("focus", function(){
  $(this).val("");
});
$(".arranjo").on("keyup", function(){
  if($(this).attr("max")=="0")
    $(this).val('0')
});

 $(".quantyy").on("keyup", function (e) {
      var $field = $(this),
          val=this.value,
          $thisIndex=parseInt($field.data("idx"),10); 
      if (this.validity && this.validity.badInput || isNaN(val) || $field.is(":invalid") ) {
          this.value = inputQuantity[$thisIndex];
          return;
      } 
      if (val.length > Number($field.attr("maxlength"))) {
        val=val.slice(0, 5);
        $field.val(val);
      }
      inputQuantity[$thisIndex]=val;
    }); 



$("#cancelar_Po").click(function(){
  window.history.back();
});

$("#cancelar_stock_item").click(function(){
  window.history.back();
})

$("#serial_number_ret").on("keyup", function(){
  var rgh=JSON.parse($("#Date_required").attr("escollher"));
  var estado=$("#estado1").val();
  var descricao_nome=$(".controle_max").val();
  // console.log(descricao_nome );
  if(estado=="Bom"){
    if(rgh[0].disponibilidade.findIndex(x=>((x.description_item==descricao_nome) && (x.num_serie.findIndex(y=>y==$("#serial_number_ret").val())!=-1)))!=-1? true:false){
      $(".add-field5").removeClass("hide");
    }
    else{
      $(".add-field5").addClass("hide");
    }

    

    // console.log(test)

  }

   if(estado=="Mau"){
    if(rgh[0].disponibilidade_returned.findIndex(x=>((x.description_item==descricao_nome) && (x.num_serie.findIndex(y=>y==$("#serial_number_ret").val())!=-1)))!=-1? true:false){
      $(".add-field5").removeClass("hide");
    }
    else{
      $(".add-field5").addClass("hide");
    }

    

    // console.log(test)

  }

      

});

$("#serial_number_rettt").on("keyup", function(){
  var rgh=JSON.parse($("#quant_item").attr("escollher"));
  // var estado=$("#estado1").val();
  var descricao_nome=$(".controle_max12").val();
  // console.log(descricao_nome );
  
    if(rgh[0].disponibilidade.findIndex(x=>((x.description_item==descricao_nome) && (x.num_serie.findIndex(y=>y==$("#serial_number_rettt").val())!=-1)))!=-1? true:false){
      $(".add-field52").removeClass("hide");
    }
    else{
      $(".add-field52").addClass("hide");
    }

    

    // console.log(test)

     

});


$("#estado1").change(function(){
 var rgh=JSON.parse($("#Date_required").attr("escollher"));
  var estado=$("#estado1").val();
  var descricao_nome=$(".controle_max").val();
 $(".quantyy").val('');
  // console.log(descricao_nome );
  if(estado=="Bom"){
    if(rgh[0].disponibilidade.findIndex(x=>((x.description_item==descricao_nome) && (x.num_serie.findIndex(y=>y==$("#serial_number_ret").val())!=-1)))!=-1? true:false){
      $(".add-field5").removeClass("hide");
    }
    else{
      $(".add-field5").addClass("hide");
    }

    

    // console.log(test)

  }

   if(estado=="Mau"){
    if(rgh[0].disponibilidade_returned.findIndex(x=>((x.description_item==descricao_nome) && (x.num_serie.findIndex(y=>y==$("#serial_number_ret").val())!=-1)))!=-1? true:false){
      $(".add-field5").removeClass("hide");
    }
    else{
      $(".add-field5").addClass("hide");
    }

    

    // console.log(test)

  }
});

$(".controle_max").change(function(){
 var rgh=JSON.parse($("#Date_required").attr("escollher"));
 $("#quant_item").removeAttr("max");
 $("#quant_item").attr("max",JSON.stringify($(".controle_max  option:selected").data("maxx")));
 var tempero=$(".controle_max  option:selected").data("seriallized")=="sim"? true:false;
 $("#serial_number_ret").val(''); //
  $("#quant_item").val('');
 console.log(tempero)
  var estado=$("#estado1").val();
  var descricao_nome=$(".controle_max").val();
  // console.log(descricao_nome );
  if(tempero){
  if(estado=="Bom"){
    if(rgh[0].disponibilidade.findIndex(x=>((x.description_item==descricao_nome) && (x.num_serie.findIndex(y=>y==$("#serial_number_ret").val())!=-1)))!=-1? true:false){
      $(".add-field5").removeClass("hide");
    }
    else{
      $(".add-field5").addClass("hide");
    }

    

    // console.log(test)

  }

   if(estado=="Mau"){
    if(rgh[0].disponibilidade_returned.findIndex(x=>((x.description_item==descricao_nome) && (x.num_serie.findIndex(y=>y==$("#serial_number_ret").val())!=-1)))!=-1? true:false){
      $(".add-field5").removeClass("hide");
    }
    else{
      $(".add-field5").addClass("hide");
    }

    

    // console.log(test)

  }
}
else
 { 
  $(".add-field5").removeClass("hide"); //serial_number_ret

}

});

$(".controle_max12").change(function(){
  var rgh=JSON.parse($("#quant_item").attr("escollher"));
  $("#quant_item").removeAttr("max");
  $("#quant_item").attr("max",JSON.stringify($(".controle_max12  option:selected").data("maxx")));
  var tempero=$(".controle_max12  option:selected").data("seriallized")=="sim"? true:false;
  $("#serial_number_rettt").val(''); //
   $("#quant_item").val('');
   
  console.log(tempero)
   var estado="Bom";
   var descricao_nome=$(".controle_max12").val();
   // console.log(descricao_nome );
   if(tempero){
   if(estado=="Bom"){
     if(rgh[0].disponibilidade.findIndex(x=>((x.description_item==descricao_nome) && (x.num_serie.findIndex(y=>y==$("#serial_number_rettt").val())!=-1)))!=-1? true:false){
       $(".add-field52").removeClass("hide");
     }
     else{
       $(".add-field52").addClass("hide");
     }
 
     
 
     // console.log(test)
 
   }
 
  
 }
 else
  { 
   $(".add-field52").removeClass("hide"); //serial_number_ret
 
 }
 
 });




$("#my_stock_home").click(function(){
    window.location.href="/armazem/mystock"
  })

$("#stock_history_home").click(function(){
  window.location.href="#"
})

$(".add-field1").click(function(){
  let resp=$(".responsavel").val();
  if(resp!=null)
  $("#myTable_responsaveis").append("<tr><td>"+resp+"</td><td class='material-icons pointer  delete_responsavel'>delete_forever</td></tr>");
})

$("#myTable_responsaveis").on("click", ".delete_responsavel", function(){
  console.log("cheguei no delete");
  $(this).closest("tr").remove();

})

$(".add-field2").click(function(){
  let tecnico_re=$(".pessoas_permitidas").val();
  if(tecnico_re!=null)
  $("#myTable_tecnicos_permitidos").append("<tr><td>"+tecnico_re+"</td><td class='material-icons pointer  delete_tecnico_permitido'>delete_forever</td></tr>");
})

$("#myTable_tecnicos_permitidos").on("click", ".delete_tecnico_permitido", function(){
  $(this).closest("tr").remove();

})

$(".add-field3").click(function(){

var moeda_selecionadda=$("input[name='currency']:checked").val();

  if(moeda_selecionadda=="MZN")
      var libra="MZN ";
  if(moeda_selecionadda=="EURO")
      var libra="€ ";
  if(moeda_selecionadda=="USD")
      var libra="$ ";
  if(moeda_selecionadda=="ZAR")
      var libra="R ";

  let tecnico_re=$(".pessoas_permitidas").val();
  let referenciass=$(".pessoas_permitidas").find("option:selected").data("referencia");
  let serializzado=$(".pessoas_permitidas").find("option:selected").data("serializedd");
  let cliente_ref=$(".pessoas_permitidas").find("option:selected").data("cliente_name");
  let preco_unit= $(".preco_item").val();
  let quant_item= $(".quant_item").val();
  var soma=0;

  if((moeda_selecionadda!=undefined ) && (tecnico_re!=null ) && (preco_unit!='' ) && (preco_unit!=undefined) && (quant_item!='')){
    var items_repetidos=$(".item_nome").text().trim();
    if(items_repetidos.indexOf(tecnico_re) ==-1){
  $("#myTable_tecnicos_permitidos").append("<tr><td class='item_nome', data-referenciaa='"+referenciass+"', data-serialized='"+serializzado+"', data-cliente_name='"+cliente_ref+"'>"+tecnico_re+"</td><td class='item_preco'>"+libra+parseFloat(preco_unit).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')+"</td><td class='item_quantidade'>"+parseFloat(quant_item).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')+"</td><td class='total'>"+libra+parseFloat(quant_item*preco_unit).toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')+"</td><td class='material-icons pointer  delete_po'>delete_forever</td></tr>");
  
  $("td.total").each(function(){
    soma+=parseFloat($(this).text().replace(/[,R€MZN\s]/g, "").replace("$", ""));
    console.log(soma)
  });

  $("td#subtotal").text(libra+parseFloat(soma).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
  let iva=moeda_selecionadda=="MZN"? parseFloat(soma*0.17).toFixed(2): parseFloat(soma*0.00).toFixed(2);
  $("td#iva_valor").text(libra+iva.replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
  var a_pagar=parseFloat(soma)+parseFloat(iva);
  $("td#total_a_pagar").text(libra+parseFloat(a_pagar).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
  console.log(soma);

  actualizacao_cambio();


  $(".pessoas_permitidas").val('');
   $(".preco_item").val('');
  $(".quant_item").val('');
  }
  else{
    $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Item repetido':'Repeated item'));
    $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('<b>'+tecnico_re+'</b> ja foi selecionado'):('<b>'+tecnico_re+'</b> was already selected '));
    $('#msg_modal').openModal();
  }

  }
 
 })


$(".aprovarhvacjbs").click(function(){
  console.log($(this).attr("valor"))
  var dadosHvacInProgress = JSON.parse($("#recolherdados").attr("jobsinprogress"));
  console.log("Jobs em progresso ", dadosHvacInProgress);
  var contR = 0;

  if(dadosHvacInProgress.length != 0 || dadosHvacInProgress == undefined){
    var nomeT = $("#recolherdados").attr("detalhessession");
    console.log(nomeT);
    for(var i = 0; i < dadosHvacInProgress.length; i++){
        if((dadosHvacInProgress[i].sitedeparturedate == undefined) && (dadosHvacInProgress[i].tecnico)){
           contR = 1;
           break; 
        }
    }

  }else if($(this).attr("valor")!="true"){
    contR = 2;
  }

  if(contR == 1 ){
    $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'));
    $('#msg_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Não é possível aceitar esta folha de serviço. Termine os Jobcards pendentes !':'It is not possible to approve this Jobcard. Complete the pending Jobcards <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ':"</b>"));
    $('#msg_modal').openModal({dismissible:false});
    $('#ok_btn_modal').click(function(e){ e.stopPropagation(); window.location.href="#"; });
  }else

  if(contR == 2){
    $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Inspecçao da Viatura':'Vehicle Inspection'));
    $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('A inspecção  da viatura <b>'+$(this).attr("labell")+'</b> e Obrigatoria '):('Daily Inspection  is compulsary<b></b>'));
    $('#msg_modal').openModal();
  

  }
  else{
    $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente aceitar esta folha de serviço':'Do you really want to accept the jobcard <b>')+(($(".lang-picker").attr("value")=="pt")?'</b> ?':"</b>?"))
    $('#yes_no_modal').openModal({dismissible:false});
    $('#yes_btn_modal').click(function(e){
        $('#loading').fadeIn().delay(20000).fadeOut();
        e.stopPropagation();
        var rtts= $(".aprovarhvacjbs").attr("hvscip")
        var rule= "/climatizacao/aprovarjo/"+rtts;
        console.log(rtts)

        var jobcardformdata= new FormData();
       
        var service = new google.maps.DistanceMatrixService();
        var latit=parseFloat($(".aprovarhvacjbs").attr("lat"));
        var lonng=parseFloat($(".aprovarhvacjbs").attr("long"));


         var options = {
             enableHighAccuracy: false,
             timeout: 5000,
             maximumAge: 1500000
             };

              function success(pos) {
             var crd = pos.coords;


              var origin = new google.maps.LatLng(parseFloat(crd.latitude), parseFloat(crd.longitude));
              var destination= new google.maps.LatLng(latit, lonng);
              console.log(latit, lonng)

            
             jobcardformdata.append("geolocationlatitude", crd.latitude);
     
             jobcardformdata.append("geolocationlongitude", crd.longitude);


             

             var geomessage = ""
             jobcardformdata.append("geomessage", geomessage);

             service.getDistanceMatrix({
              origins: [origin],
              destinations: [destination],
              travelMode: google.maps.TravelMode.DRIVING,
              drivingOptions: {
                departureTime: new Date(Date.now()),  // for the time N milliseconds from now.
                trafficModel: 'optimistic'
              },
              unitSystem: google.maps.UnitSystem.METRIC,
              avoidHighways: false,
              avoidTolls: false
            }, function(response, status){
              if(status != 'OK'){
                console.log("Error was: " + status);
              }else{

               
                jobcardformdata.append("duracao_viagem", response.rows[0].elements[0].duration.text);
                jobcardformdata.append("Distancia", response.rows[0].elements[0].distance.text);
                var xhr = new XMLHttpRequest();
               // Add any event handlers here...
               xhr.open('POST',rule, true);
               xhr.send(jobcardformdata);

               xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
             

              setTimeout(function(){
                  window.location.href="/climatizacao/aprovarjo/"+$(".aprovarhvacjbs").attr("hvscip");
                }, 1500)
            }
          }
        };
                
               console.log(response)
              }
            });

             controladorpage = 0;

               
             }

             function error(err) {
               // console.warn(`ERROR(${err.code}): ${err.message}`);
                var geo = "";
                var geomessage;

                controladorpage = 1;

                jobcardformdata.append("geolocationlatitude", geo);
                jobcardformdata.append("geolocationlongitude", geo);

                if(err.code == 1){

                  geomessage = 'It was not possible to obtain the geolocation information because the user decided not to share the location.'
                  jobcardformdata.append("geomessage", geomessage);

                }else
                   if(err.code == 2){

                      geomessage = 'It was not possible to obtain the geolocation information because the network is down or or the positioning service can not be reached.'
                      jobcardformdata.append("geomessage", geomessage);

                   }else
                      if(err.code == 3){

                         geomessage = 'It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data.'
                         jobcardformdata.append("geomessage", geomessage);

                      }else{

                         geomessage = 'It was not possible to obtain the geolocation information because Geolocation failed due to unknown error.'
                         jobcardformdata.append("geomessage", geomessage);
                      }

                   var xhr = new XMLHttpRequest();
                  // Add any event handlers here...
                  xhr.open('POST',rule, true);
                  xhr.send(jobcardformdata);

             }

             navigator.geolocation.getCurrentPosition(success, error, options);

             setTimeout(function(){
                  window.location.href="/climatizacao/aprovarjo/"+$(".aprovarhvacjbs").attr("hvscip");
                }, 6500)

        
        // $('#loading').fadeIn().delay(10000).fadeOut();
        // window.location.href="/climatizacao/aprovarjo/"+$(this).attr("hvscip");
    })
    // $('#loading').fadeIn().delay(10000).fadeOut();
    // window.location.href="/climatizacao/aprovarjo/"+$(this).attr("hvscip");
  }
})

$("#vermapahvvac").click(function(){
  window.location.href="/climatizacao/aprovarjo/"+$(this).attr("ghsyu");
})



//*******************
$(".add-field4").click(function(){



  let tecnico_re=$(".pessoas_permitidas").val();
  let referenciass=$(".pessoas_permitidas").find("option:selected").data("referencia");
  let serializzado=$(".pessoas_permitidas").find("option:selected").data("seriallized");
   let cliente_ref=$(".pessoas_permitidas").find("option:selected").data("cliente_name");
  // let preco_unit= $(".preco_item").val();seriallized
  let quant_item= $(".quant_item").val();
  var soma=0;
  if(tecnico_re!=null && quant_item!=""){
    var items_repetidos=$(".item_nome").text().trim();
    if(items_repetidos.indexOf(tecnico_re) ==-1){
      $("#myTable_tecnicos_permitidos").append("<tr><td class='item_nome', data-referenciaa='"+referenciass+"',  data-serialized='"+serializzado+"', data-cliente_name='"+cliente_ref+"'>"+tecnico_re+"</td><td class='item_quantidade'>"+parseFloat(quant_item).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')+"</td><td class='material-icons pointer  delete_po'>delete_forever</td></tr>");
      $(".selectize-input > input").val('');
      }
      else
      {
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Item repetido':'Repeated item'));
      $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('<b>'+tecnico_re+'</b> ja foi selecionado'):('<b>'+tecnico_re+'</b> was already selected '));
      $('#msg_modal').openModal();

      }
  }
  $(".pessoas_permitidas").val('');
   $(".preco_item").val('');
  $(".quant_item").val('');
})


$(".add-field12").click(function(){



  let tecnico_re=$(".pessoas_permitidas").val();
  let referenciass=$(".pessoas_permitidas").find("option:selected").data("referencia");
 
  // let preco_unit= $(".preco_item").val();seriallized
  let quant_item= $(".quant_item").val();
  if(tecnico_re!=null){
    var items_repetidos=$(".item_nome").text().trim();
    if(items_repetidos.indexOf(tecnico_re) ==-1){
      $("#myTable_tecnicos_permitidos").append("<tr><td class='item_nome', data-referenciaa='"+referenciass+"'>"+tecnico_re+"</td><td class='material-icons pointer  delete_po'>delete_forever</td></tr>");
      $(".selectize-input > input").val('');
      }
      else
      {
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Assitente repetido':'Repeated assistant'));
      $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('<b>'+tecnico_re+'</b> ja foi selecionado'):('<b>'+tecnico_re+'</b> was already selected '));
      $('#msg_modal').openModal();

      }
  }
  $(".pessoas_permitidas").val('');
   
})






$(".add-field5").click(function(){



  let tecnico_re=$(".pessoas_permitidas").val();
  let referenciass=$(".pessoas_permitidas").find("option:selected").data("referencia");
  let serializzado=$(".pessoas_permitidas").find("option:selected").data("seriallized");
  let cliente_name=$(".pessoas_permitidas").find("option:selected").data("cliente_name");
  let statuss=$("#estado1").val(); //num_serie
  let num_serie=$("#serial_number_ret").val();
  // let preco_unit= $(".preco_item").val();seriallized
  let quant_item= $(".quant_item").val();
  var soma=0;
  if(tecnico_re!=null && quant_item!=""){
    var items_repetidos=$(".item_nome").text().trim();
    if(items_repetidos.indexOf(tecnico_re) ==-1)
      $("#myTable_tecnicos_permitidos").append("<tr><td class='item_nome', data-num_serie='"+num_serie+"', data-referenciaa='"+referenciass+"',  data-serialized='"+serializzado+"', data-status='"+ statuss+"', data-cliente_name='"+cliente_name+"'>"+tecnico_re+"</td><td class='item_quantidade'>"+parseFloat(quant_item).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')+"</td><td class='material-icons pointer  delete_po'>delete_forever</td></tr>");
      else
      {
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Item repetido':'Repeated item'));
      $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('<b>'+tecnico_re+'</b> ja foi selecionado'):('<b>'+tecnico_re+'</b> was already selected '));
      $('#msg_modal').openModal();

      }
  }
  $(".pessoas_permitidas").val('');
   $(".preco_item").val('');
  $(".quant_item").val('');
});

$(".add-field52").click(function(){



  let tecnico_re=$(".pessoas_permitidas").val();
  let referenciass=$(".pessoas_permitidas").find("option:selected").data("referencia");
  let serializzado=$(".pessoas_permitidas").find("option:selected").data("seriallized");
  let cliente_name=$(".pessoas_permitidas").find("option:selected").data("cliente_name");
  let statuss="bom"; //num_serie
  let num_serie= serializzado=="sim"? $("#serial_number_rettt").val(): "";
  // let preco_unit= $(".preco_item").val();seriallized
  let quant_item= serializzado=="sim"? 1 : $(".quant_item").val();
  var soma=0;
  if(tecnico_re!=null && quant_item!=""){
    var items_repetidos=$(".item_nome").text().trim();
    if(items_repetidos.indexOf(tecnico_re) ==-1)
      $("#myTable_tecnicos_permitidos").append("<tr><td class='item_nome', data-num_serie='"+num_serie+"', data-referenciaa='"+referenciass+"',  data-serialized='"+serializzado+"', data-status='"+ statuss+"', data-cliente_name='"+cliente_name+"'>"+tecnico_re+"</td><td class='item_quantidade'>"+parseFloat(quant_item).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')+"</td><td class='material-icons pointer  delete_po'>delete_forever</td></tr>");
      else
      {
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Item repetido':'Repeated item'));
      $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('<b>'+tecnico_re+'</b> ja foi selecionado'):('<b>'+tecnico_re+'</b> was already selected '));
      $('#msg_modal').openModal();

      }
  }
  $(".pessoas_permitidas").val('');
   $(".preco_item").val('');
  $(".quant_item").val('');
});

//*******************

$(".add-field6").click(function(){



  let tecnico_re=$("#problema").val().trim();
  
  // let preco_unit= $(".preco_item").val();seriallized
  
  if(tecnico_re!=null && tecnico_re!="")
      $("#myTable_tecnicos_permitidos").append("<tr><td class='item_nome'>"+tecnico_re+"</td><td class='material-icons pointer  delete_po'>delete_forever</td></tr>");
      else
      {
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Erro':'Error'));
      $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('Problema Invalido !'):('Problem not allowed! '));
      $('#msg_modal').openModal();

      }
  
  $("#problema").val('');
   
});


// *********************



$("#myTable_tecnicos_permitidos").on("click change", ".delete_po", function(){

  var moeda_selecionadda=$("input[name='currency']:checked").val();

  if(moeda_selecionadda=="MZN")
      var libra="MZN ";
  if(moeda_selecionadda=="EURO")
      var libra="€ ";
  if(moeda_selecionadda=="USD")
      var libra="$ ";
  if(moeda_selecionadda=="ZAR")
      var libra="R ";

  $(this).closest("tr").remove();
  var soma=0;
  $("td.total").each(function(){
    soma+=parseFloat($(this).text().replace(/[,R€MZN\s]/g, "").replace("$", ""));

  });

  


  
  $("td#subtotal").text(libra+parseFloat(soma).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
  let iva=moeda_selecionadda=="MZN"? parseFloat(soma*0.17).toFixed(2): parseFloat(soma*0.00).toFixed(2);
  $("td#iva_valor").text(libra+iva.replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
  var a_pagar=parseFloat(soma)+parseFloat(iva);
  $("td#total_a_pagar").text(libra+parseFloat(a_pagar).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
  console.log(soma);
  actualizacao_cambio();

  


  $(".pessoas_permitidas").val('');
   $(".preco_item").val('');
  $(".quant_item").val('');

})


$("#registar_cambio").click(function(){
var metical_euro = $("#metical_euro").val();
var metical_dolar = $("#metical_dolar").val();
var metical_rand = $("#metical_rand").val();

var cambio_obj= new FormData();

cambio_obj.append("metical_euro", metical_euro);
cambio_obj.append("metical_dolar", metical_dolar);
cambio_obj.append("metical_rand", metical_rand);

var xhr = new XMLHttpRequest();
        // Add any event handlers here...
xhr.open('POST', "/purchase_order/cambio/novo", true);
xhr.send(cambio_obj);

setTimeout(function(){window.location.href="/purchase_order/cambio"}, 1000)

})


$("#registar_incdente").click(function(e){
 $('#loading').fadeIn().delay(7000).fadeOut();
e.stopImmediatePropagation();
e.stopPropagation();
var nome = $("#nome").val();
var regiao = $("#regiao").val();
var razao_acao = $("#razao_acao").val();

var cambio_obj= new FormData();

cambio_obj.append("comentario", razao_acao);
cambio_obj.append("regiao", regiao);
cambio_obj.append("ocurrance_date", $("#ocurrance_date").val());


var xhr = new XMLHttpRequest();
        // Add any event handlers here...
xhr.open('POST', "/incidente/novo", true);
xhr.send(cambio_obj);

setTimeout(function(){window.location.href="/incidente"}, 2000)

})


$("#cancelar_cambio").click(function(){
  window.location.href="/purchase_order/cambio"
})

$("#supplier").change(function(){
let fornecedores=JSON.parse($("#requested_by").attr("data-sete"));


let supl=$("#supplier").val();
let makhap1 = fornecedores.findIndex(x => x.cliente_nome ==supl);
$("#supplier_contact").val(fornecedores[makhap1].cliente_telefone);
$("#address").val(fornecedores[makhap1].cliente_endfisico);
$("#terms").val(fornecedores[makhap1].cliente_termos);
$("#supplier_code").val(fornecedores[makhap1].fornecedor_cod);

});

$("#matricula_service").change(function(){
let fornecedores=JSON.parse($("#requested_by").attr("data-sete"));


let supl=$("#matricula_service").val();
let makhap1 = fornecedores.findIndex(x => x.matricula ==supl);
$("#marca").val(fornecedores[makhap1].marca);
$("#modelo").val(fornecedores[makhap1].modelo);
$("#quilometragem").val(fornecedores[makhap1].kilometragem);
$("#regiao").val(fornecedores[makhap1].regiao);

});

$("#supplier1").change(function(){
let makhap1 = $(this).find("option:selected").attr("cliente_reff");
$("#codigo_cliente").val(makhap1);
})


$("#request_from").change(function(){
let fornecedores=JSON.parse($("#responsaveis").attr("daddos"));
// let outros_ =stringify(fornecedores);

let supl=$("#request_from").val();
let makhap1 = fornecedores.findIndex(x => x.nome ==supl);
$("#responsaveis").val(fornecedores[makhap1].responsavel[0]);
let outros_ =JSON.stringify(fornecedores[makhap1].responsavel);
$("#chefe_departamento").attr("chefdos", outros_);

// $(this).attr("data-chefe", add-field4 );

});

$("#department").change(async function(){
let depart= JSON.parse($("#department").attr("dados_depart"));
let indicce = await depart.indexOf($("#department").val());

let chefss=JSON.parse($("#chefe_departamento").attr("chefes_depart"));


$("#chefe_departamento").val(chefss[indicce]);
// let outros_ =stringify(fornecedores);




})


    $("#primeiro_fichero").click(function(){
        let fitchero=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/purchase_order/download_fichero', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      })

    $("#comprovativo_ficheiro").click(function(){
        let fitchero=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/purchase_order/download_fichero', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'comprovativo.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      });

  $('.equipmentrepairsclimatizacao').click(function(){
    
    var referencia = $(this).attr("data-user-new");

    window.location.href="/climatizacao/detalhesEquipmentRepairs/" + referencia;     
});


 $(".next").click(function(){
//  var p = $("#pergunta1").val();
    var referencia = $(this).attr("data-user-new");
    var carrocaria=$("input[name='pergunta1c']:checked").val();
  console.log(carrocaria);
      if(carrocaria=="gerador"){        
        window.location.href="/climatizacao/detalhesclima/"+referencia ; 
      }else if(carrocaria=="airCon"){
        window.location.href="/climatizacao/airconRepairs/"+ referencia ; 
      }
});


    $("#extraircalloutstatsreport").click(function(){
        let fitchero=$(this).attr("valor");
          $('#loading').fadeIn();
             var req = new XMLHttpRequest();
        req.open('POST', '/manutencao/printcalloutstats', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'calloutstats_report.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
              $('#loading').fadeOut();
            }
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      });

    $("#extrairplannedmaintenancereport").click(function(){
        let fitchero=$("#pesquisador").attr("valor");
        $('#loading').fadeIn();
        console.log(fitchero);
        var req = new XMLHttpRequest();
        req.open('POST', '/manutencao/printplannedmaintenance', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
          req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'plannedmaintenance_report.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
            $('#loading').fadeOut();
          }
        };
      });

        $("#extrairplannedrefuelreport").click(function(){
        let fitchero=$("#pesquisador").attr("valor");
        $('#loading').fadeIn();
        console.log(fitchero);
        var req = new XMLHttpRequest();
        req.open('POST', '/manutencao/printplannedrefuelreport', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
        req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'plannedmaintenance_report.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
              $("#loading").fadeOut();
          }
        };
      });



$("#extraircomservmaintenancereport").click(function(){
          $('#loading').fadeIn();
          let fitchero=$("#pesquisador").attr("valor");
          console.log(fitchero);
          var req = new XMLHttpRequest();
          req.open('POST', '/manutencao/printcomservplannedmaintenance', true); // Open an async AJAX request.
          req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
          req.responseType = 'blob'; // Define the expected data as blob
            req.send(JSON.stringify({fitchero}));
          req.onreadystatechange = function () {
            if (req.readyState === 4) {
              if (req.status === 200) { // When data is received successfully
                var data = req.response;
                var defaultFilename = 'vmmaintenance_report.xlsx';
                // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
                if (typeof window.navigator.msSaveBlob === 'function') {
                  // If it is IE that support download blob directly.
                  window.navigator.msSaveBlob(data, defaultFilename);
                } 
                else 
                {
                  var blob = data;
                  var link = document.createElement('a');
                  link.href = window.URL.createObjectURL(blob);
                  link.download = defaultFilename;
                  document.body.appendChild(link);
  
                  link.click(); // create an <a> element and simulate the click operation.
                }
              }
                 $("#loading").fadeOut();
            }
          };
        });

    $("#extrairalljobcardsreports").click(function(){
         $('#loading').fadeIn();
        let fitchero=$("#pesquisador").attr("valor");
        console.log(fitchero);
        var req = new XMLHttpRequest();
        req.open('POST', '/manutencao/printalljobcards', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
          req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'alljobcards_report.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
              $("#loading").fadeOut();
          }
        };
      });

    $("#extrairdieselreport").click(function(){
        let fitchero=$(this).attr("valor");
         $('#loading').fadeIn();
             var req = new XMLHttpRequest();
        req.open('POST', '/manutencao/printdieselrefuel', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'dieselrefuel_report.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
             $("#loading").fadeOut();
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      });

      $("#extrairsiteinvoicereport").click(function(){
        $('#loading').fadeIn();
        let fitchero=$("#pesquisador").attr("valor");
        console.log(fitchero);
        console.log("chegou no helper");
        var req = new XMLHttpRequest();
        req.open('POST', '/manutencao/printsiteinvoice', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
          req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'invoice_extract.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
             $("#loading").fadeOut();
          }
        };
      });

    $("#xtrair_relatorio").click(function(){
        let fitchero=$(this).attr("valor");
        $('#loading').fadeIn();
             var req = new XMLHttpRequest();
        req.open('POST', '/purchase_order/extrair_relatoro', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'relatorio_po.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
             $("#loading").fadeOut();
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      });

    $("#xtrairi_relatorio").click(function(){
        let fitchero=$(this).attr("valor");
        $('#loading').fadeIn();
             var req = new XMLHttpRequest();
        req.open('POST', '/armazem/extrair_relatoro', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'Relatorio_Bookout.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
             $("#loading").fadeOut();
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      });

        $("#xtrairi_relatorio_dos_itenn").click(function(){
        let fitchero="el mestrinho";
        $('#loading').fadeIn();
             var req = new XMLHttpRequest();
        req.open('POST', '/armazem/serial_exposrat', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'serialized_items.xlsx';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;
                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
             $("#loading").fadeOut();
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      });


          $("#segundo_fichero").click(function(){
        let fitchero=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/purchase_order/download_fichero', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      })

          $("#terceiro_fichero").click(function(){
        let fitchero=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/purchase_order/download_fichero', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      })

          $(".reporters_Po").click(function(){
        let fitchero=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/purchase_order/reporteer_Po', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'PurchaseOrder.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      })


            $(".reporters_P").click(function(){
        let fitchero=$(this).attr("valor");
        
             var req = new XMLHttpRequest();
        req.open('POST', '/climatizacao/reporteer_Po', true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              var defaultFilename = 'Climatizacao.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } else {
                var blob = data;
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = defaultFilename;

                document.body.appendChild(link);

                link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };


        // setTimeout(function(){
        // window.location.href="/relatorio"}, 3500)

      })

    $('.aprovar_po').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente aprovar esta P.O ?':'Do you realy want to Aprouv this P.O?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $("#no_btn_modal_").click(function(){

    window.location.href="/purchase_order/emprogresso"
  })
  $('#yes_btn_modal').click(function(e){

    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    // $.post("/purchase_order/aprovar", {novo:novo}, function(data){
    //   // window.location.href="/transferencia"
    //   // setTimeout(function(){
    //   //   window.location.href="/purchase_order";
    //   // }, 1500)

    // })

    var pacote_=new FormData();
    pacote_.append("novo",novo);
    // pacote_.append("razoes_return",razoes_return);
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/purchase_order/aprovar", true)
    xhr.send(pacote_);
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
             

              setTimeout(function(){
                  window.location.href="/purchase_order";
                }, 1500)
            }
          }
        };

     // setTimeout(function(){
     //    window.location.href="/purchase_order";
     //  }, 1500)
    //window.location.href="/transferencia/remove/"+novo;
  })
})

  $('.aprovar_stock_request').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new");
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente aprovar este stock request ?':'Do you realy want to Aprouv this Stock request?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    var pacote_=new FormData();
    pacote_.append("novo", novo);
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_request/aprovar", true);
    xhr.send(pacote_);
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };

   

     
    //window.location.href="/transferencia/remove/"+novo;
  })
});
// ***********************************brincadeira com materialize
// *********************************************1 opcao selectize*************************************
    // $('#selectizacao').selectize();
    $('#selectizacao').selectize({
      onInitialize: function(){
        var s = this;
        console.log(s)
        this.revertSettings.$children.each( function(){
             $.extend(s.options[this.value], $(this).data());
        });


      }     
  });

    $('#selectizacao').on('change', function(){
 var s = $('#selectizacao')[0].selectize; //get select
 var data = s.options[s.items[0]]; //get current data() for the active option.
 $("#selectizacao option:selected").attr("data-cliente_name",data.cliente_name );
 $("#selectizacao option:selected").attr("data-referencia",data.referencia );
 $("#selectizacao option:selected").attr("data-serializedd",data.serializedd)
 // this.attr("data-cliente_name", data.cliente_name)
 // console.log(data.cliente_name);  
});

// ********************************************2 opcao autocomplete***********************************

$('#selectizacao1').selectize({
      onInitialize: function(){
        var s = this;
        console.log(s)
        this.revertSettings.$children.each( function(){
             $.extend(s.options[this.value], $(this).data());
        });


      }     
  });

    $('#selectizacao1').on('change', function(){
 var s = $('#selectizacao1')[0].selectize; //get select
 var data = s.options[s.items[0]]; //get current data() for the active option.
 $("#selectizacao1 option:selected").attr("data-cliente_name", data.cliente_name );
 $("#selectizacao1 option:selected").attr("data-referencia", data.referencia );
 $("#selectizacao1 option:selected").attr("data-seriallized", data.seriallized)
});
  


// *********************fim da  brincadeira com materialize*********************************************



$('.editar_stock_request').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new");
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente editar stock request ?':'Do you realy want to edit this Stock request?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();

    var url_edtstock= "/stock_request/editar_request/"+novo;
    window.location.href= url_edtstock;

    
    
  })
})

$('.editar_purchase_order').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new");
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente editar a PO ?':'Do you realy want to edit this PO?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(7000).fadeOut();

    var url_edtstock= "/purchase_order/editar_requestedPoo/"+novo;
    window.location.href= url_edtstock;

    
    
  })
})


$('.returnStock').click(function(){
  $('#yes_no_title_modal_return_stock').html((($(".lang-picker").attr("value")=="pt")?'Razoes do retorno de stock request':'Return reasons'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new");
  console.log(novo)
   $('#yes_no_content_modal_return_stock').html('<div class="input-field col s12"> <input id="stock_return" type="text" autocomplete="off"><label for="email">Razoes</label></div>')
  $('#yes_no_modal_return_stock').openModal({dismissible:false});
  $('#yes_btn_modal_return_stock').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    var razoes_return = $("#stock_return").val();
    var pacote_=new FormData();
    pacote_.append("novo", novo);
    pacote_.append("razoes_return", razoes_return);
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_request/retornar_stock", true);
    xhr.send(pacote_);
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
    // $.post("/stock_request/retornar_stock", {novo:novo, razoes_return:razoes_return}, function(data){
    //   // window.location.href="/transferencia"
    //   // setTimeout(function(){
    //   //   window.location.href="/purchase_order";
    //   // }, 1500)

    // })

    

    //  setTimeout(function(){
    //     window.location.href="/stock_request/home";
    //   }, 1500)
    //window.location.href="/transferencia/remove/"+novo;
  })
})


$('.returnPoo').click(function(){
  $('#yes_no_title_modal_return_stock').html((($(".lang-picker").attr("value")=="pt")?'Razoes do retorno':'Return reasons'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new");
  console.log(novo)
   $('#yes_no_content_modal_return_stock').html('<div class="input-field col s12"> <input id="stock_return" type="text" autocomplete="off"><label for="email">Razoes</label></div>')
  $('#yes_no_modal_return_stock').openModal({dismissible:false});
  $('#yes_btn_modal_return_stock').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();

    var razoes_return = $("#stock_return").val();

    var pacote_=new FormData();
    pacote_.append("novo",novo);
    pacote_.append("razoes_return",razoes_return);
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/purchase_order/retornar_poo", true)
    xhr.send(pacote_);
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
             

              setTimeout(function(){
                  window.location.href="/purchase_order";
                }, 1500)
            }
          }
        };


   
    

     // setTimeout(function(){
     //    window.location.href="/purchase_order";
     //  }, 1500)
    //window.location.href="/transferencia/remove/"+novo;
  })
})


$('.reprovar_stock_request').click(function(){
  $('#yes_no_title_modal_return_stock').html((($(".lang-picker").attr("value")=="pt")?'Razoes da Reprovacao':'Decline Reasons'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new");
  console.log(novo)
   $('#yes_no_content_modal_return_stock').html('<div class="input-field col s12" > <input id="stock_return" type="text" autocomplete="off"><label for="email">Razoes</label></div>')
  $('#yes_no_modal_return_stock').openModal({dismissible:false});
  $('#yes_btn_modal_return_stock').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    var razoes_return = $("#stock_return").val();
    var pacote_=new FormData();
    pacote_.append("novo", novo);
    pacote_.append("razoes_return", razoes_return);
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_request/reprovar", true);
    xhr.send(pacote_);
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
    // $.post("/stock_request/", {novo:novo, razoes_return:razoes_return}, function(data){
      

    // })

    

    //  setTimeout(function(){
    //     window.location.href="/stock_request/home";
    //   }, 1500)
    
  })
})

// $('.reprovar_po').click(function(){
//   $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
//   var mestre= $(this).attr("data-user-id");
//   var novo=$(this).attr("data-user-new")
//   console.log(novo)
//    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente reprovar esta P.O ?':'Do you realy want to decline this P.O?'))
//   $('#yes_no_modal').openModal({dismissible:false});
//   $("#no_btn_modal_").click(function(){
//     window.location.href="/purchase_order/emprogresso"
//   })
//   $('#yes_btn_modal').click(function(){
//     $('#loading').fadeIn().delay(7000).fadeOut();
//      window.location.href="/purchase_order/reprovar/"+novo

    
//   })
// })

$('.reprovar_po').click(function(){
  $('#yes_no_title_modal_return_stock').html((($(".lang-picker").attr("value")=="pt")?'Razoes da Reprovacao da P.O':'Decline Reasons'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new");
  console.log("ola munfo")
   $('#yes_no_content_modal_return_stock').html('<div class="input-field col s12"> <input id="stock_return" type="text" autocomplete="off"><label for="stock_return">Razoes</label></div>')
  $('#yes_no_modal_return_stock').openModal({dismissible:false});
  $('#yes_btn_modal_return_stock').click(function(e){
    // e.stopPropagation();
    // e.stopImmediatePropagation();
    var pacote__=new FormData();
    $('#loading').fadeIn().delay(10000).fadeOut();
    var razoes_return = $("#stock_return").val();
    // console.log(novo, razoes_return);
    


    
    pacote__.append("novo",novo);
    pacote__.append("razoes_return",$("#stock_return").val());
    console.log(novo, razoes_return)
    var xhr= new XMLHttpRequest();
    xhr.open("POST", "/purchase_order/reprovar", true)
    xhr.send(pacote__);


    
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
             

              setTimeout(function(){
                  window.location.href="/purchase_order";
                }, 1500)
            }
          }
        };

    

    
    
  })
})

 $('.cancelarr_po').click(function(){
  $('#yes_no_title_modal_return_stock').html((($(".lang-picker").attr("value")=="pt")?'Razoes do cancelamento da P.O':'Cancel Reasons'))
  var mestre= $(this).attr("data-user-id");
  var novo=$(this).attr("data-user-new");
  console.log(novo)
   $('#yes_no_content_modal_return_stock').html('<div class="input-field col s12"> <input id="stock_return" type="text" autocomplete="off"><label for="stock_return">Razoes</label></div>')
  $('#yes_no_modal_return_stock').openModal({dismissible:false});
  $('#yes_btn_modal_return_stock').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
     $('#loading').fadeIn().delay(10000).fadeOut();

    var pacote__=new FormData();
    // $('#loading').fadeIn().delay(10000).fadeOut();
    var razoes_return = $("#stock_return").val();
    // console.log(novo, razoes_return);
    


    
    pacote__.append("novo",novo);
    pacote__.append("razoes_return",$("#stock_return").val());
    // console.log(novo, razoes_return)
    var xhr= new XMLHttpRequest();
    xhr.open("POST", "/purchase_order/cancelar", true)
    xhr.send(pacote__);


    
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
             

              setTimeout(function(){
                  window.location.href="/purchase_order";
                }, 1500)
            }
          }
        };

   
    // var razoes_return = $("#stock_return").val();
    // $.post("/purchase_order/reprovar", {novo:novo, razoes_return:razoes_return}, function(data){
      

    // })

    

    //  setTimeout(function(){
    //     window.location.href="/purchase_order";
    //   }, 1500)
    
  })
})



//  $('.reprovar_stock_request').click(function(){
//   $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
//   var mestre= $(this).attr("data-user-id");
//   var novo=$(this).attr("data-user-new")
//   console.log(novo)
//    $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente reprovar este stock request ?':'Do you realy want to decline this Stock request?'))
//   $('#yes_no_modal').openModal({dismissible:false});
//   $('#yes_btn_modal').click(function(){
//     $('#loading').fadeIn().delay(7000).fadeOut();
//      window.location.href="/stock_request/reprovar/"+novo

//     // $.post("/purchase_order/reprovar", {novo:novo}, function(data){
//     //   // window.location.href="/transferencia"
//     //   // setTimeout(function(){
//     //   //   window.location.href="/transferencia";
//     //   // }, 4000)

//     // })
//     //window.location.href="/transferencia/remove/"+novo;
//   })
// })




 $('#registar_StRequest_reprovar').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  var mestre= $(this).attr("data-user-id");
  let razoes_reprov=$("#decline_reasons").val();
  var novo=$("#Date_required").attr("data-eight")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente reprovar o stock request ?':'Do you realy want to decline this stock request?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
  $('#loading').fadeIn().delay(10000).fadeOut();

  var pacote_=new FormData();
    pacote_.append("novo", novo);
    pacote_.append("razoes_reprov", razoes_reprov);
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_request/reprovar", true);
    xhr.send(pacote_);
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
     

    // $.post("/stock_request/reprovar", {novo:novo, razoes_reprov:razoes_reprov}, function(data){
    //   // window.location.href="/transferencia"
    //   setTimeout(function(){
    //     window.location.href="/transferencia";
    //   }, 2500)

    // })
    //window.location.href="/transferencia/remove/"+novo;
  })
})



$('#reprovar_po1').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message'))
  var mestre= $(this).attr("data-user-id");
  let razoes_reprov=$("#razoes").val();
  var novo=$("#requested_by").attr("data-sete")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente reprovar esta P.O ?':'Do you realy want to decline this P.O?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $("#no_btn_modal_").click(function(){
    window.location.href="/purchase_order/emprogresso"
  })
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();

    $.post("/purchase_order/reprovar", {novo:novo, razoes_reprov:razoes_reprov}, function(data){
      // window.location.href="/transferencia"
      setTimeout(function(){
        window.location.href="/purchase_order/reprovados";
      }, 2500)

    })
    //window.location.href="/transferencia/remove/"+novo;
  })
})



$('#receber_stock').click(function(e){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data_user_new")
  var locaal=$(this).attr("local")
  console.log(novo)
  e.preventDefault();
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente Fazer a entrega do stock?':'Do you realy want to deliver stock?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e1){
    e1.stopPropagation();
    e1.stopImmediatePropagation();
    // $('#loading').fadeIn().delay(7000).fadeOut();
    e1.preventDefault();
    var stock_recebidoo=new FormData();
    stock_recebidoo.append("novo", novo);
    stock_recebidoo.append("locaal", locaal);
    var qqnt=[];
    $(".quantyy").each(function(i){
      var receivedd=$(this).val()!=''? $(this).val() : '0';
      if(receivedd!='')
       stock_recebidoo.append("received", receivedd);
       if($(this).attr("serialized")=="sim")
        qqnt.push(receivedd);
  })
  var elemenntos=[];
  var nommmes=[];
  var num_ssries=[]
$(".decricao").each(function(){
        var decricao=$(this).val();
        
        let nnn=$(this).attr("referencia");
        let ssrl=$(this).attr("serialized");
        stock_recebidoo.append("decricao", decricao);
        stock_recebidoo.append( "referencia",nnn);
        stock_recebidoo.append( "serialized",ssrl);
        if(ssrl=="sim"){
          nommmes.push(decricao);
          elemenntos.push(nnn);
          if($(this).attr("nume_sro")!='4524dsfxnTyh')
          num_ssries.push($(this).attr("nume_sro"));
        }

       

  })

  console.log(nommmes, elemenntos, qqnt, num_ssries);

 

  if(qqnt.length>0){
    
  askUser =[];
  cons_serries=[];
  var serialnn=[];
  for(let j=0;j<qqnt.length; j++){
    let contadorr=parseInt(qqnt[j])
      for(let i=0; i< contadorr; i++){
        askUser.push(nommmes[j])
        cons_serries.push(num_ssries[j]);}
  }
  


  // var askUser = ["how are you?", "what is your age?", "where are you from?"];
// var $modal = $('#myModal');
var i = 0;
var serialnn=[];
// showModal(askUser)

function showModal1(arr, array_consult) {
// $modal.modal('hide');
var gbh = $("#s_number1").val();
// var verfy = $("#s_number1").attr("data-controlo_s");



serialnn.push(gbh);
$('#yes_no_modal_return_stock__').closeModal()



setTimeout(async function() {
  if (i < arr.length) {


    $('#yes_no_title_modal_return_stock__').html((($(".lang-picker").attr("value")=="pt")?'Numero de Serie':'Serie Number'))
   $('#yes_no_content_modal_return_stock__').html('<div class="input-field col s12 s_number1"> <input  id="s_number1", type="text" autocomplete="off", data-controlo_s='+cons_serries[i].replace(/\"/g, "'")+'><label for="s_number">'+arr[i] +' </label></div>')
  $('#yes_no_modal_return_stock__').openModal({dismissible:false});
  // var gbh = $("#s_number").text();
  var gbh = $("#s_number1").val();
 var verfy = $("#s_number1").attr("data-controlo_s").indexOf(",")!=-1? $("#s_number1").attr("data-controlo_s").split(","): [$("#s_number1").attr("data-controlo_s")];
    // console.log(gbh)
    // $('.modal-body').html(arr[i]);
    // $modal.modal('show');
    $("#s_number1").keyup(function(){
      if(verfy.indexOf($(this).val())!=-1)
        $("#redutorII").removeClass("hide");
      else
         $("#redutorII").addClass("hide");
    })

    i++;
    
    
  }
  else
  {
    serialnn.splice(0,1);
    console.log(serialnn);

    serialnn.forEach(function(e){
      stock_recebidoo.append("e", e);
      
    })
    $('#loading').fadeIn().delay(10000).fadeOut();
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_request/receber_productos", true)
    xhr.send(stock_recebidoo);


    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };

    // setTimeout(function(){
    //             window.location.href="/stock_request/home";
    //           }, 3500)
    

    // console.log("cheguei !!!!")
  }
  
}, 400)
}

showModal1(askUser, cons_serries);

  }
  else{
    $('#loading').fadeIn().delay(10000).fadeOut();
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_request/receber_productos", true)
    xhr.send(stock_recebidoo);

    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
    // setTimeout(function(){
    //             window.location.href="/stock_request/home";
    //           }, 2500)

  }

// console.log(gbh)

// if(verfy.indexOf(gbh)!=-1)
$("#redutorII").click(() => showModal1(askUser, cons_serries));







  // $('#yes_no_title_modal_return_stock').html((($(".lang-picker").attr("value")=="pt")?'Numero de Serie':'Serie Number'))
  //  $('#yes_no_content_modal_return_stock').html('<div class="input-field col s12"> <input id="s_number" type="text" autocomplete="off"><label for="stock_return">'+array_items[j] +' '+(i+1) +' SN</label></div>')
  // $('#yes_no_modal_return_stock').openModal({dismissible:false});
  // $('#yes_btn_modal_return_stock').click(function(e){
  //   e.stopPropagation();
  //   e.stopImmediatePropagation();
  //   $('#loading').fadeIn().delay(7000).fadeOut();
  //   var razoes_return = $("#stock_return").val();
    
  // })

  
  
  // console.log()

    
    // var xhr=new XMLHttpRequest();
    // xhr.open("POST", "/stock_request/receber_productos", true)
    // xhr.send(stock_recebidoo);
    // setTimeout(function(){
    //             window.location.href="/stock_request/home";
    //           }, 2500)

  })
});


// $("#s_number1").keyup( function(){
//   let arrayy=$("#s_number1").attr("data-controlo_s");
//   let valor=$("#s_number1").val();
//   alert(arrayy, valor)
//   if(arrayy.indexOf(valor)!=-1)
//     $("#redutorII").removeClass("hide");
// })





$('#receber_stock_warehouse').click(function(e){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data_user_new")
  var locaal=$(this).attr("local");
  var arman=$(this).attr("araman");
  console.log(novo)
  e.preventDefault();
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente Receber o stock?':'Do you realy want to receive stock?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e1){
    e1.stopPropagation();
    e1.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    e1.preventDefault();
    var stock_recebidoo=new FormData();
    stock_recebidoo.append("novo", novo);
    stock_recebidoo.append("locaal", locaal);
    stock_recebidoo.append("arman", arman);

    var qqnt=[];
    $(".quantyy").each(function(i){
      var receivedd=$(this).val() || 0;
      if(receivedd!='')
       stock_recebidoo.append("received", receivedd);
       if($(this).attr("serialized")=="sim")
        qqnt.push(receivedd);
  })
  var elemenntos=[];
  var nommmes=[];
$(".decricao").each(function(){
        var decricao=$(this).val();
        let nnn=$(this).attr("referencia");
        let ssrl=$(this).attr("serialized");
        stock_recebidoo.append("decricao", decricao);
        stock_recebidoo.append( "referencia",nnn);
        stock_recebidoo.append( "serialized",ssrl);
        if(ssrl=="sim"){
          nommmes.push(decricao);
          elemenntos.push(nnn);
        }

       

  })

     var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_return/receber_productos", true)
    xhr.send(stock_recebidoo);


    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
    // setTimeout(function(){
    //             window.location.href="/stock_request/home";
    //           }, 3500)

  

 

  
  

  })
});



$('#delivery').click(function(){
if(validar()){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data_user_new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente receber o stock?':'Do you realy want to receive stock?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    var stock_recebido=new FormData();
    stock_recebido.append("novo", novo);

$(".decricao").each(function(){
        var decricao=$(this).val();
        stock_recebido.append("decricao", decricao);
        stock_recebido.append("referencia", $(this).attr("referencia"));

  })

    $(".quantyy").each(function(){
      var received=$(this).val();
      if(received!='')
      stock_recebido.append("received", received);

  })
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_request/delivery", true)
    xhr.send(stock_recebido);

    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
    // setTimeout(function(){
    //             window.location.href="/stock_request/home";
    //           }, 3500)



    // $.post("/stock_request/receber_productos", {novo:novo}, function(data){
    //   // window.location.href="/transferencia"
    //   setTimeout(function(){
    //     window.location.href="/purchase_order";
    //   }, 1500)

    // })
    //window.location.href="/transferencia/remove/"+novo;
  })
}}
)

$('#receber_stock_po').click(function(){
if(validar()){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data_user_new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente o stock da P.O?':'Do you realy want to receive stock?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    // $('#loading').fadeIn().delay(7000).fadeOut();
    var stock_recebido=new FormData();
    stock_recebido.append("novo", novo);

    var comprovativo=$("#comprovativo").get(0).files;
      if(comprovativo.length!=0){
      for(let i = 0, j = comprovativo.length; i<j;i++){
        stock_recebido.append('comprovativo', comprovativo[i]);
      }
      }

      var qqnt=[];

  $(".quantyy").each(function(i){
    var received=$(this).val() || 0;
    if(received!='')
    stock_recebido.append("received", received);
     if($(this).attr("serialized")=="sim")
      qqnt.push(received);
});
   $(".precos").each(function(i){
    var precos=$(this).val() || 0;
    if(precos!='')
    stock_recebido.append("precos", precos);
     
})

//   $(".decricao").each(function(){
//     var decricao =$(this).val();
//     stock_recebido.append("decricao", decricao);
//     stock_recebido.append( "referencia",$(this).attr("referencia"));
//     stock_recebido.append( "price",$(this).attr("prrice"));
//     stock_recebido.append( "serialized",$(this).attr("serialized"));
//     stock_recebido.append( "cliente_name",$(this).attr("cliente_name"));
// });
stock_recebido.append( "invoice_number",$("#invoice_number").val());

var elemenntos=[];
var nommmes=[];
$(".decricao").each(function(){
  var decricao=$(this).val();
  let nnn=$(this).attr("referencia");
  let ssrl=$(this).attr("serialized");
  stock_recebido.append("decricao", decricao);
  stock_recebido.append( "referencia",nnn);
  stock_recebido.append( "price",$(this).attr("prrice"));
  stock_recebido.append( "serialized",ssrl);
  stock_recebido.append( "cliente_name",$(this).attr("cliente_name"));
   // stock_recebido.append( "precos",$(this).attr("cliente_name"));
  if(ssrl=="sim"){
    nommmes.push(decricao);
    elemenntos.push(nnn);
  }

 

})

if(qqnt.length>0){
    
askUser =[];
var serialnn=[];
for(let j=0;j<qqnt.length; j++){
  let contadorr=parseInt(qqnt[j])
    for(let i=0; i< contadorr; i++)
      askUser.push(nommmes[j])

}



// var askUser = ["how are you?", "what is your age?", "where are you from?"];
// var $modal = $('#myModal');
var i = 0;
var serialnn=[];
// showModal(askUser)

function showModal(arr) {
// $modal.modal('hide');
var gbh = $("#s_number_po").val();
serialnn.push(gbh);
$('#yes_no_modal_return_stock__po').closeModal()



setTimeout(function() {
if (i < arr.length) {
  $('#yes_no_title_modal_return_stock__po').html((($(".lang-picker").attr("value")=="pt")?'Numero de Serie':'Serie Number'))
 $('#yes_no_content_modal_return_stock__po').html('<div class="input-field col s12 s_number_po"> <input  id="s_number_po", type="text" autocomplete="off"><label for="stock_return">'+arr[i] +' </label></div>')
$('#yes_no_modal_return_stock__po').openModal({dismissible:false});
// var gbh = $("#s_number").text();
  
  console.log(gbh)
  // $('.modal-body').html(arr[i]);
  // $modal.modal('show');
  i++;
  
  
}
else
{
  serialnn.splice(0,1);
  console.log(serialnn);

  serialnn.forEach(function(e){
    stock_recebido.append("e", e);
    
  })
  $('#loading').fadeIn().delay(10000).fadeOut();
  var xhr=new XMLHttpRequest();
  xhr.open("POST", "/purchase_order/receber_productos", true)
  xhr.send(stock_recebido);

  setTimeout(function(){
                  window.location.href="/purchase_order";
                }, 8000)

  // xhr.onreadystatechange = function () {
  //         if (xhr.readyState === 4) {
  //           if (xhr.status === 200) { // When data is received successfully
             

             
  //                 window.location.href="/purchase_order";
                
  //           }
  //         }
  //       };

  
}

}, 400)




}

showModal(askUser);

}
else{
  $('#loading').fadeIn().delay(10000).fadeOut();
  var xhr=new XMLHttpRequest();
  xhr.open("POST", "/purchase_order/receber_productos", true)
  xhr.send(stock_recebido);

  setTimeout(function(){
                  window.location.href="/purchase_order";
                }, 8000)
  // xhr.onreadystatechange = function () {
  //         if (xhr.readyState === 4) {
  //           if (xhr.status === 200) { // When data is received successfully
             

             
  //                 window.location.href="/purchase_order";
               
  //           }
  //         }
  //       };



}


$("#redutorIII").click(() =>{
if($("#s_number_po").val()!='')
  showModal(askUser)});

    // var xhr=new XMLHttpRequest();
    // xhr.open("POST", "/purchase_order/receber_productos", true)
    // xhr.send(stock_recebido);
    // setTimeout(function(){
    //             window.location.href="/purchase_order";
    //           }, 5000)



    // $.post("/stock_request/receber_productos", {novo:novo}, function(data){
    //   // window.location.href="/transferencia"
    //   setTimeout(function(){
    //     window.location.href="/purchase_order";
    //   }, 1500)

    // })
    //window.location.href="/transferencia/remove/"+novo;

    
  })
}})


$('.delivery').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data-user-new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente confirmar a recepcao do stock ?':'Do you realy confirm receipt stock?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    var lin_url="/stock_request/delivery";

    var pacote_=new FormData();
    pacote_.append("novo", novo);
    // pacote_.append("razoes_reprov", razoes_reprov);
    var xhr=new XMLHttpRequest();
    xhr.open("POST",lin_url , true);
    xhr.send(pacote_);
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
     

    // $.post(lin_url, {novo:novo}, function(data){
    //   // window.location.href="/transferencia"
    //   setTimeout(function(){
    //     window.location.href="/purchase_order";
    //   }, 3000)

    // })
    //window.location.href="/transferencia/remove/"+novo;
  })
})


$('#receber_encomenda_po').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data-user-new")
  console.log(novo)
   $('#yes_no_content_modal').html((($(".lang-picker").attr("value")=="pt")?'Deseja realmente receber encomenda desta P.O ?':'Do you realy want to receive gods of this P.O?'))
  $('#yes_no_modal').openModal({dismissible:false});
  $('#yes_btn_modal').click(function(e){
    e.stopPropagation();
    e.stopImmediatePropagation();
    $('#loading').fadeIn().delay(10000).fadeOut();
    var stock_recebido=new FormData();
    stock_recebido.append("novo",novo)
    var xhr=new XMLHttpRequest();
  xhr.open("POST", "/purchase_order/receber_productos", true)
  xhr.send(stock_recebido);

  xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
             

              setTimeout(function(){
                  window.location.href="/purchase_order";
                }, 1500)
            }
          }
        };

     

   
    //window.location.href="/transferencia/remove/"+novo;
  })
})

$('.stock_history').click(function(){
  $('#yes_no_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Messagem do Sistema':'System Message')) 
  var novo=$(this).attr("data-new1");
  var novo1=$(this).attr("data-new11");
  console.log(novo)
  $('#loading').fadeIn().delay(10000).fadeOut();
  var pacote_=new FormData();
    pacote_.append("novo", novo);
    pacote_.append("novo1", novo1);
    var xhr=new XMLHttpRequest();
    xhr.open("POST", "/stock_request/history", true);
    xhr.send(pacote_);
    xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) { // When data is received successfully
              

             setTimeout(function(){window.location.href="/Stock_request/home"}, 1500)
            }
          }
        };
    // $.post("/stock_request/history", {novo:novo, novo1:novo1}, function(data){
    //   // window.location.href="/transferencia"
      

    // })
    //window.location.href="/transferencia/remove/"+novo;
  
})

$("#my_stock_request").click(function(){
window.location.href="/stock_request/stock_pessoal";
})

$("#armazzens").click(function(){
window.location.href="/armazem/central";
}) 

$("#track_prudot").click(function(){
window.location.href="/armazem/rastreio_items";
})

$("#stock_request_expediente").click(function(){
window.location.href="/stock_request/expedientes";
})
 
$("#stocks_aprovado").click(function(){
window.location.href="/stock_request/aprovados";
});


$("#warehouse_report").click(function(){
window.location.href="/armazem/relatorio";
});


$("#stocks_reprovado").click(function(){
window.location.href="/stock_request/reprovados";
})

$("#stocks_finalizadoss").click(function(){
window.location.href="/stock_request/finalizados";
})


$("#stock_request_tecnicos").click(function(){
window.location.href="/stock_request/tecnicos";
})


$("#stock_return_tecnicos").click(function(){
window.location.href="/stock_return";
});

$("#department_adm").click(function(){
  window.location.href="/sisadmin/department_sysadmin";
})
$("#access_level_adm").click(function(){
  window.location.href="/sisadmin/module_sysadmin";
});
$("#funcoes_adm").click(function(){
  window.location.href="/sisadmin/funcoes_sysadmin";
})

$("#province_adm").click(function(){
  window.location.href="/sisadmin/province_sysadmin";
})

$("#veiculos_adm").click(function(){
  window.location.href="/sisadmin/vehicle_sysadmin";
})

$("#region_adm").click(function(){
  window.location.href="/sisadmin/regiao_sysadmin";
})

$("#time").click(function(){
if($(".lang-picker").attr("fisheir")=="Sandra Dias" || $(".lang-picker").attr("fishier")=="admin" )
  window.location.href="/incidente";
});
//   var i=1;
//    $("#add_row").click(function(){b=i-1;
//      	$('#addr'+i).html($('#addr'+b).html()).find('td:first-child').html(i+1);
//      	$('#tab_logic').append('<tr id="addr'+(i+1)+'"></tr>');
//      	i++; 
//  	});
//    $("#delete_row").click(function(){
//    	if(i>1){
// 	$("#addr"+(i-1)).html('');
// 	i--;
// 	}
// 	calc();
// });

// $('#tab_logic tbody').on('keyup change',function(){
// 	calc();
// });

// $('#tax').on('keyup change',function(){
// 	calc_total();
// });



// ******************************************** Fim seccao do stocks ************************************************************************
// **************************************************gina****************************************************



// *************************************************end gina*************************************************
BarcodeReader.Init();
BarcodeReader.SetImageCallback(function(result) {
  console.dir(result);
  if (!result.length) {
      alert('Nao foi possivel ler o codigo, tente de novo!');
      return;
  }
  
  var barcode = result[0];
  $("#mestsre").val('');
  $("#mestsre").val(barcode.Value);
  // alert("Format: " + barcode.Format + " Value: " + barcode.Value);
});
// ******************************************************************


$('.datepicker').pickadate({
  monthsShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],
  weekdaysFull:["Domingo","Segunda","Terca","Quarta","Quinta","Sexta","Sabado"],
  weekdaysShort:["Dom","Seg","Ter","Qua","Qui","Sex","Sab"],
  weekdaysLetter:["D","S","T","Q","Q","S","S"],
  today:"Hoje",
  clear:"Apagar",
  close:"Fechar",
  format: 'dd/mm/yyyy',
  selectMonths: true, // Creates a dropdown to control month
  selectYears: 50, // Creates a dropdown of 15 years to control year
  monthsFull: ["Janeiro", "Fevereiro", "Marco", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" ]
});


});

$(document).on('click', '.hide-on-large-only a', function(){
setTimeout(function(){$('.drag-target').click();}, 200);
});
$(document).on('click', 'openbtn', function(){
$(this).hide();
});

function actualizacao_cambio(){

let cambio = JSON.parse($("#requested_by").attr("data-oito"));
let cambio_actual=cambio[cambio.length-1];
let moeda_selecionada=$("input[name='currency']:checked").val();
let total_a_pay= parseFloat($("td#total_a_pagar").text().replace(/[,R€$MZN\s]/g, ""));
if(moeda_selecionada=="MZN")
  {
    $("td#metical_converted").text(parseFloat(total_a_pay).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#dolar_converted").text(parseFloat(total_a_pay/cambio_actual.metical_dolar).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#euro_converted").text(parseFloat(total_a_pay/cambio_actual.metical_euro).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#rand_converted").text(parseFloat(total_a_pay/cambio_actual.metical_rand).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
  
  }

  if(moeda_selecionada=="EURO")
  {
    $("td#metical_converted").text(parseFloat(total_a_pay*cambio_actual.metical_euro).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#euro_converted").text(parseFloat(total_a_pay).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#dolar_converted").text(parseFloat(total_a_pay*(cambio_actual.metical_euro/cambio_actual.metical_dolar).toFixed(2)).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#rand_converted").text(parseFloat(total_a_pay*(cambio_actual.metical_euro/cambio_actual.metical_rand).toFixed(2)).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    
  }

  if(moeda_selecionada=="USD")
  {

    $("td#metical_converted").text(parseFloat(total_a_pay*cambio_actual.metical_dolar).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#euro_converted").text(parseFloat(total_a_pay*(cambio_actual.metical_dolar/cambio_actual.metical_euro).toFixed(2)).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#dolar_converted").text(parseFloat(total_a_pay).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#rand_converted").text(parseFloat(total_a_pay*(cambio_actual.metical_dolar/cambio_actual.metical_rand).toFixed(2)).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    
    
  }

  if(moeda_selecionada=="ZAR")
  {


    $("td#metical_converted").text(parseFloat(total_a_pay*cambio_actual.metical_rand).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#euro_converted").text(parseFloat(total_a_pay*(cambio_actual.metical_rand/cambio_actual.metical_euro).toFixed(2)).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#dolar_converted").text(parseFloat(total_a_pay*(cambio_actual.metical_rand/cambio_actual.metical_dolar).toFixed(2)).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    $("td#rand_converted").text(parseFloat(total_a_pay).toFixed(2).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));
    
    
  }

}

function desabilitarCampos(){
$('input,select, #registar, #cancelar').attr('disabled', 'disabled');	
$('#editar').removeClass('hide');
}
// ********************************associado ao Stock list values

function calc_total()
{
total=0;
$('.total').each(function() {
      total += parseInt($(this).val());
  });
$('#sub_total').val(total.toFixed(2));
tax_sum=total/100*$('#tax').val();
$('#tax_amount').val(tax_sum.toFixed(2));
$('#total_amount').val((tax_sum+total).toFixed(2));
}

var inputQuantity = [];

// *****************************end stock association *********************


function habilitarCampos(){
$('input,select, #registar, #cancelar').removeAttr('disabled');
$('#editar').addClass('hide');
}

function updateDistritos(provincia, distrito_alvo){
var distritos = getDistritos();
$('#'+distrito_alvo).empty();
distritos[$('#'+provincia).prop('selectedIndex')].forEach(function(distrito){
  $('#'+distrito_alvo).append('<option value="'+distrito.toLowerCase()+'">'+distrito+'</option>')
})
}


function limparFormulario(id){
  $('#yes_no_title_modal').html('Cancelar Preenchimento do Formulario');
  $('#yes_no_content_modal').html('Esta prestes a cancelar esta operacao<br/>Deseja continuar?');
  $('#yes_no_modal').openModal();	
  $('#yes_btn_modal').click(function(){
    if(id){
      desabilitarCampos();
    } else {
      document.forms.formulario.reset();
      window.scrollTo(0,0);
    }
  })
}

  function mostrarNomeConjunge(evt){
  if($(evt.target).val().match(/casado/i)){
    $('#nome_conjunge_container').removeClass('hide');
  } else {
    $('#nome_conjunge_container').addClass('hide');
  }
}
function openNav(){
  document.getElementById("mySidebar").style.width = "100%";
  document.getElementById("mySidebar").style.marginTop = "120px";
  document.getElementById("mySidebar").style.position = "fixed";
  document.getElementById("main").style.marginLeft = "250px";


}
function closeNav(){
  document.getElementById("main").style.className="hide";
  document.getElementById("mySidebar").style.width = "0"
  document.getElementById("main").style.marginLeft= "0"
}
function image(){
  document.windw.href("/");
}

function inicializacao(){
$('.tooltipped').tooltip({delay: 10});
//$('.slider').slider({full_width: false});
$('.datepicker').pickadate({
  monthsShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],
  weekdaysFull:["Domingo","Segunda","Terca","Quarta","Quinta","Sexta","Sabado"],
  weekdaysShort:["Dom","Seg","Ter","Qua","Qui","Sex","Sab"],
  weekdaysLetter:["D","S","T","Q","Q","S","S"],
  today:"Hoje",
  clear:"Apagar",
  close:"Fechar",
  format: 'dd/mm/yyyy',
  selectMonths: true, // Creates a dropdown to control month
  selectYears: 50, // Creates a dropdown of 15 years to control year
  monthsFull: [ "Janeiro", "Fevereiro", "Marco", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" ]
});
}






$('.datepicker').pickadate({
  monthsShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],
  weekdaysFull:["Domingo","Segunda","Terca","Quarta","Quinta","Sexta","Sabado"],
  weekdaysShort:["Dom","Seg","Ter","Qua","Qui","Sex","Sab"],
  weekdaysLetter:["D","S","T","Q","Q","S","S"],
  today:"Hoje",
  clear:"Apagar",
  close:"Fechar",
  format: 'dd/mm/yyyy',
  selectMonths: true, // Creates a dropdown to control month
  selectYears: 50, // Creates a dropdown of 15 years to control year
  monthsFull: [ "Janeiro", "Fevereiro", "Marco", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" ]
});

Date.prototype.toSimpleDateFormat = function(){
return this.getDate()+"/"+(this.getMonth()+1)+"/"+this.getFullYear();
}

function validar(){
    var result = true;
    $('.preencher').each(function(){
      if(!result){
        return;
      }
      if($(this).val().match(/^\s*$/)){
        $('#msg_title_modal').html((($(".lang-picker").attr("value")=="pt")?'Campo nao Preenchido':'Fields not filled'))
        if($(this).parent().find('label').html() != undefined){
          $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('O campo correspondente a <b>'+$(this).parent().find('label').html().replace('*', '')+'</b> nao foi preenchido. Por favor preencha-o'):('The field  <b>'+$(this).parent().find('label').html().replace('*', '')+'</b> was not filled. Please fill it'));
        }else{
          $('#msg_content_modal').html(($(".lang-picker").attr("value")=="pt")?('O campo correspondente a <b>'+$(this).parent().find('span').html().replace('*', '')+'</b> nao foi preenchido. Por favor preencha-o'):('The field <b>'+$(this).parent().find('span').html().replace('*', '')+'</b> was not filled. Please fill it'));
        }
        
        $('#msg_modal').openModal();
        result = false;
        return;
      }
    });
    return result;
  }

// function testar_quantidade(){
//   var resultado=true;
//   $(".quantyy").each(function(){

//     if(!result){
//       return;
//     }
//     if()
//   })
// }



var getDistritos = (
        function(){
          var distritos = document.getElementById('remover-da-pagina') ? JSON.parse($('#remover-da-pagina').html()) : '';
          $('#remover-da-pagina').remove();
          return function(){
              return Array.isArray(distritos) ? distritos.concat([]) : 'distritos';
          }
        }
      )();
      



function salvarexcel(){
  var motorista=document.getElementById("porcas");
  var motorist = motorista.options[motorista.selectedIndex].text;


motorist += motorist + ';'
motorist += "mestre";
motorist += '\r\n';
window.open( "data:application/vnd.ms-excel;charset=utf-8," + encodeURIComponent(motorist));

  //var data= document.getElementById("parabrisas").value;

  //console.log("funcao executado****************")
  document.getElementById("lopes").innerHTML=motorist;
  
}
function redirecionar(){
window.location.href="/inspdiaria/novo"
}

// document.addEventListener('DOMContentLoaded', function() {
//   var elems = document.querySelectorAll('select');
//   var instances = M.FormSelect.init(elems, options);
// });

// // Or with jQuery

// $(document).ready(function(){
//   $('select').formSelect();
// });

var demoJson = {
  "demo": {
      "menu": {

          "tarefas": {
              "pt": "Tarefas",
              "en": "Tasks"
          },

          "folhaserv": {
              "pt": "Folha de Serviço",
              "en": "Jobcard"
          },

          "financas": {
              "pt": "Finanças",
              "en": "Finances"
          },
          "viatura": {
              "pt": "Viatura",
              "en": "Vehicle"
          },

          "relatorio": {
            "pt": "Relatórios",
            "en": "Reports"
          },

          "viturainspdiaria": {
              "pt": "Insp diaria",
              "en": "Daily Insp"
          },
          "viaturaTransfere": {
              "pt": "Transferencia",
              "en": "Transference"
          },
          "utilizador": {
              "pt": "Utilizador",
              "en": "user"
          },
          "utilizadores": {
              "pt": "utilizadores",
              "en": "users"
          },
          "manutencao": {
              "pt": "Manutenção",
              "en": "Maintenance"
          },
          "estatistica": {
              "pt": "Estatistica",
              "en": "Statistic"
          },
          "viaturas": {
              "pt": "Viaturas",
              "en": "Vehicles"
          },
          "siteinsp": {
              "pt": "Insp Site",
              "en": "Site Insp"
          },
          "perfil": {
              "pt": "perfil",
              "en": "profile"
          },

          "cliente": {
              "pt": "Cliente / Fornecedor",
              "en": "Client / Supplier "
          },

            "configr": {
                "pt": "configuração",
                "en": "configuration"
            },

          "inquerito": {
              "pt": "Inquérito",
              "en": "Inquiry"
          }
      },

       "preventative_maint": {

            "picturesmaint1": {
              "pt": "Fotos da Manutenção",
              "en": "Maintenance Pictures"
            },

            "concernstype": {
              "pt": "Tipo",
              "en": "Type"
            },

            "concernsmaintnumber": {
              "pt": "Número de manutenção",
              "en": "Maintenance number"
            },

            "concernsacknowledged": {
              "pt": "Reconhecido",
              "en": "Acknowledged"
            },

            "concernsdate": {
              "pt": "Data",
              "en": "Date"
            },

            "concernsdescription": {
              "pt": "Descrição da Preocupação",
              "en": "Concern description"
            },

            "concerns": {
              "pt": "Preocupações ",
              "en": "Concerns"
            },

            "picturesmaint": {
              "pt": "Por favor, insira as fotos desta manutenção",
              "en": "Please insert a pictures of this maintenance"
            },

            "photo": {
              "pt": "Fotos",
              "en": "Photos"
            },

            "vsatcomments": {
              "pt": "VSAT comentários",
              "en": "VSAT comments"
            },

            "checksignalpathobst": {
              "pt": "Verificar o caminho do sinal obstruído",
              "en": "Check signal path obstructed"
            },

            "checkentrysealed": {
              "pt": "Verificar entrada selada",
              "en": "Check entry sealed"
            },

            "checkconnsealed": {
              "pt": "Verifique a conexão selada",
              "en": "Check connection sealed"
            },

            "checkdishtight": {
              "pt": "Verifique o aperto de prato",
              "en": "Check dish ight"
            },

            "checkdishearthdensorpaste": {
              "pt": "Verificar pasta densa de terra de prato",
              "en": "Check dish earth densor paste"
            },

            "checkfanintsakevent": {
              "pt": "Verificar a ventilação de entrada do ventilador",
              "en": "Check fan intsake ventilation"
            },

            "checkdishdentsbumpsplit": {
              "pt": "Verificar amolgadela no prato",
              "en": "Check dish dents bump split"
            },

            "checkgalvaniseditems": {
              "pt": "Verificar artigos galvanizados",
              "en": "Check galvanised items"
            },

            "checkdishcracksagg": {
              "pt": "Verificar a flacidez da placa",
              "en": "Check dish crack sagg"
            },

            "checkdishplunthclean": {
              "pt": "Verifique a Limpeza do prato",
              "en": "Check dish plunth clean"
            },

            "checkplugsconntight": {
              "pt": "Verifique se conexões das tomadas estão apertadas",
              "en": "Check plugs connections tight"
            },

            "downloadmodemconfig": {
              "pt": "Download da configuração do Modem",
              "en": "Download Modem configuration"
            },

            "conduittrunksclean": {
              "pt": "Condutas Limpas",
              "en": "Conduit trunks clean"
            },

            "entrysealed": {
              "pt": "Entrada selada",
              "en": "Entry sealed"
            },

            "cableslabels": {
              "pt": "Etiquetas de cabos",
              "en": "Cable labels"
            },

            "equipmentlabels": {
              "pt": "Etiquetas de equipamento",
              "en": "Equipment labels"
            },

            "txlevel": {
              "pt": "Nível TX",
              "en": "TX level"
            },

            "vsatlinkto": {
              "pt": "Fim da ligação VSAT",
              "en": "VSAT Link To"
            },

            "vsatlinkfrom": {
              "pt": "Início da ligação VSAT",
              "en": "VSAT Link From"
            },

            "vsatinfo": {
              "pt": "Informação VSAT",
              "en": "VSAT information"
            },

            "externalcomm": {
              "pt": "Comentários externos",
              "en": "External comments"
            },

            "externalwaterproof": {
              "pt": "Impermeabilização externa",
              "en": "External waterproof"
            },

            "externallabels": {
              "pt": "Etiquetas externas",
              "en": "External labels"
            },

            "externalIFconntight": {
              "pt": "Conexão externa IF estreita",
              "en": "External IF connection tight"
            },

            "externalearth": {
              "pt": "Terra Externa",
              "en": "External Earth"
            },

            "externalnutstight": {
              "pt": "Porcas exteriores apertadas",
              "en": "External Nuts Tight"
            },

            "externalbrackets": {
              "pt": "Suportes externos",
              "en": "External brackets"
            },

            "txinternalcomm": {
              "pt": "Comentários de TX interno",
              "en": "Tx internal comments"
            },

            "internalIFlabels": {
              "pt": "Etiquetas internas IF",
              "en": "Internal IF labels"
            },

            "internalconnecttight": {
              "pt": "Conexões internas IF apertadas",
              "en": "Internal IF connections tight"
            },

            "internalddf": {
              "pt": "Etiquetas internas DDF",
              "en": "Internal DDF labels"
            },

            "internallabels": {
              "pt": "Etiquetas internas",
              "en": "Internal labels"
            },

            "internelectconnect": {
              "pt": "Conexão eléctrica interna",
              "en": "Internal electrical connection"
            },

            "internalearth": {
              "pt": "Terra interna",
              "en": "Internal Earth"
            },

            "hightemp": {
              "pt": "Alta Temperatura",
              "en": "High Temp"
            },

            "rectsystem": {
              "pt": "Sistema rectificador",
              "en": "Rectifier system"
            },

            "rectmodule": {
              "pt": "Módulo rectificador",
              "en": "Rectifier module"
            },

            "genrunning": {
              "pt": "Gerador em funcionamento",
              "en": "Generator running"
            },

            "genlowfuel": {
              "pt": "Gerador Baixo Consumo de Combustível",
              "en": "Generator low fuel"
            },

            "genabnormal": {
              "pt": "Gerador anormal",
              "en": "Generator abnormal"
            },

            "doorswitch": {
              "pt": "Interruptor de Porta",
              "en": "Door switch"
            },

            "acmains": {
              "pt": "AC principal",
              "en": "AC mains"
            },

            "constructionradius": {
              "pt": "Construcção em raio de 50m",
              "en": "Construction in 50m radius"
            },

            "opticLabels": {
              "pt": "Etiquetas ópticas de potência RF",
              "en": "RF power optic labels"
            },

            "cablesdamages": {
              "pt": "Danos causados por cabos",
              "en": "Cable damages"
            },

            "dcducables": {
              "pt": "Cabos DCDU",
              "en": "DCDU cables"
            },

            "jumpercond": {
              "pt": "Condição do Jumper",
              "en": "Jumper condition"
            },

            "aauearth": {
              "pt": "AAU Terra",
              "en": "AAU Earth"
            },

            "rrucond": {
              "pt": "Condição RRU",
              "en": "RRU condition"
            },

            "rrucables": {
              "pt": "Cabos RRU",
              "en": "RRU cables"
            },

            "opticfibercond": {
              "pt": "Condição da fibra óptica",
              "en": "Optic fiber condition"
            },

            "clampcond": {
              "pt": "Condição da braçadeira",
              "en": "Clamp condition"
            },

            "bracketscond": {
              "pt": "Condição dos Suportes",
              "en": "Brackets condition"
            },

            "antennasecure": {
              "pt": "Antena segura",
              "en": "Antenna secure"
            },

            "antennas": {
              "pt": "Antenas",
              "en": "Antennas"
            },

            "accageinst": {
              "pt": "Grade de ar condicionado instalada",
              "en": "Air conditioning cage installed"
            },

            "acmodelcapacity": {
              "pt": "Capacidade do modelo de ar condicionado",
              "en": "Air conditioning model capacity"
            },

            "accooling": {
              "pt": "Refrigeração do ar condicionado",
              "en": "Air conditioning cooling"
            },

            "operatingtime": {
              "pt": "Tempo de operação do ar condicionado",
              "en": "Operating time air conditioning"
            },

            "hightemperature": {
              "pt": "Alarme de Alta Temperatura",
              "en": "High temperature alarm"
            },

            "cleanfilter": {
              "pt": "Filtro limpo",
              "en": "Clean Filter"
            },

            "noisevibration": {
              "pt": "Vibração do ruído do ar condicionado",
              "en": "Air conditioning noise vibration"
            },

            "aircond": {
              "pt": "Ar condicionado",
              "en": "Air conditioning"
            },

            "cell": {
              "pt": "Célula",
              "en": "Cell"
            },

            "teste": {
              "pt": "Teste",
              "en": "Test"
            },

            "batterybank": {
              "pt": "Banco de Bateria",
              "en": "Baterry Bank"
            },

            "batterybanks": {
              "pt": "Bancos de Bateria",
              "en": "Baterry Banks"
            },

            "alarmcommport": {
              "pt": "Porto de Comando do Alarme",
              "en": "Alarm Comm Port"
            },

            "supervisormodule": {
              "pt": "Módulo Supervisor",
              "en": "Supervisor module"
            },

            "slotsburn": {
              "pt": "Queimaduras nos compartimentos",
              "en": "Slots burn"
            },

            "nao": {
              "pt": "Não",
              "en": "No"
            },

            "sim": {
              "pt": "Sim",
              "en": "Yes"
            },

            "systemupgrade": {
              "pt": "Actualização das necessidades do sistema",
              "en": "System needs upgrade"
            },

            "parametersokay": {
              "pt": "Parâmetros Ok",
              "en": "Parameters Okay"
            },

            "slotspopulated": {
              "pt": "Compartimentos preenchidos",
              "en": "Slots Populated"
            },

            "opproperly": {
              "pt": "Funciona correctamente",
              "en": "Operates properly"
            },

            "rectmake": {
              "pt": "Marca do Rectificador",
              "en": "Rectifier Make"
            },

            "rectifier": {
              "pt": "Rectificador",
              "en": "Rectifier"
            },

            "earthcomments": {
              "pt": "Observações da Terra",
              "en": "Earth Comments"
            },

            "earthohm": {
              "pt": "Leitura da Terra em Ohm",
              "en": "Earth read Ohm"
            },

           "earthleakage": {
              "pt": "Fugas em leitura de terra",
              "en": "Earth read leakage"
            },

            "electricalcomments": {
              "pt": "Observações eléctricas",
              "en": "Electrical Comments"
            },

            "voltagereading": {
              "pt": "Leitura de tensão",
              "en": "Voltage Reading"
            },

            "neutral": {
              "pt": "Neutro",
              "en": "Neutral"
            },

            "blue": {
              "pt": "Azul",
              "en": "Blue"
            },

            "white": {
              "pt": "Branco",
              "en": "White"
            },

            "red": {
              "pt": "Vermelho",
              "en": "Red"
            },

            "currentreadings": {
              "pt": "Leituras de corrente",
              "en": "Current Readings"
            },

            "electrical": {
              "pt": "Eléctrico",
              "en": "Electrical"
            },

            "autorearm": {
              "pt": "Rearmar automático",
              "en": "Auto Rearm"
            },

            "meterbox": {
              "pt": "Caixa do Medidor",
              "en": "Meter Box"
            },

            "sitelight": {
              "pt": "Luz do site",
              "en": "Site Light"
            },

            "holessealed": {
              "pt": "Buracos Selados",
              "en": "Holes Sealed"
            },

            "unauthorizedconnect": {
              "pt": "Conexões não autorizadas",
              "en": "Unauthorized Connections"
            },

            "energymeters": {
              "pt": "Medidores de energia",
              "en": "Energy meters"
            },

            "tightenconnect": {
              "pt": "Aperte as conexões",
              "en": "Tighten connections"
            },

            "edBoard": {
              "pt": "Quadro de Distribuição Externa",
              "en": "External Distribution Board"
            },

            "failmains": {
              "pt": "Falha na execução do teste",
              "en": "Test Run Fail Mains Supply"
            },

            "fuelleaks": {
              "pt": "Verifique os vazamentos de combustível",
              "en": "Check Fuel Leaks"
            },

            "vbelt": {
              "pt": "Inspeccione a correia V",
              "en": "Inspect V Belt"
            },

            "radiatorhoses": {
              "pt": "Verifique as mangueiras do radiador",
              "en": "Check Radiotor Hoses"
            },

            "comentariosgenerator": {
              "pt": "Comentários do gerador",
              "en": "Generator Comments"
            },

            "postruncomments": {
              "pt": "Comentários da pós-execução",
              "en": "Post Run Comments"
            },

            "externalclear": {
              "pt": "Pós-execução para verificar alarmes externos limpos",
              "en": "Post Run Check External Alams Clear"
            },

            "switchauto": {
              "pt": "Pós-execução de interruptor de verificação automático",
              "en": "Post Run Check Switch Auto"
            },

            "testruncomments": {
              "pt": "Comentários sobre a execução de teste",
              "en": "Test Run Comments"
            },

            "externalalarms": {
              "pt": "Teste de execução para confirmar alarmes externos",
              "en": "Test Run Confirm External Alarms"
            },

            "waterpump": {
              "pt": "Teste de execução de operador da bomba de água",
              "en": "Test Run Waterpump Operator"
            },

            "airflowradiator": {
              "pt": "Teste de execução para verificar radiador de fluxo de ar",
              "en": "Test Run Check Airflow Radiator"
            },

            "abnormalvibrations": {
              "pt": "Teste de execução para verificar vibrações anormais",
              "en": "Test Run Check Abnormal Vibrations"
            },

            "failmainsna": {
              "pt": "Falha na execução do teste",
              "en": "Test Run Fail Mains Supply"
            },

            "chargeralarms": {
              "pt": "Pré-execute os alarmes do carregador de bateria",
              "en": "Prerun Battery Charger Alarms"
            },

            "prerun": {
              "pt": "Pré-execute o painel de controle",
              "en": "Prerun control panel"
            },

            "fuelleakss": {
              "pt": "Verificar vazamentos de combustível",
              "en": "Check Fuel Leaks"
            },

            "jobcard_vbelt": {
              "pt": "Inspeccione a correia V",
              "en": "Inspect V Belt"
            },

            "fuelfilter": {
              "pt": "Substitua o filtro de combustível",
              "en": "Replace Fuel Filter"
            },

           "coolantleaks": {
              "pt": "Verifique fugas de líquido de refrigeração",
              "en": "Check Coolant Leaks"
            },

            "airfilter": {
              "pt": "Substitua o filtro de ar",
              "en": "Replace Air Filter"
            },

            "oilleaks": {
              "pt": "Verifique mangueiras do radiador",
              "en": "Check Radiator Hoses"
            },

            "oilleaks": {
              "pt": "Verifique os vazamentos de óleo",
              "en": "Check Oil Leaks"
            },

            "oillevel": {
              "pt": "Verifique o nível de óleo",
              "en": "Check Oil Level"
            },

            "oilfilter": {
              "pt": "Substitua o filtro de óleo",
              "en": "Replace Oil Filter"
            },

            "oilpressure": {
              "pt": "Pressão do óleo do gerador",
              "en": "Generator oil pressure"
            },

            "coolantlevel": {
              "pt": "Nível do líquido de refrigeração do gerador",
              "en": "Generator coolant level"
            },

           "batterycharging": {
              "pt": "Corrente de carregamento de bateria de gerador",
              "en": "Generator Battery Charging Current"
            },

          "batteryvoltage": {
              "pt": "Tensão da bateria do gerador",
              "en": "Generator Battery Voltage"
          },

          "frequency": {
              "pt": "Frequência do Gerador",
              "en": "Generator Frequency"
          },

          "loadblueT": {
              "pt": "Carga do gerador azul T",
              "en": "Generator load blue T"
          },

          "loadwhiteS": {
              "pt": "Carga do gerador branco S",
              "en": "Generator load white S"
          },

          "loadR": {
              "pt": "Carga do gerador R",
              "en": "Generator load R"
          },

          "mainsrestore": {
              "pt": "Minutos de restabelecimento da rede do gerador",
              "en": "Generator mains restore minutes"
          },

          "startupdelay": {
              "pt": "Minutos de atraso na inicialização do gerador",
              "en": "Geneartor startup delay minutes"
          },

          "generator": {
              "pt": "Gerador",
              "en": "Generator"
          },

          "visiblestate": {
              "pt": "Estado visível da protecção contra queda ",
              "en": "Fall arrest visible state"
          },

          "fallarrest": {
              "pt": "Protecção contra queda ",
              "en": "Fall Arrest"
          },

          "oildiesel": {
              "pt": "Derrames de óleo diesel",
              "en": "Oil diesel spills"
          },

          "overallsite": {
              "pt": "Condição geral do site",
              "en": "Overall site condition"
          },

          "groundcover": {
              "pt": "Cobertura do solo no interior da vedação",
              "en": "Ground cover inside Fence"
          },

          "siteerosion": {
              "pt": "Área em torno da erosão do Site",
              "en": "Area around site erosion"
          },

          "environmental": {
              "pt": "Meio Ambiente",
              "en": "Environmental"
          },

          "locksM3": {
              "pt": "Fechaduras no M3",
              "en": "Locks on M3"
          },

          "lockscontainer": {
              "pt": "Fechaduras nos armários dos contentores",
              "en": "Locks on container cabinets"
          },

          "locksgenset": {
              "pt": "Fechaduras no grupo de geradores",
              "en": "Locks on Genset"
          },

          "locksP3": {
              "pt": "Fechaduras no P3",
              "en": "Locks on P3"
          },

          "locksgate": {
              "pt": "Fechaduras no portão",
              "en": "Locks on gate"
          },

          "locks": {
              "pt": "Fechaduras",
              "en": "Locks"
          },

          "cleanweed": {
              "pt": "Limpe a erva daninha e capim 1,5m ao redor",
              "en": "Clear weed and grass 1.5m around"
          },

          "anydefects": {
              "pt": "Quaisquer defeitos na via de acesso",
              "en": "Any defects on access road"
          },

          "removerubbish": {
              "pt": "Remova o lixo do arame farpado",
              "en": "Remove rubbish from razor wire"
          },

          "poisontreament": {
              "pt": "Tratamento venenoso para formigas",
              "en": "Poison treament for ants"
          },

          "cleansite": {
              "pt": "Limpe a área do Site",
              "en": "Clean Site area"
          },

          "servicefence": {
              "pt": "Rever cercas, portões, fechaduras e dobradiças",
              "en": "Service fence, gates, locks and hinges"
          },

          "cleaning": {
              "pt": "Limpeza",
              "en": "Cleaning"
          },

         "rustcable": {
              "pt": "Trate a ferrugem nos suportes de cabos e nos suportes do alimentador",
              "en": "Treat rust on cable trays and feeder brackets"
          },

        "mountingsfeeders": {
              "pt": "Verifique e repare todos os suportes para alimentadores, DB's, interruptores e luzes que estão apertados",
              "en": "Check and repair all mountings for feeders, DB's, switches and lights are tight"
          },

        "sealentries": {
              "pt": "Vedar todas as entradas e mangas com vedante de silicone",
              "en": "Seal all entries and sleeves with silicone sealant"
          },

        "reportdamage": {
              "pt": "Verifique e relate qualquer dano ao mastro, portas, degraus ou pintura",
              "en": "Check and report any damage to mast, doors, steps or paintwork"
          },

        "cleaninside": {
              "pt": "Limpe o interior do mastro",
              "en": "Clean inside of mast"
          },

        "surgeprotection": {
              "pt": "Verifique e reparar a protecção contra sobretensões no mastro DB",
              "en": "Check and repair surge protection in mast DB"
          },

        "connectligthswitches": {
              "pt": "Verifique e repare todas as conexões nas luzes e interruptores.",
              "en": "Check and repair all connections on lights and switches"
          },

        "awlight": {
              "pt": "Verifique e repare o funcionamento da luz A / W",
              "en": "Check and repair A/W light functioning"
          },

        "mast": {
              "pt": "Mastro",
              "en": "Mast"
          },

        "powerskirting": {
              "pt": "Limpe todo o powerskirting, paredes e chão com água e sabão",
              "en": "Clean all powerskirting, walls and floor with soap and water"
          },

        "earthconnections": {
              "pt": "Cubra as conexões de aterramento com pasta anticorrosiva.",
              "en": "Cover earth connections with anti-corrosion paste"
          },

        "labelling": {
              "pt": "Verifique e repare todas as etiquetas no DB interno",
              "en": "Check and repair all labeling on internal DB"
          },

          "electricalconnections": {
              "pt": "Verifique as conexões eléctricas",
              "en": "Check electrical connections"
          },

          "surgearrestors": {
              "pt": "Verifique todos os pára-raios e substitua-os se estiverem avariados",
              "en": "Check all surge arrestors and replace if faulty"
          },

          "circuitbreakers": {
              "pt": "Verifique todos os disjuntores no DB interno e substitua-os em caso de defeito",
              "en": "Check all circuit breakers on internal DB and replace if faulty"
          },

          "testearth": {
              "pt": "Teste de fuga à terra",
              "en": "Test earth leakage"
          },

          "powersockets": {
              "pt": "Teste todas as tomadas de alimentação",
              "en": "Test all power sockets"
          },

          "testemergency": {
              "pt": "Teste de funcionamento e reparação da luz de emergência",
              "en": "Test emergency light functioning and repair"
          },

          "containerligth": {
              "pt": "Verifique, limpe e repare a luz do contentor",
              "en": "Check, clean and repair container light"
          },

          "container": {
              "pt": "Contentor",
              "en": "Container"
          },

          "actualizar": {
              "pt": "A actualizar",
              "en": "Updating"
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "guardar": {
              "pt": "Guardar",
              "en": "Save"
          },
          
          "signage": {
              "pt": "Sinalização",
              "en": "Signage"
          },

          "idpresent": {
              "pt": "ID do site presente",
              "en": "Site ID present"
          },

          "vmlogopresent": {
              "pt": "Sinal do logogitpo VM presente",
              "en": "VM Logo Sign Present"
          },

          "signnotice": {
              "pt": "Sinal de aviso de vedação perimetral",
              "en": "Sign notice perimeter fence"
          },

          "cautionladder": {
              "pt": "Sinal de cuidado Escada de mão",
              "en": "Caution ladder sign"
          },

          "cautioncabletray": {
              "pt": "Cuidado com o suporte para cabos",
              "en": "Caution cable tray"
          },

          "noticedoor": {
              "pt": "Observação da porta do telhado",
              "en": "Notice door rooftop"
          },

          "warningstick": {
              "pt": "Haste de aviso de antenas",
              "en": "Warning stick antennas"
          },

          "rooftopdoorlocked": {
              "pt": "Porta do telhado trancada",
              "en": "Rooftop door locked"
          },

          "accesscontrolrooftop": {
              "pt": "Telhado de controlo de acesso",
              "en": "Access control rooftop"
          }
      },

      "stock_item_home":{
  "registado_por":{
      "pt":"Registado por",
      "en":"Registered by"
  },
  "lista_item_":{
      "pt":"Lista de Items",
      "en":"Items list"
  },
  "categoria":{
      "pt":"Categoria",
      "en":"Category"
  },
  "subcategoria":{
      "pt":"Subcategoria",
      "en":"Subcategory"
  }

},

"stock_item_form":{
  "titulo":{
      "en":"Item Registration",
      "pt":"Registo do Item"
  },
  "codigo_de_barras":{
      "pt":"Codigo de barras",
      "en":"Bar code "
  }, 
  "descricao_item":{
      "pt":"Descricao",
      "en":"Item Description"
  },
  "Unit":{
      "pt":"Unidade de venda",
      "en": "sales Unit"
  },
  "conteudo":{
      "en":"Content",
      "pt":"Conteudo"
  },

  "item_serial":{
      "pt":"Item serializado",
      "en":"Serialized Item"
  },

  "sim":{
    "pt":"Sim",
    "en":"Yes"
  },
  "nao":{
    "pt":"Nao",
    "en":"No"
  },

  "categoria":{
      "pt":"Categoria",
      "en":"Category"
  },
  "subcategoria":{
      "en":"SubCategory",
      "pt":"Subcategoria"
  },
  "tempo_entrega":{
      "en":"Deliver Time(Days)",
      "pt":"Tempo de entrega (Dias)"
  }

},
"po_menu":{
  "em_progresso":{
      "en":"In Progress",
      "pt":"Em Progresso"
  },
  "aprovado":{
      "en":"Approved",
      "pt":"Aprovado"
  },
  "reprovado":{
      "en":"Denied",
      "pt":"Reprovados"
  },
  "finalizados":{
      "en":"Finalized",
      "pt":"Finalizados"
  },
  "relatorio":{
      "en":"Reports",
      "pt":"Relatórios"
  },
  "relatoriobb":{
      "en":"Bookout Reports",
      "pt":"Relatórios de Saida"
  },
  "car_service":{
      "en":"Car Service",
      "pt":"Manuntenção"
  }
}, 

"po_form":{
  "titulo_p":{
      "pt":"Ordem de Compra",
      "en":"Purchase Order"
  },
  "nome":{
      "en":"Name",
      "pt":"Nome"
  },
  "fornecedor":{
      "en":"Supplier",
      "pt":"Fornecedor"
  },
  "Frete":{
      "en":"Ship",
      "pt":"Frete"
  },
  "cont_fornecedor":{
      "en":"Contact Number",
      "pt":"Contacto do fornecedor"
  },
  "endereco":{
      "en":"Address",
      "pt":"Endereco"
  },
  "cod_fornecedor":{
      "en":"Supplier code",
      "pt":"Codigo do Fornecedor"
  },
  "razoes":{
      "en":"Reasons",
      "pt":"Razoes"
  },
  "titulo_Pagamento":{
      "en":"Payment",
      "pt":"Pagamento"
  },
  "metodo_pagamento":{
      "en":"Payment Method",
      "pt":"Metodo de Pagamento"
  },
  "termo":{
      "en":"Term",
      "pt":"Termo"
  },
  "tipo_servico":{
      "en":"Service type",
      "pt":"Tipo de Serviço"
  },
  "servico":{
      "en":"Service",
      "pt":"Serviço"
  },
  "orde_pagamento":{
      "en":"Payment Order",
      "pt":"Ordem de Pagamento"
  }, 
  "departamento":{
      "en":"Department",
      "pt":"Departamento"
  }, 
  "proposito":{
      "en":"Purpose",
      "pt":"Propósito"
  }, 
  "project_quot_number":{
      "en":"Project quotation Number",
      "pt":"Numero de Cotação do projecto"
  },
  "numero_cotacao":{
      "en":"Cotation Number",
      "pt":"Numero de Cotação"
  }, 
  "destino":{
      "en":"Destination",
      "pt":"Destino"
  }, 
  "moeda":{
      "en":"Currency",
      "pt":"Moeda"
  },
  "cotacao_titulo":{
      "en":"Order Item",
      "pt":"Cotação"
  }, 
  "quantidade":{
      "en":"Quantity",
      "pt":"Quantidade"
  },
  "Preco_unit":{
      "en":"Unit price",
      "pt":"Preco Unitario"
  },
  "descricao":{
      "en":"Description",
      "pt":"Descricao"
  },
  "preco_unit":{
      "en":"Unit Price",
      "pt":"Preco Unit."
  },
  "valor":{
      "en":"Value in",
      "pt":"Valores em"
  }, 
  "ficheiro":{
      "en":"Files",
      "pt":"Ficheiros"
  },
  "ficheiro_1":{
      "en":"File 1",
      "pt":"Ficheiro 1"
  },
  "ficheiro_2":{
      "en":"File 2",
      "pt":"Ficheiro 2"
  },
  "ficheiro_3":{
      "en":"File 3",
      "pt":"Ficheiro 3"
  },
  "resultados":{
    "en":"Results",
    "pt":"Resultados"
  },
  "acao":{
    "en":"Action",
    "pt":"Accao"
  }, 
  "data":{
    "en":"Date",
    "pt":"Data"
  },
  "recebidos":{
    "en":"Received by",
    "pt":"Recebido Por"
  }
}, 

"stok_request_form":{
  "titulo1":{
      "en":"Stock Request",
      "pt":"Formulario de Stock Request"
  },
  "titulo2":{
      "en":"Stock Return",
      "pt":"Stock Return"
  },
  "nome":{
      "en":"Name",
      "pt":"Nome"
  },
  "departamento":{
      "en":"Department",
      "pt":"Departamento"
  }, 
  "Requesitar_em":{
      "en":"Request from",
      "pt":"Requisitar Em "
  }, 
  "Requesitar_em1":{
      "en":"To",
      "pt":"Para:"
  }, 
  "data_uso":{
      "en":"Request Date",
      "pt":"Data do Uso"
  },
  "destino":{
      "en":"Destination",
      "pt":"Destino"
  },
  "razoes":{
      "en":"Reasons",
      "pt":"Razoes"
  },
  "departamento_chefe":{
      "en":"Department Chefe",
      "pt":"Chefe do Departamento"
  }, 
  "armazem_chefe":{
      "en":"Warehouse Chefe",
      "pt":"Chefe do Armazem"
  }, 
  "selecionar_item":{
      "en":"Select item",
      "pt":"Selecione Item"
  },
  "quantidade":{
      "en":"Quantity",
      "pt":"Quantidade"
  },
  "descricao":{
    "en":"Description",
    "pt":"Descricao"
  },
  "requisicao":{
    "en":"Requested",
    "pt":"Requisitado"
  },
  "recebido":{
    "en":"Received",
    "pt":"Recebido"
  },
  "razoe_dev":{
    "en":"Return Reasons",
    "pt":"Razoes da Devolucao"
  },
  "recebido_por":{
    "en":"Received By",
    "pt":"Recebido Por"
  },
  "data":{
    "en":"Date",
    "pt":"Data"
  },
  "acao":{
    "en":"Action",
    "pt":"Accao"
  }, 
  "numero_st":{
    "en":"SR Number",
    "pt":"Numero SR"
  },
  "reprovado":{
    "en":"DECLINED",
    "pt":"REPROVADO"
  },
  "aprovado":{
    "en":"APPROVED",
    "pt":"APROVADO"
  },
  "entregue":{
    "en":"DELIVERED",
    "pt":"ENTREGUE"
  },
  "recebbido":{
    "en":"RECEIVED",
    "pt":"RECEBIDO"
  }
}, 

"Po_home":{
  "numero_po":{
      "en":"PO Number",
      "pt":"Numero PO"
  },
  "requisitado_por":{
      "en":"Requested By",
      "pt":"Requisitado Por"
  },
  "Data_registo":{
      "en":"Date",
      "pt":"Data"

  },
  "titulo":{
      "en":"PO list",
      "pt":"Lista de PO"
  }
}, 

"stock_request_home":{
  "titulo":{
      "en":"Stock Request List",
      "pt":"Lista de Stock Request"
  },
  "titulo1":{
      "en":"Stock Return List",
      "pt":"Lista de Stock Return"
  },
  "numero_stock":{
      "en":"S.Req Number",
      "pt":"Numero de S. Req"
  },
  "armazem":{
      "en":"Warehouse",
      "pt":"Armazem"
  },
  "data":{
      "en":"Date",
      "pt":"Data"
  },
  "requisitado_por":{
    "en":"Requested by",
    "pt":"Requisitado por"
  },
  "requisitado_por1":{
    "en":"From",
    "pt":"De"
  }
}, 

"Stock_request_home_menu":{
  "expediente":{
      "en":"Dispatch",
      "pt":"por Despachar"
  },
  "aprovados":{
      "en":"Approved",
      "pt":"Aprovados"
  },
  "reprovados":{
      "en":"Declined",
      "pt":"Reprovados"
  },
  "retornados":{
      "en":"Stock Return",
      "pt":"Retorno de Stock"
  },
    "acess_level":{
        "en":"Access type",
        "pt":"Tipo de acesso"
    },
    "funcoes_adm":{
        "en":"Functions",
        "pt":"Funções"
    },
    "departmento_adm":{
        "en":"Department",
        "pt":"Departamento"
    },
    "regiao_adm":{
        "en":"Region",
        "pt":"Região"
    },
    "provincia_adm":{
        "en":"Province",
        "pt":"Provincia"
    },
    "viatura_adm":{
        "en":"Vehicle",
        "pt":"Viatura"
    },
  "finalizados":{
      "en":"Finalized",
      "pt":"Finalizados"
  },
  "tecnicos":{
      "en":"Technicians",
      "pt":"Tecnicos"
  },
  "armazem":{
      "en":"Warehouse",
      "pt":"Armazem"
  },
  "moviment":{
      "en":"Serialized Items",
      "pt":"Items serializados"
  }
},


"stock_tecnicos":{
  "subordinados":{
      "en":"Subordinates",
      "pt":"Subordinados"
  },
  "nome":{
      "en":"Name",
      "pt":"Nome"
  },
  "Provincia":{
      "en":"Province",
      "pt":"Provincia"
  },
  "regiao":{
      "en":"Region",
      "pt":"Regiao"
  }
},

"Armazem_home":{
  "armazem":{
      "en":"Warehouse",
      "pt":"Armazem"
  },
  "responsavel":{
      "en":"Chefe",
      "pt":"Chefe"
  },
  "provincia":{
      "en":"Province",
      "pt":"Provincia"
  },
  "regiao":{
      "en":"Region",
      "pt":"Regiao"
  }
},


"Armazem_form":{
  "nome":{
      "en":"Warehouse Name",
      "pt":"Nome do Armazem"
  },
  "Provincia":{
      "en":"Province",
      "pt":"Provincia"
  },
  "regiao":{
      "en":"Region",
      "pt":"Regiao"
  },
  "titulo1":{
      "en":"Warehouse registration",
      "pt":"Registo do Armazem"
  },
  "responsaveis":{
      "en":"Responsible",
      "pt":"Responsavel"
  },
  "endereco":{
      "en":"Address",
      "pt":"Endereco"
  },
  "tecnicos_locados":{
      "en":"Technician Allowed",
      "pt":"Tecnicos Permitidos"
  }
},


      "pettycash_home": {

          "accao": {
              "pt": "Acção",
              "en": "Action"
          },

          "responsavel": {
              "pt": "Responsável",
              "en": "Responsible"
          },

          "audittrail": {
              "pt": "Auditoria",
              "en": "Audit Trail"
          },

          "editcredit": {
              "pt": "Alterar o valor do crédito",
              "en": "Edit credit"
          },

          "escolhaop2": {
              "pt": "O intervalo escolhido é invalido. Escolha outro.",
              "en": "The chosen range is invalid. Choose another."
          },

          "escolhaop1": {
              "pt": "Complete o intervalo de tempo!",
              "en": "Complete the time interval!"
          },

          "outros": {
              "pt": "Outros",
              "en": "Others"
          },

          "reason1": {
              "pt": "Razão",
              "en": "Reason"
          },

          "reason": {
              "pt": "Razão da Reprovação",
              "en": "Disapproval reason"
          },

          "to": {
              "pt": "Até",
              "en": "To"
          },

         "mes": {
              "pt": "Mês",
              "en": "Month"
          },

          "ano": {
              "pt": "Ano",
              "en": "Year"
          },

        "detalhesuso": {
              "pt": "Detalhes do Pettycash",
              "en": "Pettycash Details"
          },

        "saldoactual": {
              "pt": "Saldo Actual",
              "en": "Current Balance"
          },

        "data": {
              "pt": "Data",
              "en": "Date"
          },

        "saldo": {
              "pt": "Saldo",
              "en": "Balance"
          },

        "credito": {
              "pt": "Crédito",
              "en": "Credit"
          },

        "debito": {
              "pt": "Débito",
              "en": "Debit"
          },

        "folhadecaixa": {
              "pt": "Registos de Folha de Caixa",
              "en": "Cash Sheet Records"
          },

        "accountcontrol": {
              "pt": "Controle de Despesas",
              "en": "Outgoing Control"
          },

          "accountbalance": {
              "pt": "Saldo de Conta",
              "en": "Account Balance"
          },

          "invoice_number": {
              "pt": "Número de Recibo",
              "en": "Invoice Number"
          },

          "invoice_number1": {
              "pt": "Nº Recibo",
              "en": "Invoice No"
          },

          "purchase_amount": {
              "pt": "Valor de Compra",
              "en": "Purchase Amount"
          },

          "purchase_amount1": {
              "pt": "Valor",
              "en": "Purchase"
          },

          "purchase_date": {
              "pt": "Data de Compra",
              "en": "Purchase Date"
          },

          "purchase_date1": {
              "pt": "Data",
              "en": "Date"
          },

          "nomecolaborador": {
              "pt": "Nome do Colaborador",
              "en": "Collaborator Name"
          },

          "ano": {
              "pt": "Ano",
              "en": "Year"
          },

          "mes": {
              "pt": "Mês",
              "en": "Month"
          },

          "create": {
              "pt": "Criar",
              "en": "Create"
          },

          "mensal": {
              "pt": "Mensal",
              "en": "Monthly"
          },

          "anual": {
              "pt": "Anual",
              "en": "Annual"
          },

          "pettycashreport": {
              "pt": "Tipo de Relatório",
              "en": "Report Type"
          },

          "escolhaop": {
              "pt": "Escolha uma opção",
              "en": "Choose an option"
          },

          "imagem": {
              "pt": "Imagem",
              "en": "Image"
          },

          "comment": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "docno": {
              "pt": "Doc Nr",
              "en": "Doc No"
          },

          "supplier": {
              "pt": "Fornecedor",
              "en": "Supplier"
          },

          "value": {
              "pt": "Valor",
              "en": "Value"
          },

          "description": {
              "pt": "Descrição",
              "en": "Description"
          },

          "date": {
              "pt": "Data",
              "en": "Date"
          },

          "data_hora": {
              "pt": "Data Horas",
              "en": "Date Hour"
          },

          "transactioninfo": {
              "pt": "Informações de transações",
              "en": "Transaction Information"
          },

          "dados_gerais": {
              "en": "Basic Information",
              "pt": "Dados Gerais"
          },

          "lista": {
              "pt": "Lista de Registros",
              "en": "Records list"
          },

          "nome": {
              "pt": "Nome",
              "en": "Name"
          },

          "financialyear": {
              "pt": "Ano Financeiro",
              "en": "Financial Year"
          },

          "region": {
              "pt": "Região",
              "en": "Region"
          },

          "creationdate": {
              "pt": "Data de criação",
              "en": "Creation Date"
          },

          "creationdate1": {
              "pt": "Data",
              "en": "Date"
          }
      },

      "inquerito_form": {

          "nome": {
              "pt": "Nome",
              "en": "Name"
          },

          "data": {
              "pt": "Data",
              "en": "Date"
          },

          "disclosure": {
              "pt": "Divulgação de Interesses Pessoais",
              "en": "Disclosure of Personal Interests"
          },

          "pergunta1": {
              "pt": "1. Você é director ou funcionário de qualquer outra empresa?",
              "en": "1. Are you a Director or employee of any other company?"
          },

          "companyname": {
              "pt": "Nome da Empresa",
              "en": "Company Name"
          },

          "companyresgistnum": {
              "pt": "Número de Registro da Empresa",
              "en": "Company Registration Number"
          },

          "surname": {
              "pt": "Apelido",
              "en": "Surname"
          },

          "fornames": {
              "pt": "Nomes Próprios",
              "en": "Fornames"
          },

          "residentialadd": {
              "pt": "Endereço Residencial",
              "en": "Residential Address"
          },

          "businessadd": {
              "pt": "Endereço de Negócio",
              "en": "Business Address"
          },

          "postaladd": {
              "pt": "Endereço Postal",
              "en": "Postal Address"
          },

          "nationality": {
              "pt": "Nacionalidade",
              "en": "Nationality"
          },

          "datebirth": {
              "pt": "Data de Nascimento",
              "en": "Date Birth"
          },

          "passportnum": {
              "pt": "Número de Passaporte",
              "en": "Passport Number"
          },

          "occupation": {
              "pt": "Ocupação",
              "en": "Occupation"
          },

          "anexo": {
              "pt": "Anexo A",
              "en": "Annexure A"
          },

          "pergunta2": {
              "pt": "2. Você é membro de qualquer outra corporação?  ",
              "en": "2. Are you a member of any close corporation?"
          },

          "pergunta3": {
              "pt": "3. Você está envolvido em alguma parceria, encargo, consórcio ou estrutura de negócios?",
              "en": "3. Are you involved in any partnership, trust, consortium or other business structure?"
          },

          "fornecadetalhes": {
              "pt": "Forneça Detalhes",
              "en": "Provide Details"
          },

          "fornecanome": {
              "pt": "Forneça Nome",
              "en": "Provide Name"
          },


          "detalhes": {
              "pt": "Detalhes",
              "en": "Details"
          },

          "pergunta4": {
              "pt": "4. Você é accionário em qualquer empresa privada, pública ou de capital aberto?",
              "en": "4. Do you have shareholding in any private, public or publicly listed company?"
          },

          "pergunta5": {
              "pt": "5. Algumas das empresas citadas anteriormente tem algum interesse ( ou pode adquirir futuramednte) interesse em qualquer contrato com a Empresa ou uma das suas Subsidiárias?",
              "en": "5. Do any of the companies or entities listed in 1 - 4 above have (or may in the forseseeable future acquire) an interest in any contract with the Company or any of its Subsidiary companies?"
          },

          "pergunta6": {
              "pt": "6. Excepto as 5 citadas acima, você ou a pessoa de referência têm algum interesse material, seja directa ou indirectamente, em algum contrato com a Empresa ou qualquer uma de suas Subsidiárias, seja actualmente ou a ser celebrado?",
              "en": "6. Other than in 5 above, do you or a Related Person have a material interest, whether directly or indirectly, in any contract with the Company or any of its Subsidiary companies, whether currently or to be entered into?"
          },

          "pergunta7": {
              "pt": "7. Será que algum de seus amigos ou familiares próximos tem ou estarão beneficiando materialmente, directa ou indirectamente, de qualquer contrato celebrado com a Empresa ou qualquer uma das suas Subsidiárias ou qualquer outro contrato em seu resultado?",
              "en": "7. Does any of your friends or Immediate Family have or will they be benefitting materially, either directly or indirectly, from any contract entered into with the Company or any of its Subsidiary companies or any other contract related thereto?"
          },

          "pergunta8": {
              "pt": "8. Você já recebeu ou está actualmente a receber, quaisquer benefícios, de qualquer maneira ou forma, ou presentes de qualquer pessoa ou entidade com a qual a Companhia possui uma relação de negócios, acordos ou outros negócios?",
              "en": "8. Have you ever received, or are you currently receiving, any benefits, in whatever manner or form, or gifts from any person or entity with which the Company has a business relationship, agreement or other dealings?"
          },

          "pergunta9": {
              "pt": "9. Você ou algum membro da sua família, envolvido ou se beneficiando de alguma entidade que opera em um setor semelhante ao da empresa ou entidade que opera em um setor complementar a esse setor?",
              "en": "9. Are you or any member of your Family, involved in or benefiting from, any entity that operate in a similar industry than that of the Company, or entity operating in an industry complimentary to such an industry ?"
          },

          "listarespostas": {
              "pt": "Lista das Respostas",
              "en": "List of Answers"
          }
      },


      "cliente_form": {

          "cartaconf": {
              "pt": "Carta de confirmação de conta bancária",
              "en": "Bank account confirmation letter"
          },

          "certentid": {
              "pt": "Certidão das Entidades Legais",
              "en": "Certificate of Legal Entities"
          },

          "alvara": {
              "pt": "Alvará",
              "en": "License"
          },

          "cartaapres": {
              "pt": "Carta de Apresentação da Empresa",
              "en": "Company Cover Letter"
          },

          "documentos": {
              "pt": "Documentos",
              "en": "Documents"
          },

          "escolhaop": {
              "pt": "Escolha uma opção",
              "en": "Choose an option"
          },

          "clientesupp": {
              "pt": "Deseja criar novo cliente ou fornecedor?",
              "en": "Do you want to create a new customer or supplier?"
          },

          "basicos": {
              "pt": "Informação Básica",
              "en": "Basic Information"
          },

          "cliente": {
              "pt": "Cliente",
              "en": "Client"
          },

          "clientehvac": {
            "pt": "Cliente Climatização",
            "en": "Air Conditioning Client"},

          "street": {
            "pt": "Rua/Avenida",
            "en": "Street/Avenue"
          },

          "fornecedor": {
              "pt": "Fornecedor",
              "en": "Supplier"
          },

          "nome": {
              "pt": "Nome",
              "en": "Name"
          },

          "telefone": {
              "pt": "Telefone",
              "en": "Phone Number"
          },

          "web": {
              "pt": "Endereço Web",
              "en": "Web Address"
          },

          "outros": {
              "pt": "Outros",
              "en": "Other"
          },

          "endfisico": {
              "pt": "Endereço Físico",
              "en": "Physical Address"
          },

          "endereco": {
              "pt": "Endereço",
              "en": "Address"
          },
          
          "bairro": {
              "pt": "Bairro",
              "en": "Suburb"
          },

          "cidade": {
              "pt": "Cidade",
              "en": "Town"
          },

          "provincia": {
              "pt": "Provincia",
              "en": "Province"
          },

          "codpostal": {
              "pt": "Código Postal",
              "en": "Postal Code"
          },

          "pais": {
              "pt": "País",
              "en": "Country"
          },

          "addContact": {
              "pt": "Adicionar Contacto",
              "en": "Add Contact"
          },

          "addContact": {
              "pt": "Adicionar mais Contactos",
              "en": "Add Contact"
          },

          "contact": {
              "pt": "Contacto",
              "en": "Contact"
          },

          "endpostal": {
              "pt": "Endereço Postal",
              "en": "Postal Address"
          },

          "cargo": {
              "pt": "Cargo",
              "en": "Job Title"
          },

          "codigo": {
              "pt": "Código",
              "en": "Code"
          },

          "termos": {
              "pt": "Termos",
              "en": "Terms"
          },

          "filial": {
              "pt": "Filial",
              "en": "Branch"
          },

          "addCliente": {
              "pt": "Guardar",
              "en": "Save"
          },
          "listaClientes": {
              "pt": "Lista de Clientes",
              "en": "Clients List"
          },

          "listaFornecedores": {
              "pt": "Lista de Fornecedores",
              "en": "Suppliers List"
          }


      },

      "ttnumber_form": {

       "repor": {
           "pt": "Repor",
           "en": "Reset"
       },

        "actualizar": {
           "pt": "Actualizar",
           "en": "Update"
       },

        "planodiario": {
           "pt": "Plano de Hoje",
           "en": "Today's Plan"
       },

        "projectnumber1": {
           "pt": "Nº do Projecto",
           "en": "Project Nr"
       },

        "projectnumber": {
           "pt": "Número do Projecto",
           "en": "Project Number"
       },

        "projectsh3": {
           "pt": "Criar Novo Projecto",
           "en": "Create New Project"
       },

        "procurar": {
           "pt": "Procurar",
           "en": "Search"
       },

       "todate": {
           "pt": "Até",
           "en": "To Date"
       },

       "fromdate": {
           "pt": "De",
           "en": "From Date"
       },

       "reporttype": {
           "pt": "Tipo de Reporte",
           "en": "Report Type"
       },

        "adicionarticketnumber": {
              "pt": "Adicionar Ticket",
              "en": "Add Ticket"
          },

        "comments": {
              "pt": "Comentários",
              "en": "Comments"
          },

        "nivelprioridadeaccao": {
              "pt": "Acção",
              "en": "Action"
          },

        "nivelprioridade": {
              "pt": "Nível de Prioridade",
              "en": "Priority Level"
          },

        "errocampos": {
              "pt": "Preencha todos os campos!",
              "en": "Fill in all the fields!"
          },

        "errottnumber": {
              "pt": "Este Ticket Number já se encontra registrado! Seleccione outro.",
              "en": "This Ticket Number is already registered! Select another."
          },

        "semplano": {
              "pt": "Vazio",
              "en": "Empty"
          },

        "plano": {
              "pt": "Plano",
              "en": "Plan"
          },

        "tobeinvoiced": {
              "pt": "Para ser facturado",
              "en": "To be invoiced"
          },

        "reprazao": {
              "pt": "Razão",
              "en": "Reason"
          },

        "reprovarrazao": {
              "pt": "Informe a Razão da Reprovação",
              "en": "Enter the Reason for Disapproval"
          },

        "update": {
              "pt": "Editar",
              "en": "Update"
          },

        "guardar": {
              "pt": "Guardar",
              "en": "Save"
          },

        "chegadasite": {
              "pt": "Chegada ao Site",
              "en": "Site Arrival"
          },

        "propviagem": {
              "pt": "Tipo de Viagem",
              "en": "Travel Type"
          },

        "workreporte": {
              "pt": "Reporte do Trabalho",
              "en": "Work Report"
          },

          "operationssupport":{
          "pt": "Suporte de operações",
          "en": "Operations Support"
          },

        "tecniconome": {
              "pt": "Técnico",
              "en": "Technician"
          },

          "prioridade":{
            "pt": "Prioridade",
            "en": "Priority"
          },

        "cliente": {
              "pt": "Cliente",
              "en": "Client"
          },

        "seminfo": {
              "pt": "Lista de Tickets Vazia",
              "en": "Empty Ticket List"
          },

          "newttnumber": {
              "pt": "Novos",
              "en": "New"
          },

          "onprogressttnumber": {
              "pt": "Em Progresso",
              "en": "In Progress"
          },

          "completettnumber": {
              "pt": "Completos",
              "en": "Complete"
          },

          "atention":{
            "pt": "Atenção",
            "en": "Atention"
          },

          "ttnumber": {
              "pt": "Ticket Number",
              "en": "Ticket Number"
          },

          "createttnumber": {
              "pt": "Criar Ticket Number",
              "en": "Create Ticket Number"
          },

          "cancelar": {
              "pt": "Cancelar",
              "en": "Cancel"
          },

          "create": {
              "pt": "Criar",
              "en": "Create"
          }
      },

      "manutencao_form": {

          "detalhesenergia": {
              "pt": "Detalhes de Energia",
              "en": "Energy Details"
          },

          "credelecnr1": {
              "pt": "Nr de Credelec",
              "en": "Credelec No"
          },

          "credelecnr": {
              "pt": "Número de Credelec",
              "en": "Credelec Number"
          },

          "transactionr1": {
              "pt": "Nr de Transação",
              "en": "Transaction No"
          },

          "transactionr": {
              "pt": "Número de Transação",
              "en": "Transaction Number"
          },

          "amountadded1": {
              "pt": "Valor Ad.",
              "en": "Amount Ad."
          },

          "amountadded": {
              "pt": "Valor Adicionado",
              "en": "Amount Added"
          },

          "afterkwh": {
              "pt": "Kw/h Posterior",
              "en": "Kw/h After"
          },

          "currentkwh": {
              "pt": "Actual Kw/h",
              "en": "Current Kw/h"
          },


        "compliance": {
              "pt": "Estado",
              "en": "Compliance"
          },

        "credelecadd": {
              "pt": "Credelec adic.",
              "en": "Credelec Added"
          },

        "dieselrefuel": {
              "pt": "Reabast. Diesel",
              "en": "Diesel Refuel"
          },

        "spareused": {
              "pt": "Spare Usado",
              "en": "Spare Used"
          },

        "continuarvigem": {
              "pt": "Continuar",
              "en": "Continue"
          },

        "traveldistance": {
              "pt": "Distância",
              "en": "Distance"
          },

        "travelduration": {
              "pt": "Duração da viagem",
              "en": "Duration of trip"
          },

        "seminfostockpessoalquantidadedisponivel": {
              "pt": "Itens indisponíveis!",
              "en": "Unavailable items!"
          },

          "seminfostockpessoal": {
              "pt": "Estoque pessoal indisponível!",
              "en": "Personal stock unavailable!"
          },

        "seminfogeradores": {
              "pt": "Este site não possui geradores!",
              "en": "This site has no generators!"
          },

        "projectscomplete": {
              "pt": "Projectos Concluídos",
              "en": "Projects Completed"
          },

          "projectsinprogress": {
              "pt": "Projectos em Progresso",
              "en": "Projects In Progress"
          },

          "projectsnew": {
              "pt": "Novos Projectos",
              "en": "New Projects"
          },

          "reports": {
            "pt": "Relatórios",
            "en": "Reports"
          },

          "maintenance":{
            "pt": "Manutenções",
            "en": "Maintenances"
          },

          "planned":{
            "pt": "Planeada",
            "en": "Planned"
          },

          "new":{
            "pt": "Novo",
            "en": "New"
          },

          "complete":{
            "pt": "Completa",
            "en": "Complete"
          },

          "preventativemaint":{
            "pt": "Manutenções Preventivas",
            "en": "Planned Maintenances"
          },

          "maintplancomplete": {
              "pt": "Manutenção Preventiva Concluída",
              "en": "Preventative Maintenance Completed"
          },

          "maintplaninprogress": {
              "pt": "Manutenção Preventiva em Progresso",
              "en": "Preventative Maintenance In Progress"
          },

          "maintplannew": {
              "pt": "Manutenção Preventiva Planeada",
              "en": "Preventative Maintenance Planned"
          },

          "sitename":{
            "pt": "Nome do site",
            "en": "Site name"
          },

          "planneddate":{
            "pt": "Data planeada",
            "en": "Planned date"
          },
          
          "generatorinstalled":{
            "pt": "Ger. Inst.",
            "en": "Gen. Inst."
          },

          "electricityprovider":{
            "pt": "Prov. de Elect.",
            "en": "Elec. Provider"
          },

          "technician":{
            "pt": "Técnico",
            "en": "Technician"
          },

          "arrivaldate":{
            "pt": "Data de chegada",
            "en": "Arrival time"
          },

          "loggedby":{
            "pt": "Registrado por",
            "en": "Logged by"
          },

          "jobtype":{
            "pt": "Tipo de manutenção",
            "en": "Job type"
          },

          "compliance":{
            "pt": "Observação",
            "en": "Compliance"
          },

          "department":{
            "pt": "Dept.",
            "en": "Dept."
          },

          "region":{
            "pt": "Região",
            "en": "Region"
          },

          "status":{
            "pt": "Estado",
            "en": "Status"
          },

          "spareused":{
            "pt": "Spare usado",
            "en": "Spare used"
          },

          "planned":{
            "pt": "Planeada",
            "en": "Planned"
          },

          "onsite":{
            "pt": "No site",
            "en": "On site"
          },

          "onroute":{
            "pt": "A caminho",
            "en": "On route"
          },

          "onhold":{
            "pt": "Em espera",
            "en": "On hold"
          },

          "approved":{
            "pt":"Aprovado",
            "en":"Approved"
          },

          "awaitingapproval":{
            "pt": "Por aprovar",
            "en": "Awaiting approval"
          },

          "sitename":{
            "pt": "Nome do site",
            "en": "Site name"
          },

          "planneddate":{
            "pt": "Data planeada",
            "en": "Planned date"
          },
          
          "generatorinstalled":{
            "pt": "Ger. Inst.",
            "en": "Gen. Inst."
          },

          "electricityprovider":{
            "pt": "Prov. de Elect.",
            "en": "Elec. Provider"
          },

          "technician":{
            "pt": "Técnico",
            "en": "Technician"
          },

          "arrivaldate":{
            "pt": "Data de chegada",
            "en": "Arrival time"
          },

          "loggedby":{
            "pt": "Registrado por",
            "en": "Logged by"
          },

          "jobtype":{
            "pt": "Tipo de manutenção",
            "en": "Job type"
          },

          "compliance":{
            "pt": "Observação",
            "en": "Compliance"
          },

          "department":{
            "pt": "Dept.",
            "en": "Dept."
          },

          "region":{
            "pt": "Região",
            "en": "Region"
          },

          "status":{
            "pt": "Estado",
            "en": "Status"
          },

          "spareused":{
            "pt": "Spare usado",
            "en": "Spare used"
          },

          "dieselrefuel":{
            "pt": "Reabast. Diesel",
            "en": "Diesel Refuel"
          },

          "credelecadded":{
            "pt": "Credelec adic.",
            "en": "Credelec add."
          },

          "ttnumberhome":{
            "pt": "Manutenções Correctivas",
            "en": "Callouts"
          },

          "ttnumberhomecomplete": {
              "pt": "Manutenção Correctiva Concluída",
              "en": "Corrective Maintenance Completed"
          },

          "ttnumberhomeinprogress": {
              "pt": "Manutenção Correctiva em Progresso",
              "en": "Corrective Maintenance In Progress"
          },

          "ttnumberhomenew": {
              "pt": "Novas Folhas de Serviço de Manutenção Correctiva",
              "en": "New Corrective Maintenance Jobcards"
          },

        "imagemsparereplace": {
              "pt": "Foto do Spare Antigo",
              "en": "Old Spare Photo"
          },

       "imagemspare": {
              "pt": "Foto do Spare",
              "en": "Spare photo"
          },

        "datacreated": {
           "pt": "Data",
           "en": "Date" 
       },

        "reasonreportsform": {
           "pt": "Razão",
           "en": "Reason" 
       },

       "maintenancedate": {
           "pt": "Data",
           "en": "Date" 
       },

       "listareportesgenerators": {
           "pt": "Reportes dos Geradores",
           "en": "Generator Reports" 
       },

       "dieselreports": {
        "pt": "Reportes de Abastecimento",
        "en": "Diesel Reports" 
        },

        "calloutreports": {
          "pt": "Reportes de Manutenções",
          "en": "Callout Reports" 
        },

     "refuelreason1": {
           "pt": "Razão do reab.",
           "en": "Ref. Reason" 
       },

       "tipogerador": {
          "pt": "Gerador",
          "en": "Generator"
        },

       "priceperliter1": {
          "pt": "Preço p/litro",
          "en": "Price p/litre"
        },

       "litresrefuel": {
          "pt": "Litros Reab.",
          "en": "Litres Ref."
        },

       "totalrunhour1": {
          "pt": "Hr total",
          "en": "Total Hr"
        },

       "totalrunhour": {
          "pt": "Hora total de execução",
          "en": "Total Run Hour"
        },

       "currentgeneratorhours11": {
          "pt": "Hr act.",
          "en": "Curr Hrs"
        },

       "currentgeneratorhours1": {
          "pt": "Horas actuais",
          "en": "Current Hours"
        },

       "previousrefuelhrs11": {
          "pt": "Hr Reab. ant.",
          "en": "Prev Ref. Hrs"
        },

       "previousrefuelhrs1": {
          "pt": "Horas Reab. anteriores",
          "en": "Previous Refuel Hours"
        },

       "tecniconome1": {
          "pt": "Técnico",
          "en": "Technician"
        },

       "generatormobilefixed": {
          "pt": "Móvel ou Fixo ?",
          "en": "Mobile or Fixed ?"
        },

       "reports": {
          "pt": "Relatórios",
          "en": "Reports"
        },

       "projects": {
          "pt": "Projectos",
          "en": "Projects"
        },

        "priceperliter": {
          "pt": "Preço por litro",
          "en": "Price per liter"
        },

       "estadotrabalho": {
          "pt": "Estado",
          "en": "Status"
        },

        "previousgeneratorhrs1": {
          "pt": "Hrs Ant. do Ger.",
          "en": "Prev. Gen. Hrs"
        },

        "previousgeneratorhrs": {
          "pt": "Horas Anteriores do Gerador",
          "en": "Previous Generator Hours"
        },

        "holdreason": {
          "pt": "Razão",
          "en": "Reason"
        },

        "itemreplacereason": {
          "pt": "Razão",
          "en": "Reason"
        },

        "itemreplace": {
          "pt": "Troca de Spare",
          "en": "Spare Replace"
        },

        "itemnrserie": {
          "pt": "Número de Série",
          "en": "Serial Number"
        },

        "serialized": {
          "pt": "Serializado",
          "en": "Serialized"
        },

        "accao3": {
          "pt": "Saída do site",
          "en": "Exit from site"
        },

        "accao2": {
          "pt": "Chegada no site",
          "en": "Arrival on site"
        },

        "accao1": {
          "pt": "Jobcard aceito",
          "en": "Jobcard accepted"
        },

        "accao": {
          "pt": "Acção",
          "en": "Action"
        },

        "duration": {
          "pt": "Duração",
          "en": "Duration"
        },

        "attgeneratorhours": {
          "pt": "As horas actuais são menores que as horas anteriores.",
          "en": "The current hours are shorter than previous hours."
        },

        "reportnmcoperator": {
          "pt": "Operador NMC",
          "en": "NMC Operator"
        },

        "accao": {
          "pt": "Acção",
          "en": "Action"
        },

        "creatett":{
          "pt": "TT number criado",
          "en": "Create TT number"
        },

        "jobcardaccepted":{
          "pt": "Jobcard aceite",
          "en": "Jobcard Accepted"
        },

        "sitearrival":{
          "pt": "Chegada ao site",
          "en": "Arrival to the site"
        },

        "jobcardapproved":{
          "pt":"Jobcard aprovado",
          "en":"Jobcard approved"
        },

        "sentforapproval":{
          "pt":"Enviado para aprovação",
          "en":"Sent for approval"
        },

        "leavesite":{
          "pt":"Saída do site",
          "en":"Leaves the site"
        },

        "uploadplan":{
          "pt": "Carregamento do plano",
          "en": "Plan uploaded"
        },

        "geoloctimeout":{
          "pt": "Chegou ao site mas não foi possível obter a informação de geolocalização devido à problemas de conexão",
          "en": "Arrives on site. It was not possible to obtain the geolocation information because the attempt timed out before it could get the location data."
        },

        "cancelednointervention":{
          "pt": "Cancelado devido ao reestabelecimento sem nenhuma intervenção",
          "en": "Canceled due to Site up without intervention"
        },

        "sentback":{
          "pt":"Enviado de volta",
          "en":"Send back"
        },

        "updategeninfo":{
          "pt": "Informação de gerador actualizada",
          "en": "Generator info updated"
        },

        "updatecredinfo":{
          "pt": "Informação de credelec actualizada",
          "en": "Credelec info updated"
        },

        "jobcardupdated":{
          "pt": "Jobcard actualizado",
          "en": "Jobcard updated"
        },

        "nogeolocation":{
          "pt": "Chegou ao site. Não foi possível obter a informação de geolocalização porque o utilizador não na forneceu",
          "en":"Arrives on site. It was not possible to obtain the geolocation information because the user decided not to share the location"
        },

        "genhrsupdatedgenswopped":{
          "pt": "Horas do gerador redefinidas devido à troca do gerador",
          "en": "Generator hours has been updated due to generator swopping"
        },

        "genhrsupdatednewgeninst":{
          "pt": "Horas do gerador redefinidas devido à instalação de novo gerador",
          "en": "Generator hours has been updated due to new generator instalation"
        },

        "genhrsupdatedcontrreplaced":{
          "pt": "Horas do gerador redefinidas devido à troca controlador",
          "en": "Generator hours has been updated due to controler swopping"
        },

        "responsavel": {
          "pt": "Responsável",
          "en": "Responsable"
        },

        "addinfo": {
              "pt": "Info Ad",
              "en": "Add Info"
          },

        "audittrail": {
              "pt": "Auditoria",
              "en": "Audit Trail"
          },

          "photo": {
            "pt": "Fotos",
            "en": "Photos"
          },

        "planneddate": {
              "pt": "Data Planeada",
              "en": "Planned Date"
          },

          "planneddate1": {
              "pt": "Data",
              "en": "Date"
          },

        "region": {
              "pt": "Região",
              "en": "Region"
          },

          "supervisor1": {
              "pt": "Supervisor",
              "en": "Supervisor"
          },

        "maintenanceofficer1": {
              "pt": "Técnico ",
              "en": "Technician"
          },

        "sitenum": {
              "pt": "Número de Site",
              "en": "Site Number"
          },

          "sitenum1": {
              "pt": "Site",
              "en": "Site"
          },

        "quantityuse1": {
              "pt": "Quant. usada",
              "en": "Quant.y used"
          },

        "serialnumber1": {
              "pt": "Nr Série",
              "en": "Serial Nr"
          },

        "equiptype1": {
              "pt": "Tip. Equip.",
              "en": "Equip. Type"
          },

        "refuelreason1": {
              "pt": "Razão Reabast.",
              "en": "Ref. Reason" 
          },

        "previousrefuelhrs1": {
              "pt": "H. Reab. Ant.",
              "en": "Prev. Ref. H."
          },

        "remedialaction1": {
              "pt": "Ac. Correct.",
              "en": "Remed. Act."
          },

        "hsreason": {
              "pt": "Razão",
              "en": "Reason"
          },

        "gerador1": {
              "pt": "Gerador",
              "en": "Generator"
          },

        "currentgeneratorhours1": {
              "pt": "Horas actuais",
              "en": "Current Hours"
          },

        "probhsaf": {
              "pt": "Problemas de Saúde e Segurança",
              "en": "Health and Safety Problems"
          },
      
        "status": {
              "pt": "Estado",
              "en": "Status"
          },

          "reportedby": {
              "pt": "Reportado por",
              "en": "Reported By"
          },

          "siteinfo": {
              "pt": "Info. de Site",
              "en": "Site Info"
          },

          "jobcard": {
              "pt": "Lista de Cartão de trabalho",
              "en": "Job Card List"
          },

          "correctivemaint": {
              "pt": "Manutenção Correctiva",
              "en": "Corrective Maintenance"
          },

          "preventivemaint": {
              "pt": "Manutenção Preventiva",
              "en": "Preventive Maintenance"
          },

          "basicinfo": {
              "pt": "Informação Básica",
              "en": "Basic Information"
          },

          "cliente": {
              "pt": "Cliente",
              "en": "Client"
          },

          "tecnico": {
              "pt": "Técnico",
              "en": "Technician"
          },

          "localizacao":{
            "pt": "Local",
            "en": "Location"
          },

          "reporte": {
              "pt": "Reporte",
              "en": "Report"
          },

          "departamento": {
              "pt": "Departamento",
              "en": "Department"
          },

          "regiao": {
              "pt": "Região",
              "en": "Region"
          },

          "jobtype": {
              "pt": "Tipo de trabalho",
              "en": "Job Type"
          },

          "jobinfo": {
              "pt": "Razão",
              "en": "Reason"
          },

          "clientenome": {
              "pt": "Nome",
              "en": "Name"
          },

          "clientebranch": {
              "pt": "Filial",
              "en": "Branch"
          },

          "clientetelefone": {
              "pt": "Telefone do Cliente",
              "en": "Cliente Phone Number"
          },

          "contactperson": {
              "pt": "Pessoa de Contacto",
              "en": "Contact Person"
          }, 

          "contactphone": {
              "pt": "Telefone da Pessoa de Contacto",
              "en": "Contact Person Phone"
          },

          "tecniconome": {
              "pt": "Nome",
              "en": "Name"
          },


          "loggedby": {
              "pt": "Registrado Por",
              "en": "Logged By"
          },

          "loggedon": {
              "pt": "Registrado em",
              "en": "Logged On"
          },

          "datareporte": {
              "pt": "Data relatada",
              "en": "Date reported"
          },

          "dataregistro":{
            "pt": "Data de registro",
            "en": "Registration date"
          },

          "priority":{
            "pt": "Prioridade",
            "en": "Priority"
          },

          "lastupdate":{
            "pt": "Última Actualização",
            "en": "Last update"
          },

          "horareporte": {
              "pt": "Hora relatada",
              "en": "Time reported"
          },

          "quotacao": {
              "pt": "Cotação",
              "en": "Cotation"
          },

          "codigo": {
              "pt": "Numero Ref Comserv",
              "en": "Comserv Ref Number "
          },

          "travel": {
              "pt": "Info de Viagem",
              "en": "Travel Info"
          },

          "repair": {
              "pt": "Reparação de Equipamentos",
              "en": "Equipment Repairs"
          },

          "spare": {
              "pt": "Sobressalente Usado",
              "en": "Spare Used"
          },

          "departureplace": {
              "pt": "Local de Partida",
              "en": "Departure Place"
          },

          "kmreading": {
              "pt": "Leitor KM",
              "en": "KM Reading"
          },

          "departuredate": {
              "pt": "Data de Partida",
              "en": "Departure Date"
          },

          "departuretime": {
              "pt": "Hora de Partida",
              "en": "Departure Time"
          },

          "departure": {
              "pt": "Partida",
              "en": "Departure"
          },

          "sitearrival": {
              "pt": "Chegada ao Site",
              "en": "Site Arrival"
          },

          "sitearrivaldate": {
              "pt": "Data de Chegada ao Site",
              "en": "Site Arrival Date"
          },

          "sitearrivaltime": {
              "pt": "Hora de Chegada ao Site",
              "en": "Site Arrival Time"
          },

          "workdone": {
              "pt": "Trabalho feito",
              "en": "Work Done"
          },

          "remedialaction": {
              "pt": "Acção Correctiva",
              "en": "Remedial Action"
          },

          "conclusiondate":{
            "pt": "Data de conclusão",
            "en": "Finishing date"
          },

          "responsetime":{
            "pt": "Tempo de resposta",
            "en": "Response time"
          },

          "healthsafety": {
              "pt": "Ocorreram problemas de Saúde e Segurança ?",
              "en": "Any Health and Safety issues occured ?"
          },

          "sitedeparturedate": {
              "pt": "Data de Partida do Site",
              "en": "Site Departure Date"
          },

          "sitedeparturetime": {
              "pt": "Hora de Partida do Site",
              "en": "Site Departure Time"
          },

          "sleeping": {
              "pt": "Vai dormir antes de continuar a viagem ?",
              "en": "Will you be sleeping before you travel further ?"
          },

          "totalsleep": {
              "pt": "Total de Horas de repouso",
              "en": "Total Hours Slept"
          },

          "sitedeparture": {
              "pt": "Partida do Site",
              "en": "Site Departure"
          },

          "nextdestination": {
              "pt": "Próximo Destino",
              "en": "Next Destination"
          },

          "destinationdate": {
              "pt": "Data de Chegada no Destino",
              "en": "Destination Arrival Date"
          },

          "destinationtime": {
              "pt": "Hora de Chegada no Destino",
              "en": "Destination Arrival Time"
          },

          "destinationplace": {
              "pt": "Destino",
              "en": "Destination Arrival Place"
          },

          "equiptype": {
              "pt": "Tipo de Equipamento",
              "en": "Equipment Type"
          },

          "manufacturer": {
              "pt": "Fabricante",
              "en": "Manufacturer"
          },

          "model": {
              "pt": "Modelo",
              "en": "Model"
          },

          "serialnumber": {
              "pt": "Número de Série",
              "en": "Serial Number"
          },

          "capacity": {
              "pt": "Capacidade",
              "en": "Capacity"
          },

          "type": {
              "pt": "Tipo",
              "en": "Type"
          },

          "fromstore": {
              "pt": "Da loja",
              "en": "From Store"
          },

          "maintenanceofficer": {
              "pt": "Oficial de Manutenção",
              "en": "Maintenance Officer"
          },

          "item": {
              "pt": "Item",
              "en": "Item"
          },

          "remaining": {
              "pt": "Restante",
              "en": "Remaining"
          },

          "quantityhave": {
              "pt": "Quantidade existente",
              "en": "Existing quantity"
          },

          "quantityuse": {
              "pt": "Quantidade usada",
              "en": "Quantity used"
          },

          "datauso": {
              "pt": "Data de uso",
              "en": "Date used"
          },

          "data": {
              "pt": "Data",
              "en": "Date"
          },

          "viagem": {
              "pt": "Viagem",
              "en": "Travel"
          },

          "visitsite": {
              "pt": "Visitar Site",
              "en": "Visit Site"
          },

          "gerador": {
              "pt": "Detalhes do Gerador ",
              "en": "Generator Details"
          },

          "previousgeneratorhours": {
              "pt": "Horas Anteriores do Gerador",
              "en": "Previous Generator Hours"
          },

          "currentgeneratorhours": {
              "pt": "Horas Actuais do Gerador",
              "en": "Current Generator Hours"
          },

          "previousrefuelhrs": {
              "pt": "Horas de Reabastecimento Anteriores",
              "en": "Previous Refuel Hours"
          },

          "generatorrefuel": {
              "pt": "Reabastecimento do Gerador (Litros)",
              "en": "Generator Refuel (Liters)"
          },

          "generatorruntime":{
            "pt": "Horas de Funcionamento do Gerador",
            "en": "Generator Runtime hours"
          },

          "litersoil": {
              "pt": "Litros de óleo adicionado",
              "en": "Liters Oil Added"
          },

          "dsc": {
              "pt": "DSC Substituído ?",
              "en": "DSC Replaced ?" 
          },

          "refuelreason": {
              "pt": "Razão do Reabastecimento",
              "en": "Refuel Reason" 
          },

          "lastrefueldate": {
              "pt": "Data do Último Reabastecimento",
              "en": "Last Refuel Date" 
          },

          "generatorbeenserviced": {
              "pt": "O gerador foi reparado?",
              "en": "Has the generator been serviced ?" 
          },

          "hourslastservice": {
              "pt": "Horas do último serviço",
              "en": "Hours from last service" 
          },

          "fromto": {
              "pt": "De / Para",
              "en": "From / To"
          },

          "time": {
              "pt": "Hora",
              "en": "Time"
          },

          "distance": {
              "pt": "Distância(Km)",
              "en": "Distance(Km)"
          }

      },

      "site_info": {

        "guardasite": {
              "pt": "Guarda",
              "en": "Guard"
          },

          "acinstall": {
              "pt": "AC Inst.",
              "en": "AC. Inst."
          },

          "generatorinstall": {
              "pt": "Ger. Inst.",
              "en": "Gen. Inst."
          },

        "listavazia": {
              "pt": "Lista Vazia",
              "en": "Empty List"
          },

        "detalhesrectifiercabinet": {
              "pt": "Detalhes do Rectificador",
              "en": "Rectifier Details"
          },

        "save": {
              "pt": "Guardar",
              "en": "Save"
          },

        "secguardname1": {
              "pt": "Nome do Guar.",
              "en": "Guar. Name"
          },


        "secbinumber1": {
              "pt": "BI",
              "en": "ID"
          },

        "rectcabbatterycapac1": {
              "pt": "Cap. Bateria A/h",
              "en": "Battery A/h Cap."
          },

        "rectcabcabinetnumber1": {
              "pt": "Nr do Gab.",
              "en": "Cab. Nr"
          },

        "actype1": {
              "pt": "Tipo de AC",
              "en": "AC Type"
          },

        "acnumber1": {
              "pt": "Nr de AC",
              "en": "AC Nr"
          },

        "credelec": {
              "pt": "Número do medidor Credelec",
              "en": "Credelec Meter Number"
          },

        "guardsite": {
              "pt": "Existe um guarda no local ?",
              "en": "Is there a guard on site ?"
          },

        "fencingelectrified": {
              "pt": "A vedação está electrificada?",
              "en": "Is the fence electrified ?"
          },

          "addgenerator": {
            "pt": "Ad. Gerador",
            "en": "Add Generator"
        },

          "updategenerator": {
              "pt": "Actualizar Gerador",
              "en": "Update Generator"
          },

          "addac": {
            "pt": "Ad. AC",
            "en": "Add AC"
        },

          "updateac": {
              "pt": "Actualizar AC",
              "en": "Update AC"
          },

          "addrectcab": {
              "pt": "Ad. Gabinete",
              "en": "Add Cabinet"
          },


          "updaterectcab": {
              "pt": "Actualizar Gabinete",
              "en": "Update Cabinet"
          },

          "addsecurity": {
              "pt": "Ad. Guarda",
              "en": "Add Guard"
          },

          "updatesecurity": {
              "pt": "Actualizar Guarda",
              "en": "Update Guard"
          },

        "client": {
              "pt": "Cliente Associado",
              "en": "Associated Client"
          },

          "code": {
              "pt": "Codigo",
              "en": "Code"
          },
        
        "sitedetails": {
              "pt": "Detalhes do Site",
              "en": "Site Details"
          },

          "gerador": {
              "pt": "Gerador",
              "en": "Generator"
          },

          "ac": {
              "pt": "Ar condicionado",
              "en": "Air conditioning"
          },

          "rectifier": {
              "pt": "Gabinete do rectificador",
              "en": "Rectifier Cabinet"
          },

          "seguranca": {
              "pt": "Segurança",
              "en": "Security"
          },

          "electricity": {
              "pt": "Fornecimento de eletricidade",
              "en": "Electricity Supply"
          },

          "sitename": {
              "pt": "Nome do Site",
              "en": "Site Name"
          },

          "sitenum": {
              "pt": "Número de Site",
              "en": "Site Number"
          },

          "regiao": {
              "pt": "Região",
              "en": "Region"
          },

          "area": {
              "pt": "Área",
              "en": "Area"
          },

          "regiaoselmec": {
              "pt": "Região Selmec",
              "en": "Selmec Office Region"
          },

          "radiotec": {
              "pt": "Tecnologia de Rádio",
              "en": "Radio Technology"
          },

          "planmaintdate": {
              "pt": "Data da Manutenção Planeada",
              "en": "Planned Maintenance Date"
          },

          "siteclassif": {
              "pt": "Classificação de Site",
              "en": "Site Classification"
          },

          "siteannoucdate": {
              "pt": "Data de Anúncio do Site",
              "en": "Site Announce Date"
          },

          "siteonairdate": {
              "pt": "Data do Site No Ar",
              "en": "Site On Air Date"
          },

          "pacdate": {
              "pt": "Data PAC",
              "en": "PAC Date"
          },

          "btslinkedsite": {
              "pt": "BTS ligado ao Site",
              "en": "BTS Linked With Site"
          },

          "maintoff": {
              "pt": "Oficial de Manutenção",
              "en": "Maintenance Officer"
          },

          "techcontactnum": {
              "pt": "Telefone do Técnico",
              "en": "Technician Contact Number"
          },


          "typesite": {
              "pt": "Tipo de Site",
              "en": "Type of site"
          },

          "phasenum": {
              "pt": "Número de fase do site",
              "en": "Site Phase Number"
          },

          "location": {
              "pt": "Detalhes da Localização",
              "en": "Location Details"
          },

           "activity": {
              "pt": "Detalhes da actividade",
              "en": "Activity Details"
          },

           "geradorinst": {
              "pt": "Gerador instalado",
              "en": "Generator installed"
          },

          "sim": {
              "pt": "Sim",
              "en": "Yes"
          },

          "nao": {
              "pt": "Não",
              "en": "No"
          },

          "acinst": {
              "pt": "Ac instalado",
              "en": "Ac installed"
          },

          "acinst1": {
              "pt": "Instalado",
              "en": "Installed"
          },

          "rectifiercabinnetinst": {
              "pt": "Gabinete do retificador instalado",
              "en": "Rectifier cabinet installed"
          },

          "fencinginst": {
              "pt": "Vedação",
              "en": "Fencing"
          },

          "elecsupptype": {
              "pt": "Tipo de Fornecimento de Electricidade",
              "en": "Electricity Supply Type"
          },

          "electype": {
              "pt": "Tipo de Electricidade",
              "en": "Electricity Type"
          },

          "electypesingle": {
              "pt": "Fase Única",
              "en": "Single Phase"
          },

          "electypethree": {
              "pt": "Trifásico",
              "en": "Three Phase"
          },

          "listasiteinfo": {
              "pt": "Lista de informação de sites",
              "en": "Site information list"
          },

          "numero": {
              "pt": "Número",
              "en": "Number"
          },

          "generatortype": {
              "pt": "Tipo de Gerador",
              "en": "Generator Type"
          },
          "generatortype1": {
              "pt": "Tipo",
              "en": "Type"
          },

          "outputkw": {
              "pt": "Saída KW",
              "en": "Output KW"
          },

          "detalhesgerador": {
              "pt": "Detalhes do Gerador",
              "en": "Generator Details"
          },

          "resetgenhours": {
            "pt": "Redefinir Horas do Gerador",
            "en": "Reset Generator Hours"
          },

          "canceljobcard":{
            "pt": "Cancelar Jobcard",
            "en": "Cancel Jobcard"
          },

          "cancel":{
            "pt": "Cancelar",
            "en": "Cancel"
          },

          "newgeninstalled":{
            "pt": "Novo gerador instalado",
            "en": "New generator installed"
          },

          "genswopped":{
            "pt": "Gerador trocado",
            "en": "Gen swopped"
          },

          "controllerreplaced":{
            "pt": "Controlador substituído",
            "en": "Controller replaced"
          },

          "reset":{
            "pt": "Redefinir",
            "en": "Reset"
          },

          "modelno": {
              "pt": "Nr do Modelo",
              "en": "Model No"
          },

          "modelno1": {
              "pt": "Modelo",
              "en": "Model"
          },

          "engineserialnumber": {
              "pt": "Número de Série do Motor",
              "en": "Engine Serial Number"
          },

          "enginecapacity": {
              "pt": "Capacidade do motor",
              "en": "Engine Capacity"
          },

          "enginecapacity1": {
              "pt": "Cap. do motor",
              "en": "Engine Cap."
          },

          "startertype": {
              "pt": "Tipo Inicial",
              "en": "Starter Type"
          },

          "fuelconsumption": {
              "pt": "Consumo de Combustível",
              "en": "Fuel Consumption"
          },

           "fuelconsumption1": {
              "pt": "Combustível",
              "en": "Fuel"
          },


          "detalhesac": {
              "pt": "Detalhes do Ar Condicionado",
              "en": "Air Conditioning Details"
          },

          "acmanufacturer": {
              "pt": "Fabricante",
              "en": "Manufacturer"
          },

          "actype": {
              "pt": "Tipo de Ar Condicionado",
              "en": "Air Conditioning Type"
          },

          "acmodel": {
              "pt": "Modelo",
              "en": "Model"
          },

          "acnumber": {
              "pt": "Número de Ar Condicionado",
              "en": "Air Conditioning Number"
          },

          "acserialnumber": {
              "pt": "Número de Série",
              "en": "Serial Number"
          },

          "accageinstalled": {
              "pt": "Armação Instalada",
              "en": "Cage Installed"
          },

          "acsleeveinstalled": {
              "pt": "Bucha Instalada",
              "en": "Sleeve Installed"
          },

          "acunitcontrolltype": {
              "pt": "Tipo de Controlador de Unidade",
              "en": "Unit Controller Type"
          },

          "accontrollermodel": {
              "pt": "Modelo de Controle",
              "en": "Controller Model"
          },

          "rectcabcabinetmodelno": {
              "pt": "Nr de Modelo do Gabinete",
              "en": "Cabinet Model No"
          },

          "rectcabcabinetnumber": {
              "pt": "Número do Gabinete",
              "en": "Cabinet Number"
          },

          "quantity":{
              "pt": "Quantidade",
              "en": "Quantity"
            },

            "rectcabcabinetmasterrectifiertype": {
              "pt": "Tipo de Rectificador",
              "en": "Rectifier Type"
            },

            "serialNo":{
              "pt": "Número de série",
              "en": "Serial Number"
            },

            "rectcabcabinetmasterrectifierinputtype": {
              "pt": "Tipo de Entrada do Rectificador",
              "en": "Rectifier Input Type"
            },

            "rectcabcabinetmasterrectifiermodulestype": {
              "pt": "Tipo de Módulo do Rectificador",
              "en": "Rectifier Module Type"
            },

            "rectcabcabinetmasterrectifiercontrollertype": {
              "pt": "Tipo de Controlador de Módulo",
              "en": "Controller Module Type"
            },

            "mastercircuitbreakerinputtype": {
              "pt": "Entrada do disjuntor",
              "en": "Circuit Breaker Input"
            },

            "mastercircuitbreakerloadtype": {
              "pt": "Carga do disjuntor",
              "en": "Circuit Breaker Load"
            },

            "mastercircuitbreakerloadquantity": {
              "pt": "Quantidade da Carga do disjuntor",
              "en": "Circuit Breaker Load Quantity"
            },

            "mastercircuitbreakerbatteries": {
              "pt": "Bateria do disjuntor",
              "en": "Circuit Breaker Battery"
            },

            "mastercircuitbreakerbatteriesquantity": {
              "pt": "Quantidade de Baterias do disjuntor",
              "en": "Circuit Breaker Battery Quantity"
            },

             "adddb":{
              "pt": "Ad. DB",
              "en": "Add DB"
            },

            "updatedb":{
              "pt": "Actualizar DB",
              "en": "Update DB"
            },

            "noofbatteriescab1": {
              "pt": "Número de Baterias",
              "en": "Number of Battery"
            },

            "batteryahcapacitycab": {
              "pt": "Capacidade de Baterias A/h",
              "en": "Battery A/h Capacity"
            },

            "building": {
              "pt": "Edifício",
              "en": "Building"
            },

             "structure": {
              "pt": "Estrutura",
              "en": "Structure"
            },

            "colour": {
              "pt": "Cor",
              "en": "Colour"
            },


            "typeoflock": {
              "pt": "Tipo de Fechadura",
              "en": "Type of Lock"
            },

            "buildingarea": {
              "pt": "Área do Edifício (m2)",
              "en": "Building Arean (m2)"
            },

            "wallthickness": {
              "pt": "Espessura da Parede (mm)",
              "en": "Wall Thickness (mm)"
            },

            "accommodationlights": {
              "pt": "Luzes de Acomodação",
              "en": "Accommodation Lights"
            },

            "typeoffitting": {
              "pt": "Tipo de Encaixe",
              "en": "Type of Fitting"
            },

            "typeofglobe": {
              "pt": "Tipo de Globo",
              "en": "Type of Globe"
            },

            "buildingAccommodationLightQuantity": {
              "pt": "Quantidade",
              "en": "Quantity"
            },

            "emergencylights": {
              "pt": "Luzes de Emergência",
              "en": "Emergency Lights"
            },

            "disjuntoresdcdb": {
              "pt": "Disjuntores DC DB",
              "en": "DC DB Circuit Breakers"
            },

            "circuitbreakertype": {
              "pt": "Tipo de Disjuntores",
              "en": "Circuit Breakers Type"
            },

            "quantityused": {
              "pt": "Quantidade Usada",
              "en": "Used Quantity"
            },

            "movalarminstalled": {
              "pt": "Alarme de Movimento Instalado",
              "en": "Movement Alarm Installed"
            },

            "movalarminstalledqty": {
              "pt": "Quantidade de Alarmes de Movimento Instalados",
              "en": "Number of Installed Movement Alarms"
            },

            "intruderalarminstalled": {
              "pt": "Alarme de Intrusão Instalado",
              "en": "Intruder Alarms Installed"
            },

            "intruderalarminstalledqty": {
              "pt": "Quantidade de Alarmes de Intrusão Instalados",
              "en": "Number of Installed Intruder Alarms"
            },

            "heatalarminstalled": {
              "pt": "Alarme de Aquecimento Instalados",
              "en": "Heat Alarms Installed"
            },

            "heatalarminstalledqty": {
              "pt": "Quantidade de Alarmes de Aquecimento Instalados",
              "en": "Number of Installed Heat Alarms"
            },

            "additionalsurgeprotection": {
              "pt": "Proteção adicional contra sobretensão",
              "en": "Additional surge protection"
            },

            "additionalsurgeprotectiontype": {
              "pt": "Tipo Proteção adicional contra sobretensão",
              "en": "Additional surge protection Type"
            },

            "internaldb": {
              "pt": "Internal DB",
              "en": "Internal DB"
            },

            "internaldbinstalled": {
              "pt": "Internal DB Instalado",
              "en": "Internal DB Installed"
            },

            "internaldbdetails": {
              "pt": "Detalhes do Internal DB",
              "en": "Internal DB Details"
            },

            "internaldbtype": {
              "pt": "Tipo",
              "en": "Type"
            },

            "internaldbphase": {
              "pt": "Fase",
              "en": "Phase"
            },

            "internaldbmaincircuitbreaker": {
              "pt": "Disjuntor Principal",
              "en": "Main Circuit Breaker"
            },

            "internaldbsurgeArrestorType": {
              "pt": "Tipo de Pára-Raios",
              "en": "Surge Arrestor Type"
            },

            "internaldbsurgeArrestorQty": {
              "pt": "Quantidade de Pára-Raios",
              "en": "Number of Surge Arrestors"
            },

            "internaldbsurgeArrestorType2": {
              "pt": "Tipo de Pára-Raios 2",
              "en": "Surge Arrestor Type 2"
            },

            "internaldbcurrentmonitorType": {
              "pt": "Tipo de Monitor Actual",
              "en": "Current Monitor Type"
            },

            "internaldbEarthLeakageDevice": {
              "pt": "Dispositivo de Vazamento de Terra",
              "en": "Earth Leakage Device"
            },

            "circuitbreakerfor": {
              "pt": "Disjuntor Para",
              "en": "Circuit Breaker for"
            },

            "internaldbCircuitBreakerforRectifier": {
              "pt": "Rectificadores",
              "en": "Rectifiers"
            },
            
            "internaldbCircuitBreakerforAirconditioners": {
              "pt": "Ar-Condicionados",
              "en": "Air Conditioners"
            },

            "internaldbCircuitBreakerforPlugs": {
              "pt": "Tomadas",
              "en": "Plugs"
            },
            
            "internaldbMastInternalLight": {
              "pt": "Luz Interna do Mastro",
              "en": "Mast Internal Light"
            },
            
            "internaldbContainerLight": {
              "pt": "Luz do Contentor",
              "en": "Container Light"
            },
            
            "internaldbSiteLight": {
              "pt": "Luz do Site",
              "en": "Site Light"
            },
            
            "internaldbAircraftWarningLight": {
              "pt": "Luz de Advertência de Aeronaves",
              "en": "Aircraft Warning Lights"
            },
            
            "internaldbCircuitBreakerSpareType": {
              "pt": "Sobressalente",
              "en": "Spare"
            },
            

            "siteowner": {
              "pt": "Proprietário do Site",
              "en": "Site Owner"
            },

            "siteshared": {
              "pt": "Site partilhado",
              "en": "Site Being Shared"
            },

            "shared": {
              "pt": "Partilhado",
              "en": "Shared"
            },

            "sitepreparedforsharing": {
              "pt": "Site Preparado Para Ser Partilhado",
              "en": "Site Prepared for Sharing"
            },

            "otherinformation": {
              "pt": "Outras Informações",
              "en": "Other Information"
            },

            "mast": {
              "pt": "Mastro",
              "en": "Mast"
            },

            "masttype": {
              "pt": "Tipo de Mastro",
              "en": "Mast Type"
            },

            "mastmanufacturer": {
              "pt": "Fabricante do Mastro",
              "en": "Mast Manufacturer"
            },

            "mastheight": {
              "pt": "Altura do Mastro (m)",
              "en": "Mast Height (m)"
            },

            "mastoverheadentry": {
              "pt": "Entrada Aérea do Mastro",
              "en": "Mast Overhead Entry"
            },

            "mastundergroundentry": {
              "pt": "Entrada Subterránea do Mastro",
              "en": "Mast Underground Entry"
            },

            "mastgantrytype": {
              "pt": "Tipo do Gantry",
              "en": "Mast Gantry Type"
            },

            "mastgantrylength": {
              "pt": "Comprimento do Gantry",
              "en": "Gantry Length"
            },

            "110mmsleavesqty": {
              "pt": "Quantidade de Mangas 110mm",
              "en": "110mm Sleeves Quantity"
            },

            "110mmsleavesused": {
              "pt": "Mangas 110mm Usadas",
              "en": "110mm Sleeves Used"
            },

            "50mmsleavesqty": {
              "pt": "Quantidade de Mangas 50mm",
              "en": "50mm Sleeves Quantity"
            },

            "50mmsleavesused": {
              "pt": "Mangas 50mm Usadas",
              "en": "50mm Sleeves Used"
            },

            "othersizesleavesqty": {
              "pt": "Quantidade de Mangas de Outros Tamanhos",
              "en": "Other Size Sleeves Quantity"
            },

            "othersizesleavesused": {
              "pt": "Mangas de Outros Tamanhos Usadas",
              "en": "Other Size Sleeves Used"
            },

            "drainsbottom": {
              "pt": "Drenos no Fundo",
              "en": "Drains at the Bottom"
            },

            "lightsfittingtype": {
              "pt": "Tipo de Encaixe das Luzes",
              "en": "Lights Fitting Type "
            },

            "globetype": {
              "pt": "Tipo de Globo das Luzes",
              "en": "Light Globe Type"
            },

            "globeqty": {
              "pt": "Quantidade de Globos",
              "en": "Number of Globes"
            },

            "switchinstalled": {
              "pt": "Quantidade de Interruptores Instalados",
              "en": "Number of Switches Installed"
            },

            "switchtype": {
              "pt": "Tipo de Interruptor",
              "en": "Switch Type"
            },

            "aircraftlightfittingType": {
              "pt": "Tipo de Encaixe das Luzes de Advertência à aeronaves",
              "en": "Aircraft Light Fitting Type"
            },

            "aircraftlightfittingGlobeType": {
              "pt": "Tipo de Globo das Luzes de Advertência à aeronaves",
              "en": "Aircraft Light Fitting Globe Type"
            },

            "mastbottomdb": {
              "pt": "DB da Parte Inferior do Mastro",
              "en": "Mast Bottom DB"
            },

            "mastbottomdbinstalled": {
              "pt": "DB da Parte Inferior do Mastro Instalado",
              "en": "Mast Bottom DB Installed"
            },

            "mastbottomdbtype": {
              "pt": "Tipo de DB",
              "en": "DB Type"
            },

            "circuitbreakerawl": {
              "pt": "Disjuntor de AWL",
              "en": "Circuit Breaker for AWL"
            },

            "circuitbreakerqty": {
              "pt": "Quantidade de Disjuntores de AWL",
              "en": "Number of Circuit Breakers for AWL"
            },

            "circuitbreakerinternlights": {
              "pt": "Luzes Internas de Disjuntores",
              "en": "Circuit Breakers Internal Lights"
            },

            "circuitbreakerinternallightsqty": {
              "pt": "Quantidade Luzes Internas de Disjuntores",
              "en": "Circuit Breakers Internal Lights Quantity"
            },

            "lightingarrestorsinstalled": {
              "pt": "Supressores de Iluminação Instalados",
              "en": "Lighting Arrestors Installed"
            },

            "lightingarrestorsinstalledqty": {
              "pt": "Quantidade de Supressores de Iluminação",
              "en": "Lighting Arrestors Installed Quantity"
            },

            "circuitbreakerarrestors": {
              "pt": "Supressores de Disjuntores",
              "en": "Circuit Breakera Arrestors"
            },

            "circuitbreakerarrestorsinstalledqty": {
              "pt": "Quantidade de Supressores de Disjuntores",
              "en": "Circuit Breaker Arrestors Quantity"
            },

            "masttopaircraftwarninglightsdb": {
              "pt": "DB de Luzes de Advertência de Aeronave no Topo do Mastro ",
              "en": "Mast Top Aircraft Warning Lights DB"
            },

            "masttopawldbinstalled": {
              "pt": "Instalado",
              "en": "Installed"
            },

            "mastdbtype": {
              "pt": "Tipo de DB",
              "en": "DB Type"
            },

            "mastswitchtype": {
              "pt": "Tipo de Switch",
              "en": "Switch Type"
            },

            "mastintermediate": {
              "pt": "Intermediário",
              "en": "Intermediate"
            },

            "mastintermediatetype": {
              "pt": "Tipo de Intermediário",
              "en": "Intermediate Type"
            },

            "mastsintermediatewitchtype": {
              "pt": "Tipo de Switch do Intermediário",
              "en": "Intermediate Switch Type"
            },

            "intermediatefittingsqyt": {
              "pt": "Quantidade de Encaixes do Intermediário",
              "en": "Intermediate Fittings Quantity"
            },

            "mastinttype": {
              "pt": "Tipo de Encaixes do Intermediário",
              "en": "Intermediate Fittings Type"
            },

            "mastsglobetype": {
              "pt": "Tipo de Globo",
              "en": "Globe Type"
            },

            "awllightsearthleakage": {
              "pt": "Luzes AWL de Vazamento de Terra",
              "en": "AWL Lights Earth Leakage"
            },

            "mastfallarrestinstalled": {
              "pt": "Trava-Quedas Instalado",
              "en": "Fall Arrest Installed"
            },

            "mastfallarrestinstalledqty": {
              "pt": "Quantidade de Trava-Quedas",
              "en": "Number of Fall Arrest"
            },

            "masttypeoflock": {
              "pt": "Tipo de Fechadura Para o Mastro",
              "en": "Type of lock to mast"
            },

            "mastspinesupportpipes": {
              "pt": "Tubos de Suporte da Coluna",
              "en": "Spine Support Pipes"
            },

            "mastspinesupportpipesqty": {
              "pt": "Quantidade Tubos de Suporte da Coluna",
              "en": "Spine Support Pipes Quantity"
            },
            
            "mastotherinformation": {
              "pt": "Outras Informações do Mastro",
              "en": "Mast Other Information"
            },

            "externaldb": {
              "pt": "DB Externo",
              "en": "External DB"
            },

            "externaldbinstalled": {
              "pt": "External DB Instalado",
              "en": "External DB Installed"
            },

            "externaldbdetails": {
              "pt": "Detalhes do External DB",
              "en": "External DB Details"
            },

            "externalsharing": {
              "pt": "Partilha",
              "en": "Sharing"
            },

            "externalgeneratorpluginstalled": {
              "pt": "Tomada do Gerador Instalada",
              "en": "Generator Plug Installed"
            },

            "mainincomingisolator": {
              "pt": "Isolador de Entrada Principal",
              "en": "Main Incoming Isolator"
            },

            "neutralbarsqty": {
              "pt": "Quantidade de Barras Neutras",
              "en": "Neutral Bars Quantity"
            },

            "powermonitorrelay": {
              "pt": "Relay do Monitor de Energia",
              "en": "Relay Power Monitor"
            },

            "externalsurgearrestors": {
              "pt": "Pára-Raios",
              "en": "Surge Arrestors"
            },

            "externalforsharingparty": {
              "pt": "For Sharing Party",
              "en": "For Sharing Party"
            },

            "externalkwhmeter": {
              "pt": "Medidor KWh - Sharing Party",
              "en": "KWh Meter - Sharing Party"
            },

            "externalforconstruction": {
              "pt": "Party Para Construção",
              "en": "For Construction Party"
            },

            "externalforvdcinternaldb": {
              "pt": "DB Interno para Vdc",
              "en": "For Vdc internal db"
            },

            "externalforsitelight": {
              "pt": "Luz para o Site",
              "en": "For Site Light"
            },

            "externalforawlight": {
              "pt": "Luz para o AW",
              "en": "For AW Light"
            },

            "externalformobilegene": {
              "pt": "Para Gerador Móvel",
              "en": "For Mobile Generator"
            },

            "externalgeneratorphase": {
              "pt": "Monitor de Fase do Gerador",
              "en": "Generator Phase Monitor"
            },

            "externalcontrolfuse": {
              "pt": "Fusível de Controle do Gerador",
              "en": "Control Fuse for Generator"
            },

            "externalcontrolfuserating": {
              "pt": "Classificação do Fusível de Controle",
              "en": "Control Fuse Rating"
            },

            "externalfeedcablefromsupply": {
              "pt": "Cabo de Alimentação do Tamanho da Fonte",
              "en": "Feed Cable From Supply Size"
            },

            "length": {
              "pt": "Comprimento",
              "en": "Length"
            },

            "externalcabletovm": {
              "pt": "Cabo Para o DB Int DB da Vodacom",
              "en": "Cable to Vodacom int DB"
            },

            "externalawlsurgearr": {
              "pt": "Pára-Raios AWL",
              "en": "External AWL Surge Arrestor"
            },

            "externalawlsurgearrqty": {
              "pt": "Quantidade de Pára-Raios AWL",
              "en": "External AWL Surge Arrestor Qty"
            },

            "externalcurrentmonitor": {
              "pt": "Monitor Actual",
              "en": "Current Monitor"
            },

            "externalchangeovercont": {
              "pt": "Contactores de Troca",
              "en": "Change Over Contactors"
            },

            "fencing": {
              "pt": "Vedação",
              "en": "Fencing"
            },

            "fencingelect": {
              "pt": "Vedação Electrificada",
              "en": "Fencing Electrified"
            },

            "sitelights": {
              "pt": "Segurança / Luzes do Site",
              "en": "Security / Site Lights"
            },

            "typeoffitting": {
              "pt": "Tipo de Encaixe",
              "en": "Type of Fitting"
            },

            "securityqty": {
              "pt": "Quantidade",
              "en": "Type of Fitting"
            },

            "outsidelightswitch": {
              "pt": "Interruptor das Luzes Externas",
              "en": "Outside Light Switch"
            },

            "location": {
              "pt": "Localização",
              "en": "Location"
            },

            "guardinfo": {
              "pt": "Informação do Guarda",
              "en": "Guard Info"
            },

            "external": {
              "pt": "Classificação do Fusível de Controle",
              "en": "Control Fuse Rating"
            },

            "circuitbrkr": {
              "pt": "Disjuntor",
              "en": "Circuit Beeaker"
            },

            "powercontainer": {
              "pt": "Contentor de Energia",
              "en": "Power Container"
            },

            "manufactserialno": {
              "pt": "Número de Série do Fabricante",
              "en": "Manufacturer Serial Number"
            },

            "size": {
              "pt": "Tamanho",
              "en": "Size"
            },

            "batteryahcapacity": {
              "pt": "Capacidade da Bateria A/h",
              "en": "A/h Battery Capacity"
            },

            "batteryqty": {
              "pt": "Quantidade de Baterias A/h",
              "en": "Number of A/h Battery"
            },

            "Alarm": {
              "pt": "Alarme",
              "en": "Alarm"
            },

            "fantype": {
              "pt": "Tipo de Ventilador",
              "en": "Fan Type"
            },

            "rectifier1": {
              "pt": "Rectificador 1",
              "en": "Rectifier 1"
            },

            "rectifier2": {
              "pt": "Rectificador 2",
              "en": "Rectifier 2"
            },

            "otherinfo": {
              "pt": "Outras Informações",
              "en": "Other Information"
            },

            "dcfans": {
              "pt": "Ventilador DC",
              "en": "DC Fan"
            },

            "faninstalled": {
              "pt": "Ventilador Instalado",
              "en": "Fan Installed"
            },

            "additionaltransformers": {
              "pt": "Transformadores Adicionais",
              "en": "Additional Transformers"
            },

            "additionaltransformersinstalled": {
              "pt": "Transformador Adicional Instalado",
              "en": "Additional Transformer Installed"
            },

            "serialno":{
              "pt": "Número de Série",
              "en": "Serial No"},

            "additionaltransformerdetails": {
              "pt": "Detalhes do Transformador Adicional",
              "en": "Aditional Transformer Details"
            },

            "addtransformer": {
              "pt": "Ad. Transformador",
              "en": "Add Transformer"
            },

            "updatetransformer": {
              "pt": "Actualizar Transformador",
              "en": "Update Transformer"
            },

            "transformertype": {
              "pt": "Tipo de Transformador",
              "en": "Transformer Type"
            },

            "datemanufactured": {
              "pt": "Data de Fabrico",
              "en": "Date Manufactured"
            },

            "cablebetween": {
              "pt": "Cabo entre o Transformador Step Up and Down",
              "en": "Cable Between Step Up and Down Transformer"
            },

            "transformerdata": {
              "pt": "Dados do Transformador",
              "en": "Transformer Data"
            },
            
            "rating": {
              "pt": "Classificação",
              "en": "Rating"
            },

            "primaryvoltage": {
              "pt": "Voltagem Primária",
              "en": "Primary Voltage"
            },

            "primaryampere": {
              "pt": "Amperagem Primária",
              "en": "Primary Ampere"
            },

            "secondaryvoltage": {
              "pt": "Voltagem Secundária",
              "en": "Secondary Voltage"
            },

            "secondaryampere": {
              "pt": "Amperagem Secundária",
              "en": "Secondary Ampere"
            },

            "impendance": {
              "pt": "Impendância",
              "en": "Impendance"
            },

            "symbol": {
              "pt": "Símbolo",
              "en": "Symbol"
            },

            "frequency": {
              "pt": "Frequência",
              "en": "Frequency"
            },

            "installationdate": {
              "pt": "Data de Instalação",
              "en": "Installation Date"
            },

            "genspecs": {
              "pt": "Especificações do Gerador",
              "en": "Generator Specifications"
            },

            "altspecs": {
              "pt": "Especificações do Alternador",
              "en": "Generator Alternator"
            },

            "kvarating": {
              "pt": "Classificação do KVA",
              "en": "Generator Specifications"
            },

            "general": {
              "pt": "Geral",
              "en": "General"
            },

            "contrtype": {
              "pt": "Tipo de Controlador",
              "en": "Controller Type"
            },

            "contrmodelno": {
              "pt": "Número do Modelo do Controlador",
              "en": "Controler Model No"
            },

            "contrserialno": {
              "pt": "Número de Série do Controlador",
              "en": "Controler Serial No"
            },

            "softwareversionno": {
              "pt": "Versão do Software",
              "en": "Software Version No"
            },

            "surgearrinst": {
              "pt": "Para-Raios Instalado ",
              "en": "Surge Arrestor Installed"
            },

            "ampmeterinst": {
              "pt": "Amperímetro Instalado",
              "en": "Amperère Meter Installed"
            },

            "voltmeterinst": {
              "pt": "Voltímetro Instalado",
              "en": "Volt Meter Installed"
            },

            "freqmeterinst": {
              "pt": "Medidor de Frequência Instalado",
              "en": "Frequency Meter Installed"
            },

            "analoguehormeters": {
              "pt": "Medidor de Horas Analógico Instalado",
              "en": "Analogue Hour Meters Intalled"
            },

            "kwhmetersinst": {
              "pt": "Medidor de KWh Instalado",
              "en": "KWh Meter Installed"
            },

            "dummyloadinst": {
              "pt": "Carga Fictícia Instalada",
              "en": "Dummy Load Installed"
            },

            "batteryinstalledtype": {
              "pt": "Tipo da Bateria Instalada",
              "en": "Battery Installed Type"
            },

            "sleevesinstalledsize": {
              "pt": "Tamanho das Mangas Instalada",
              "en": "Sleeves Installed Size"
            },

            "fuelsensortype": {
              "pt": "Tipo de Sensor de Combustível",
              "en": "Fuel Sensor Type"
            },

            "antenna": {
              "pt": "Antena",
              "en": "Antenna"
            },

            "gsmradio": {
              "pt": "Gabinete de Rádio GSM",
              "en": "GSM Radio Cabinet"
            },

            "gsmradiocabinet": {
              "pt": "Gabinete de Rádio GSM Instalada",
              "en": "GSM Radio Cabinet Installed"
            },

            "equipmenttype": {
              "pt": "Tipo de Equipamento",
              "en": "Equipment"
            },

            "gsmsiteconfig": {
              "pt": "Configuração GSM do Site",
              "en": "GSM Site Configuration"
            },

            "gsm900antennatype": {
              "pt": "Tipo de Antena GSM 900",
              "en": "GSM 900 Antenna Type"
            },

            "gsm900qty": {
              "pt": "Número de Antenas GSM 900",
              "en": "No of GSM 900 Antennas"
            },

            "tma900installed": {
              "pt": "TMA instalado na GSM 900",
              "en": "TMA Installed on GSM 900"
            },

            "gsm1800antennatype": {
              "pt": "Tipo de Antena GSM 1800",
              "en": "GSM 1800 Antenna Type"
            },

            "gsm1800qty": {
              "pt": "Número de Antenas GSM 1800",
              "en": "No of GSM 1800 Antennas"
            },

            "tma1800installed": {
              "pt": "TMA Instalado na GSM 1800",
              "en": "TMA Instalado Antenna"
            },

            "g3antennatype": {
              "pt": "Tipo de Antena 3G",
              "en": "3G Antenna Type"
            },

            "g3qty": {
              "pt": "Número de Antenas 3G",
              "en": "No of 3G Antennas"
            },

            "g3installed": {
              "pt": "TMA Instalado na 3G",
              "en": "TMA Installed on 3G"
            },

            "g4antennatype": {
              "pt": "Tipo de Antena 4G",
              "en": "4G Antenna Type"
            },

            "g4qty": {
              "pt": "Número de Antenas 4G",
              "en": "No of 4G Antennas"
            },

            "g4installed": {
              "pt": "TMA Instalado na 4G",
              "en": "TMA Installed on 4G"
            },

            "g5antennatype": {
              "pt": "Tipo de Antena 5G",
              "en": "5G Antenna Type"
            },

            "g5qty": {
              "pt": "Número de Antenas 5G",
              "en": "No of 5G Antennas"
            },

            "g5installed": {
              "pt": "TMA Instalado na 5G",
              "en": "TMA Installed on 5G"
            },

            "omniantennatype": {
              "pt": "Tipo de Antena Omni",
              "en": "Omni Antenna Type"
            },

            "omniqty": {
              "pt": "Número de Antenas Omni",
              "en": "No of Omni Antennas"
            },

            "tmaunit": {
              "pt": "Unidade TMA",
              "en": "TMA Unit"
            },

            "tmaqty": {
              "pt": "Quantidade de TMAs",
              "en": "No of TMAs"
            },

            "bsc": {
              "pt": "BSC",
              "en": "BSC"
            },

            "bscqty": {
              "pt": "Quantidade de BSCs",
              "en": "No of BSCs"
            },

            "trauqty": {
              "pt": "Quantidade de TRAU",
              "en": "No of TRAUs"
            },

            "repeater": {
              "pt": "Repetidor",
              "en": "Repeater"
            },

            "repeaterqty": {
              "pt": "Quantidade de Repetidores",
              "en": "No of Repeaters"
            },

            "transmissioncabinet": {
              "pt": "Gabinete de Transmissão",
              "en": "Transmission Cabinet"
            },

            "cabinetType": {
              "pt": "Tipo de Gabinete",
              "en": "Cabinet Type"
            },

            "transmissioncabinetinst": {
              "pt": "Gabinete de Transmissão Instalada",
              "en": "Transmission Cabinet Installed"
            },

            "transmissioncabinetdetails": {
              "pt": "Detalhes do Gabinete de Transmissão",
              "en": "Transmission Cabinet Details"
            },

            "transmissionserviceprov": {
              "pt": "Provedor de Serviço de Transmissão",
              "en": "Transmission Service Provider"
            },

            "transmissionserviceprov1": {
              "pt": "Provedor de Serviço",
              "en": "Service Provider"
            },

            "cabqty": {
              "pt": "Quantidade de Cabines",
              "en": "Cabinet Quantity"
            },

            "distributionrack": {
              "pt": "Rack de distribuição",
              "en": "Distribution Rack"
            },

            "distributionrackinstalled": {
              "pt": "Rack de distribuição Instalado",
              "en": "Distribution Rack Installed"
            },

            "inverters": {
              "pt": "Inversor",
              "en": "Inverters"
            },

            "invertertype": {
              "pt": "Tipo de Inversor",
              "en": "Inverter Type"
            },

            "varating": {
              "pt": "Classificação do VA do Inversor",
              "en": "Inverter VA Rating"
            },

            "inverterqty": {
              "pt": "Quantidade de Inversores",
              "en": "No of Inverters"
            },

            "inputdc": {
              "pt": "Entrada DC",
              "en": "Input DC"
            },

            "outputac": {
              "pt": "Saída AC",
              "en": "Output AC"
            },

            "redcontroller": {
              "pt": "Unidade de Controlador de Redundância",
              "en": "Redudancy Controller Unit"
            },

            "compressionunit": {
              "pt": "Tipo de Unidade de Compressão",
              "en": "Compression Controller Unit Type"
            },

            "compressionunitqty": {
              "pt": "Quantidade de Unidades de Compressão",
              "en": "No of Compression Controller Unit"
            },

            "installed": {
              "pt": "Instalada",
              "en": "Installed"
            },

            "description": {
              "pt": "Descrição",
              "en": "Description"
            },

            "height": {
              "pt": "Altura",
              "en": "Height"
            },
            
            "phase": {
              "pt": "Fase",
              "en": "Phase"
            },

            "transmissioncab": {
              "pt": "Gabinete de Transmissão",
              "en": "Transmission Cabinet"
            },

            "transmissioncabinst": {
              "pt": "Gabinete de Transmissão Instalado",
              "en": "Transmission Cabinet Installed"
            },

            "transmissioncabtype": {
              "pt": "Tipo de Gabinete de Transmissão",
              "en": "Transmission Cabinet Installed Type"
            },

            "transmissionprovider": {
              "pt": "Provedor de Serviço de Transmissão",
              "en": "Transmission Service Provider"
            },

            "serviceprovider": {
              "pt": "Provedor de Serviço",
              "en": "Service Provider"
            },

            "transmissioncabqty": {
              "pt": "Número de Gabinetes de Transmissão",
              "en": "Number of Transmission Cabinets Installed"
            },

            "gsmcabdetails":{
              "pt": "Detalhes do Gabinete GSM",
              "en": "GSM Cabinet Details"
            },

            "distributionrackdetails":{
              "pt": "Detalhes do Rack de Distribuição",
              "en": "Distribution Rack Details"
            },

            "adddistrack":{
              "pt": "Ad. Rack",
              "en": "Add Rack"
            },

            "updatedistrack":{
              "pt": "Actualizar. Rack",
              "en": "Update Rack"
            },

            "rectcabmodelnr": {
              "pt": "Número de Modelo",
              "en": "Model Number"
            },

            "sembuildinginfo":{
              "pt":"Sem informação de Edifício",
              "en":"No Building information"
            },

            "semmastinfo":{
              "pt":"Sem informação de Mastro",
              "en":"No Mast information"
            },

            "config":{
              "pt":"Configuração",
              "en":"Configuration"
            },

          "rectcabtype": {
              "pt": "Tipo",
              "en": "Type"
          },

          "rectcabinputtype": {
              "pt": "Tipo de Entrada",
              "en": "Input Type"
          },

          "rectcabnobatteries": {
              "pt": "Nr de Baterias",
              "en": "No of Batteries"
          },

          "rectcabbatterycapac": {
              "pt": "Capacidade da Bateria A/h",
              "en": "Battery A/h Capacity"
          },

          "detalhessecurity": {
              "pt": "Detalhes da Segurança",
              "en": "Security Details"
          },

          "secguardname": {
              "pt": "Nome do Guarda",
              "en": "Guard Name"
          },


          "secbinumber": {
              "pt": "Número de B.I.",
              "en": "B.I. Number"
          },

          "secvalue": {
              "pt": "Valor",
              "en": "Value"
          },

          "elecpayment": {
              "pt": "Pagamento da Electricidade",
              "en": "Electricity Payment"
          }
      },
      

      "inspdiaria_home": {
          "motorista": {
              "en": "Driver",
              "pt": "Motorista"
          },
          "matricula": {
              "en": "R.Number",
              "pt": "Matricula"
          },
          "data_hora": {
              "en": "Date Hour",
              "pt": "Data Horas"
          },

          "lista_diaria": {
              "en": "Daily Inspection list",
              "pt": "Lista de Inspeção Diaria"
          },
          "historico": {
              "en": "History",
              "pt": "Historico"
          },
           "lista_viaturas": {
              "en": "Vehicles list",
              "pt": "Lista de Viaturas"
          },
          "data_inspecao": {
              "en": "Inspection date",
              "pt": "Data de inspecção"
          },
          "tipo_accao": {
              "en": "Action type",
              "pt": "Tipo de acção"
          },
           "problemas": {
              "en": "Problems",
              "pt": "Problemas"
          },
          "razoes": {
              "en": "Give Reasons",
              "pt": "Definir as razões"
          },
          "lista_vazia": {
              "en": "Empty",
              "pt": "Vazio"
          },
      },
      "utilizador_home": {
          "nome": {
              "en": "Name",
              "pt": "Nome"
          },
          "area": {
              "en": "Workplace",
              "pt": "Provincia"
          },
          "data": {
              "en": "Record Date",
              "pt": "Data de registo"
          },

          "registadopor": {
              "en": "Registed by",
              "pt": "Registado por"
          },
          "lista_vazia": {
              "en": "Empty",
              "pt": "Vazio"
          },
          "lista": {
              "en": "User List",
              "pt": "Lista de Utilizadores"
          },
      },
      "transferencia_home": {
          "Marca_Matricula": {
              "en": "Make-R.Num",
              "pt": "Marca"
          },
          "de": {
              "en": "From",
              "pt": "De"
          },
          "para": {
              "en": "To",
              "pt": "Para"
          },

          "Data_Hora": {
              "en": "Date Hours",
              "pt": "Data Hora"
          },
          "lista_vazia": {
              "en": "Empty",
              "pt": "Vazio"
          },
          "lista": {
              "en": "Transference List",
              "pt": "Lista de Transferencia"
          },"service_vehicle": {
              "en": "Car Service Request",
              "pt": "Requisicao de Manuntenção"
          },
      },

      "inspdiaria_form": {
          "oleo": {
              "en": "Oil/Water",
              "pt": "Oleo/Agua"
          },

          "Vidro_Frontal": {
              "en": "Front Glass",
              "pt": "Vidro Frontal"
          },
          "Vidro_Traseiro": {
              "en": "Rear Glass",
              "pt": "Vidro Traseiro"
          },
          "Vidro_Lateral_esquerdo": {
              "en": "Left Glass",
              "pt": "Vidro Lateral esquerdo"
          },
          "Vidro_Lateral_direito": {
              "en": "Right Glass",
              "pt": "Vidro Lateral direito"
          },
          "Espelho_esquerdo": {
              "en": "Left Mirror",
              "pt": "Espelho esquerdo"
          },
          "Espelho_direito": {
              "en": "Right Mirror",
              "pt": "Espelho direito"
          },
          "Espelho_Interno": {
              "en": "Rearview Mirror",
              "pt": "Espelho Interno"
          },
          "Parachoque_Frontal": {
              "en": "Front Bumper",
              "pt": "Parachoque Frontal"
          },
          "Parachoque_Traseiro": {
              "en": "Rear Bumper",
              "pt": "Parachoque Traseiro"
          },
          "porta_esquerda": {
              "en": "Left Door",
              "pt": "Porta esquerda"
          },
          "Porta_direita": {
              "en": "Right Door",
              "pt": "Porta direita"
          },
          "capo": {
              "en": "Bonnet",
              "pt": "capo"
          },
          "canopy": {
              "en": "canopy",
              "pt": "canopy"
          },
          "grelha": {
              "en": "Grill",
              "pt": "grelha"
          },
          "Farol_frontal_esquerdo": {
              "en": "Left light",
              "pt": "Farol frontal esquerdo"
          },
          "Farol_frontal_direito": {
              "en": "Right Front light",
              "pt": "Farol frontal direito"
          },
          "Indicador frontal_esquerdo": {
              "en": "Front left indicator ",
              "pt": "Indicador frontal esquerdo"
          },
          "Indicador frontal_direito": {
              "en": "Front right indicator",
              "pt": "Indicador frontal direito"
          },
          "Indicador lateral esquerdo": {
              "en": "Left side indicator",
              "pt": "Indicador lateral esquerdo"
          },
          "Indicador lateral_direito": {
              "en": "Right side indicator",
              "pt": "Indicador lateral direito"
          },
          "Farol traseiro_esquerdo": {
              "en": "Rear left Lights",
              "pt": "Farol traseiro esquerdo"
          },
          "Farol traseiro_direito": {
              "en": "Rear Right Lights",
              "pt": "Farol traseiro direito"
          },
          "Oleo_de_travao": {
              "en": "Brake fluid",
              "pt": "Oleo de travao"
          },
          "Oleo_do_motor": {
              "en": "Engine oil",
              "pt": "Oleo do motor"
          },
          "Agua_do_radiador": {
              "en": "Radiator water ",
              "pt": "Agua do radiador"
          },
          "Agua_de_limpa_brisa": {
              "en": "Wiper water",
              "pt": "Agua de limpa-brisa"
          },
          "Refrigeração": {
              "en": "Cooling",
              "pt": "Refrigeração"
          },
          "Travão": {
              "en": "Brake",
              "pt": "Travão"
          },
          "Travão_de_estacionamento": {
              "en": "Parking brake",
              "pt": "Travão de estacionamento"
          },
          "Frontal": {
              "en": "Front",
              "pt": "Frontal"
          },
          "Traseira": {
              "en": "Rear",
              "pt": "Traseira"
          },
          "mensagem_de_erro": {
              "en": "Error message",
              "pt": "mensagem de erro"
          },

          "marca_modelo": {
              "en": "Make & Model",
              "pt": "Marca & Modelo"
          },
          "de": {
              "en": "From",
              "pt": "De"
          },
          "simm": {
              "en": "Yes",
              "pt": "Sim"
          },
          "naoo": {
              "en": "No",
              "pt": "Não"
          },
          "para": {
              "en": "To",
              "pt": "Para"
          },
          "dados_gerais": {
              "en": "Basic Information",
              "pt": "Dados Gerais"
          },
          "motorista": {
              "en": "Driver",
              "pt": "Motorista"
          },
          "matricula": {
              "en": "Registration Number",
              "pt": "Matricula"
          },
          "data_hora": {
              "en": "Date Hour",
              "pt": "Data Horas"
          },

          "lista_diaria": {
              "en": "Daily Inspection list",
              "pt": "Lista de Inspeção Diaria"
          },
          "kilometros": {
              "en": "kilometers",
              "pt": "kilometros"
          },
          "carrocaria": {
              "en": "Body",
              "pt": "Carroçaria"
          },
          "roda": {
              "en": "Wheels",
              "pt": "Rodas"
          },
          "pneus": {
              "en": "Tyre",
              "pt": "pneus"
          },
          "pressao": {
              "en": "Pressure",
              "pt": "pressao"
          },
          "porcas": {
              "en": "Nuts",
              "pt": "Porcas"
          },
          "vidros": {
              "en": "Glass/Mirror",
              "pt": "Vidros/Espelhos"
          },
          "limpa_parabrisa": {
              "en": "Wipers",
              "pt": "Limpa-parabrisas"
          },
          "luzes": {
              "en": "Lights",
              "pt": "Luzes"
          },
          "motor": {
              "en": "Engine",
              "pt": "Motor"
          },
          "oleo": {
              "en": "Oil/Water",
              "pt": "Oleo/Agua"
          },
          "travao": {
              "en": "Brake",
              "pt": "Travões"
          },
          "camera": {
              "en": "Camera",
              "pt": "Camera"
          },
          
            "cintoSeg": {
                "en": "Seat belt",
                "pt": "Cinto Segurança"
            },
          
            "secutr": {
                "en": "Safety",
                "pt": "Segurança"
            },
          
            "extintor": {
                "en": "Extinguisher",
                "pt": "Extintor"
            },
          
            "socorros": {
                "en": "First aid",
                "pt": "Pr. Socorros"
            },
          "maoslivres": {
              "en": "Handsfree",
              "pt": "Mãos-livre"
          },
          "selecionar": {
              "en": "Select the part(s)",
              "pt": "Selecione a(s) parte(s)"
          }
      },

      "utilizador_form": {

          "code": {
              "en": "Código",
              "pt": "Code"
          },

          "pettycashamount": {
              "en": "Valor Pettycash",
              "pt": "Pettycash Amount"
          },

          "gravar": {
              "en": "Save",
              "pt": "registar"
          },
          "enviar_po":{
            "en":"sent for Approval",
            "pt":"Enviar para aprovacao"

          },
          "cancelar": {
              "en": "Cancel",
              "pt": "Cancelar"
          },
          "dados_basicos": {
              "en": "Basic Information",
              "pt": "Dados Básicos"
          },
          "nome": {
              "en": "Name",
              "pt": "Nome"
          },
          "carta_conducao": {
              "en": "License Drive",
              "pt": "Carta de condução"
          },
          "data_nasc": {
              "en": "Birth Date",
              "pt": "Data de Nascimento"
          },
          "validade_carta": {
              "en": "License Validation",
              "pt": "Validade da carta"
          },
          "area": {
              "en": "Workplace",
              "pt": "Local de Trabalho"
          },
          "regiao": {
              "en": "Region",
              "pt": "Região"
          },
          "departamento": {
              "en": "Department",
              "pt": "Departamento"
          },

          "provincia": {
              "en": "Province",
              "pt": "Província"
          },
          "kilometros": {
              "en": "kilometers",
              "pt": "kilometros"
          },
          "supervisor": {
              "en": "Supervisor",
              "pt": "Supervisor"
          },
          "telefone_super": {
              "en": "Cellphone Supervisor",
              "pt": "Telefone do supervisor"
          },
          "funcao": {
              "en": "Function",
              "pt": "Função"
          },
          "veiculo": {
              "en": "Vehicle",
              "pt": "Viatura"
          },
          "matricula": {
              "en": "Reg. Number",
              "pt": "Matricula"
          },
          "marca": {
              "en": "Make",
              "pt": "Marca"
          },
          "modelo": {
              "en": "Model",
              "pt": "Modelo"
          },
          "ano": {
              "en": "Acquisition year",
              "pt": "Ano de aquisição"
          },
          "kilometros": {
              "en": "Kilometers",
              "pt": "Kilometragem"
          },
          "cantacto": {
              "en": "Contacts",
              "pt": "Contactos"
          },
          "telefone": {
              "en": "Cellphone Number",
              "pt": "Telefone"
          },
          "credenciais": {
              "en": "Credencials",
              "pt": "Credenciais"
          },
          "username": {
              "en": "Username",
              "pt": "Nome do Utilizador"
          },
          "nivel_acesso": {
              "en": "Access Level",
              "pt": "Nivel de Acesso"
          },
          "password": {
              "en": "Password",
              "pt": "Palavra passe"
          },
          "confirmacao": {
              "en": "Confirm Password",
              "pt": "Confirmar palavra passe"
          },
            "lista_depart": {
                "en": "Department list",
                "pt": "Lista de Departamentos"
            },
            "chefe_depart": {
                "en": "Responsible",
                "pt": "Responsavel"
            },
            "data_re_depart": {
                "en": "Date",
                "pt": "Data"
            },
            "lista_funcoes": {
                "en": "Function list",
                "pt": "Lista de funções"
            },
            "lista_modulos": {
                "en": "Modules list",
                "pt": "Lista de Modulos"
            },
            "modulo": {
                "en": "Module Name",
                "pt": "Nome do Modulo"
            },
            "modulp": {
                "en": "Modules",
                "pt": "Modulos"
            },
            "lista_provincias": {
                "en": "Province list",
                "pt": "Lista de provincias"
            },
            "lista_viaturasss": {
                "pt": "Marcas de Viatura",
                "en": "vehicle make"
            }
      },

      "pesquisar": {
          "en": "Search",
          "pt": "Pesquisar"
      },


      "form": {
          "nome": {
              "pt": "Zé dos Anzóis",
              "en": "John Doe",
              "es": "Fulano de Tal"
          },

          "registar": {
              "pt": "Enviar",
              "en": "Send"
          }
      },

      "site_home": {
          "seminfo": {
              "pt": "Sem informação da inspecção do site",
              "en": "No site inspection information"
          },

          "lista": {
              "pt": "Lista de Inspecção Site",
              "en": "Site Inspection List"
          },

          "doneby": {
              "pt": "Realizado por",
              "en": "Done by"
          },

          "numerosite": {
              "pt": "Número de site",
              "en": "Site number"
          },

          "dataplaneada": {
              "pt": "Data Planeada",
              "en": "Planned Date"
          },

          "oficial": {
              "pt": "Of. de Manut.",
              "en": "Maint. Of."
          },

          "estado": {
              "pt": "Estado",
              "en": "Status"
          }

      },

      "site_form": {

          "regiao": {
              "pt": "Região",
              "en": "Region"
          },

          "sitedetails": {
              "pt": "Detalhes do Site",
              "en": "Site Details"
          },

          "dados_gerais": {
              "pt": "Dados Gerais",
              "en": "General Details"
          },

          "dataplaneada": {
              "pt": "Data Planeada",
              "en": "Planned Date"
          },

          "data": {
              "pt": "Data",
              "en": "Date"
          },

          "checkedby": {
              "pt": "Verificado por",
              "en": "Checked by"
          },

          "empresa": {
              "pt": "Empresa",
              "en": "Company"
          },

          "oficial": {
              "pt": "Oficial de Manutenção",
              "en": "Maintenance Officer"
          },

          "location": {
              "pt": "Localização do Site",
              "en": "Site Location"
          },

          "numerosite": {
              "pt": "Número do Site",
              "en": "Site Number"
          },

          "nomesite": {
              "pt": "Nome do Site",
              "en": "Site Name"
          },

          "tiposite": {
              "pt": "Tipo de Site",
              "en": "Site Type"
          },

          "ttnumero": {
              "pt": "Número de TT",
              "en": "TT Number"
          }

      },

      "seguro_form": {
          "safety": {
              "pt": "Segurança",
              "en": "Safety"
          },

          "pergunta1": {
              "pt": "1. Certifique-se de que o veículo esteja seguro antes de começar o trabalho.",
              "en": "1.Ensure that the vehicle is safe and secure before commencing with work."
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta2": {
              "pt": "2. Assegure-se de que todo o pessoal esteja seguro antes de iniciar o trabalho.",
              "en": "2. Ensure that all personnel are safe before commencing with work."
          },

          "pergunta3": {
              "pt": "3. Use capacete no local.",
              "en": "3. Wear hard hat on site."
          },

          "pergunta4": {
              "pt": "4. Inspecione todos os dispositivos de detenção de queda, antes de usá-los.",
              "en": "4. Inspect all Fall-Arrest devices for safeness before using it."
          }
      },

      "site_options": {
          "infobasic": {
              "pt": "Informação Básica",
              "en": "Basic Information",
          },

          "safety": {
              "pt": "Segurança",
              "en": "Safety",
          },

          "extboar": {
              "pt": "Quad. de Dist. Ext.",
              "en": "Ext D. Board"
          },

          "container": {
              "pt": "Contentor",
              "en": "Container"
          },

          "arcond": {
              "pt": "Ar condicionado",
              "en": "Air conditioner"
          },

          "mast": {
              "pt": "Mastro",
              "en": "Mast"
          },

          "alarme": {
              "pt": "Alarme",
              "en": "Alarm"
          },

          "gerador": {
              "pt": "Gerador",
              "en": "Generator"
          },

          "telhado": {
              "pt": "Telhado",
              "en": "Roof Top"
          },

          "sitegeral": {
              "pt": "Site Geral",
              "en": "Site General"
          }
      },

      "edBoardOb_form": {
          "extdist": {
              "pt": "Quadro de Distribuição Externa",
              "en": "External Distribution Board"
          },

          "pergunta1": {
              "pt": "1. Verifique todas as conexões.",
              "en": "1. Check all connections."
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta2": {
              "pt": "2. Verifique o funcionamento de medidores de energia.",
              "en": "2.Check funtioning of energy meters."
          },

          "pergunta3": {
              "pt": "3. Verifique o funcionamento de todos os mecanismos de comutação.",
              "en": "3. Check operation of all switching mechanisms."
          },

          "pergunta4": {
              "pt": "4. Verifique todos os orifícios do quadro de distribuição e as mangas.",
              "en": "4.Check all holes on distribution board and sleeves."
          },

          "pergunta5": {
              "pt": "5. Verifique a luz do local e mude a operação.",
              "en": "5.Check site light and switch operation."
          },

          "pergunta6": {
              "pt": "6. Inspecione a pintura no quadro de distribuição e no poste da luz de fundo.",
              "en": "6. Inspect paintwork on DB and sitelight pole."
          },

          "pergunta7": {
              "pt": "7. Inspecione a caixa do medidor do fornecedor de AC e relate todos os defeitos.",
              "en": "7.Inspect AC Supplier meter box and report any defects."
          }
      },

      "container_form": {
          "container": {
              "pt": "Contentor",
              "en": "Container"
          },

          "pergunta1": {
              "pt": "1. Verifique a luz do container.",
              "en": "1. Check container ligh"
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta2": {
              "pt": "2. Verifique todos os disjuntores no quadro de distribuição interno se estiver com defeito.",
              "en": "2. Check all circuit breakers on internal DB if faulty."
          },

          "pergunta3": {
              "pt": "3. Verifique se todas as conexões terra contém pasta anti-corrosão.",
              "en": "3. Check if all earth connections with anti-corrosion paste."
          },

          "pergunta4": {
              "pt": "4. Verifique o estado das paredes, telhado, piso",
              "en": "4. Check condition of walls, roof, floor."
          },

          "pergunta5": {
              "pt": "5. Verifique o telhado para entrada de água.",
              "en": "5. Check roof for water ingress."
          },

          "pergunta6": {
              "pt": "6. Verifique a pintura.",
              "en": "6. Check paintwork."
          },

          "pergunta7": {
              "pt": "7. Verifique todas as juntas, furos e entradas de cabos.",
              "en": "7. Check all joints,holes and cable entries"
          },

          "pergunta8": {
              "pt": "8. Verifique a instalação de equipamentos de transmissão e rádio",
              "en": "8. Check transmission and radio equipment instalation."
          }
      },

    
    "escolhermanuntencao_form": {
      "disclosure": {
          "pt": "Manutenção",
          "en": "Maintenance"
        },

       "pergunta1": {
          "pt": " Folha de manutenção periódica.",
          "en": " Periodic Maintenance Sheet."
       }
      },

        "airCon_form": {
        "arcond": {
            "pt": "Unidades de Expansão  Directa(Splits, Compactas e Centrais)",
            "en": "Direct Expansion Units (Splits, Compacts and Centrals)"
        },
        "disclosure": {
          "pt": "Manuntencao Periodica",
          "en": "Periodic Maintenance"
        },
        "medicoes": {
          "pt": "Medições / periodicidade trimestral",
          "en": "Measurements/Quarterly periodicity"
        },
        "tempExterior": {
          "pt": "15.Temperatura Exterior",
          "en": "15.Outdoor temperature"
      },
        "tempInterior": {
          "pt": "16.Temperatura Interior",
          "en": "16.Indoor temperature"
      },
        "tempEntradaCondesador": {
          "pt": "17.Temperatura na Entrada do Condesador",
          "en": "17.Condenser Inlet Temperature"
        },

        "tempCondesador": {
            "pt": "18.Temperatura de Condesador",
            "en": "18.Condenser Temperature"
        },
        "tempEntradaEvaporador": {
            "pt": "19.Temperatura de Entrada no Evaporador",
            "en": "19.Evaporator Entry Temperature"
        },
        
        "tempDescargaEvaporador": {
          "pt": "20.Temperatura de Descarga no Evaporador",
          "en": "20.Evaporator Discharge Temperature"
       },
        "gasBaixa": {
          "pt": "21.Gás-de Baixa Pressão",
          "en": "21.Low Pressure Gas"
        },

        "gasAlta": {
            "pt": "22.Gás-de Alta Pressão",
            "en": "22.High Pressure Gas"
        },
        
        "consumoAMP": {
          "pt": "23.Consumo Monofásico AMP",
          "en": "23.Single-phase AMP consumption"
       },
        "ConsumoTrifasico": {
          "pt": "24.Consumo trifásico AMP-R",
          "en": "24.Three-phase AMP Consumption"
        },
                "ConsumoTrifasicoS": {
          "pt": "25.Consumo trifásico AMP-S",
          "en": "25.Three-phase AMP Consumption"
        },
                "ConsumoTrifasicoT": {
          "pt": "26.Consumo trifásico AMP-T",
          "en": "26.Three-phase AMP Consumption"
        },

        "voltagem": {
            "pt": "Voltagem",
            "en": "Voltage"
        },
        "detalhes": {
            "pt": "Detalhes",
            "en": "Details"
        },
        "pergunta1": {
            "pt": "1. Limpeza de Filtros de Ar.",
            "en": "1. Air Filter Cleaning."
        },

        "comentarios": {
            "pt": "Comentários",
            "en": "Comments"
        },

        "imagem": {
            "pt": "Carregar imagem",
            "en": "Load picture"
        },

        "pergunta2": {
            "pt": "2. Limpeza Externa do Condensador.",
            "en": "2. External Condenser Cleaning."
        },

        "pergunta3": {
            "pt": "3. Limpeza Externa do Evaporador.",
            "en": "3. External Cleaning of the Evaporator."
        },

        "pergunta4": {
            "pt": "4. Limpeza do permutador do Evaporador.",
            "en": "4. Cleaning the Evaporator Exchanger."
        },

        "pergunta5": {
            "pt": "5. Limpeza do permutador do condensador .",
            "en": "5. Cleaning the Condenser Exchanger."
        },
        "pergunta6": {
          "pt": "6. Verificar Funcionamento de Motor e Deflectores.",
          "en": "6. Check Engine and Deflector Operation."
        },
        "pergunta7": {
          "pt": "7. Verificar Drenagem e Limpeza do Tabuleiro de Condensados",
          "en": "7. Check Condensate Tray Drainage and Cleaning."
       },
          "pergunta8": {
            "pt": "8. Verificação de Fugas no Sistema Frigorífico.",
            "en": "8. Checking for Leaks in the Refrigerator System."
          },
          "pergunta9": {
            "pt": "9. Reapertos Mecanicos, Electricos e Fixação.",
            "en": "9. Mechanical, Electrical and Fixation Retightening."
        },
        "pergunta10": {
          "pt": "10. Verificação Estado dos Isolamentos.",
          "en": "10. Insulation Status Check."
        },
        "pergunta11": {
          "pt": "11. Verificar Ruídos e Vibrações Anormais.",
          "en": "11. Check for Abnormal Noise and Vibration."
        },
        "pergunta12": {
          "pt": "12. Verificação  do Estado dos Filtros Secadores.",
          "en": "12. Checking the Status of Drying Filters."
        },
        "pergunta13": {
          "pt": "13. Limpeza dos Ventiladores e Sentido do Ar.",
          "en": "13. Cleaning of Fans and Air Direction."
        },
        "pergunta14": {
          "pt": "14. Verificar Acesso de Ar ao Condensador.",
          "en": "14. Check Condenser Air Access."
        }
    },


      "gerador_form": {
          "gerador": {
              "pt": "Gerador",
              "en": "Generator"
          },
          "medicoes": {
            "pt": "Médicos / Periodicidade Mensal",
            "en": "Doctors / Monthly Frequency"
          },
          "disclosure": {
            "pt": "Prioridade Mensal",
            "en": "Monthly Priority"
        },
        "detalhes": {
          "pt": " Meditações  ",
          "en": "Measurements"
        },
        "observacoes": {
          "pt": " Comentários  ",
          "en": "Comments"
        },
          "horaFuncionamento": {
            "pt": "15.Horas de Funcionamento",
            "en": "15.Hours of Operation"
          },
          "tempoAtraso": {
            "pt": "16.Tempo de Atraso no Arranque",
            "en": "16.Start Delay Time"
          },
          "amperagem": {
            "pt": "17.Amperagem",
            "en": "17.Amperage"
          },
          "voltagem": {
            "pt": "18.Voltagem",
            "en": "18.Voltage"
          },
          "frequencia": {
            "pt": "19.Frequência",
            "en": "19.Frequency"
          },
          "prm": {
            "pt": "20.PRM",
            "en": "20.PRM"
          },
        "nationality": {
            "pt": "Nacionalidade",
            "en": "Nationality"
        },

        "voltagemBateria": {
            "pt": "21.Voltagem da Bateria",
            "en": "21.Battery Voltage"
        },

        "tempCoolante": {
            "pt": "22.Temperatura do Coolante",
            "en": "22.Coolant Temperature"
        },

        "tempOleo": {
            "pt": "23.Temperatura do Oleo",
            "en": "23.Oil temperature"
        },

        "pressaoOleo": {
            "pt": "24.Pressão do óleo",
            "en": "24.Oil Pressure "
        },
          "generatorhour": {
              "pt": "Horas actuais do gerador",
              "en": "Generator Current Hours"
          },

          "generatorfuellevel": {
              "pt": "Nível de combustível do gerador",
              "en": "Generator Fuel Level"
          },

     "pergunta1": {
            "pt": "1. Filtro de Ar.",
            "en": "1. Air Filter."
        },

        "comentarios": {
            "pt": "Comentários",
            "en": "Comments"
        },

        "imagem": {
            "pt": "Carregar imagem",
            "en": "Load picture"
        },

        "pergunta2": {
            "pt": "2. Filtro de Oleo.",
            "en": "2. Oil Filter."
        },

        "pergunta3": {
            "pt": "3. Filtro de Diesel.",
            "en": "3. Diesel Filter."
        },

        "pergunta4": {
            "pt": "4. Elemento refrigerante.",
            "en": "4. Element Coolant."
        },

        "pergunta5": {
            "pt": "5. Oleo.",
            "en": "5. Oil."
        },
        "pergunta6": {
          "pt": "6. Verificar Nivel de Oleo.",
          "en": "6. Check Oil Level."
        },
        "pergunta7": {
          "pt": "7. Verificar Nivel de Coolant",
          "en": "7. Check Coolant Level."
       },
          "pergunta8": {
            "pt": "8. Verificar Nivel de Agua nas Baterias.",
            "en": "8. Check the Water Level in the Batteries."
          },
          "pergunta9": {
            "pt": "9. Limpeza Geral do Gerador.",
            "en": "9. General Generator Cleaning."
        },
        "pergunta10": {
          "pt": "10. Lubrificação .",
          "en": "10. Lubrication."
        },
        "pergunta11": {
          "pt": "11. Verificar da Exstencia de Fugas.",
          "en": "11. Check for the Extent of Leaks."
        },
        "pergunta12": {
          "pt": "12. Verificar Nivel de Diesel.",
          "en": "12. Check Diesel Level."
        },
        "pergunta13": {
          "pt": "13. Verificar Ruidos Anormais.",
          "en": "13. Check for Abnormal Noises."
        },
        "pergunta14": {
          "pt": "14. Efectuar Teste de Funcionamento.",
          "en": "14. Perform Function Test."
        }
      },


      "airCond_form": {
          "arcond": {
              "pt": "Ar condicionado",
              "en": "Air conditioner"
          },

          "pergunta1": {
              "pt": "1. Verifique as pás do ventilador.",
              "en": "1. Check fan blades."
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta2": {
              "pt": "2. Verifique se há algum ruído ou vibração anormal.",
              "en": "2. Check for any abnormal noise or vibration."
          },

          "pergunta3": {
              "pt": "3. Verifique todas as linhas de refrigerante.",
              "en": "3. Check all refrigerant lines."
          },

          "pergunta4": {
              "pt": "4. Certifique-se de que o revestimento esteja devidamente vedado.",
              "en": "4. Ensure casing is properly sealed."
          },

          "pergunta5": {
              "pt": "5. Verifique se há ferrugem no ar condicionado.",
              "en": "5. Check for any rust on air conditioner."
          }
      },

      "mast_form": {
          "mastro": {
              "pt": "Mastro",
              "en": "Mast"
          },

          "pergunta1": {
              "pt": "1. Verifique o funcionamento da luz A / W.",
              "en": "1. Check A/W light functioning."
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta2": {
              "pt": "2. Certifique-se de que o quadro de distribuição de luz A / W e a conexão estejam seguras no mastro.",
              "en": "2. Ensure A/W light DB and fitting is secure on mast."
          },

          "pergunta3": {
              "pt": "3. Verifique e inspecione a torre.",
              "en": "3. Check and inspect tower."
          },

          "pergunta4": {
              "pt": "4. Inspeção visual da transmissão e instalação de rádio.",
              "en": "4. Check the paint on the tower."
          },

          "pergunta5": {
              "pt": "5. Inspeção visual da transmissão e instalação de rádio.",
              "en": "5.Visual inspection of transmission and radio installation."
          },

          "pergunta6": {
              "pt": "6. Especificação da torre.",
              "en": "6. Tower Specification."
          }
      },

      "alarm_form": {
          "alarme": {
              "pt": "Alarme",
              "en": "Alarm"
          },

          "pergunta1": {
              "pt": "1. Alarme de intrusão",
              "en": "1. Intruder alarm"
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta2": {
              "pt": "2. Alarme de movimento",
              "en": "2. Movement alarm"
          },

          "pergunta3": {
              "pt": "3. Alarme de alta temperatura",
              "en": "3. High temp alarm"
          },

          "pergunta4": {
              "pt": "4. Alarme do sistema de retificador",
              "en": "4. Rectifier system alarm"
          },

          "pergunta5": {
              "pt": "5. Alarme do módulo retificador",
              "en": "5. Rectifier module alarm"
          },

          "pergunta6": {
              "pt": "6. Alarme do arcond 1",
              "en": "6. Aircon 1 alarm"
          },

          "pergunta7": {
              "pt": "7. Alarme do arcond 2",
              "en": "7. Aircon 2 alarm"
          },

          "pergunta8": {
              "pt": "8. Alarme de combustível baixo gerador",
              "en": "8. Generator low fuel alarm"
          },

          "pergunta9": {
              "pt": "9. Alarme anormal do gerador",
              "en": "9. Generator abnormal alarm"
          },

          "pergunta10": {
              "pt": "10. Alarme de aviso de aeronave",
              "en": "10. Aircraft warning alarm"
          },

          "pergunta11": {
              "pt": "11. Alarme de fumo",
              "en": "11. Smoke alarm"
          },

          "pergunta12": {
              "pt": "12. Alarme de falha de rede do ar condicionado",
              "en": "12. AC mains failure alarm"
          },

          "pergunta13": {
              "pt": "13. Alarme de bateria baixa",
              "en": "13. Battery low alarm"
          },

          "pergunta14": {
              "pt": "14. Alarme de funcionamento do gerador",
              "en": "14. Generator running alarm"
          }
      },

      "generator_form": {
          "gerador": {
              "pt": "Gerador",
              "en": "Generator"
          },

          "generatorhour": {
              "pt": "Horas actuais do gerador",
              "en": "Generator Current Hours"
          },

          "generatorfuellevel": {
              "pt": "Nível de combustível do gerador",
              "en": "Generator Fuel Level"
          },

          "pergunta1": {
              "pt": "1. Nível de óleo do motor",
              "en": "1. Engine oil level"
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta2": {
              "pt": "2. Vazamento de óleo",
              "en": "2. Oil leaks"
          },

          "pergunta3": {
              "pt": "3. Mangueiras do radiador (flexíveis, livre de vazamentos)",
              "en": "3. Radiator hoses (flexible, leak- free)"
          },

          "pergunta4": {
              "pt": "4. Verifique o filtro de ar",
              "en": "4.Check air filter"
          },

          "pergunta5": {
              "pt": "5. Vazamentos do refrigerador",
              "en": "5. Coolant leaks"
          },

          "pergunta6": {
              "pt": "6. Inspeccione visualmente a condição da correia trapezoidal",
              "en": "6.Visually inspect V-belt condition"
          },

          "pergunta7": {
              "pt": "7. Vazamentos de combustível",
              "en": "7. Fuel leaks"
          },

          "pergunta8": {
              "pt": "8. Verifique visualmente o nível de electrólito da bateria, conexões e condição física",
              "en": "8. Visually check battery electrolyte level, connections and physical condition"
          },

          "pergunta9": {
              "pt": "9. Verifique os interruptores do selector e estado do disjuntor correcto",
              "en": "9. Check Selector switches and breaker status correct"
          },

          "pergunta10": {
              "pt": "10. Verifique o estado do painel de controle e registrar os alarmes activos",
              "en": "10. Check status of control panel and record active alarms"
          },

          "pergunta11": {
              "pt": "11. Verifique se há vibrações anormais",
              "en": "11. Check for abnormal vibrations"
          },

          "pergunta12": {
              "pt": "12. Verifique se há ferrugem",
              "en": "12. Check for rust"
          },

          "pergunta13": {
              "pt": "13. Verifique todas as montagens e suportes do gerador",
              "en": "13. Check all mountings and generator brackets"
          },

          "pergunta14": {
              "pt": "14. Verifique a condição geral / condição do dossel",
              "en": "14. Check overall condition / Canopy condition"
          }
      },

      "roofTop_form": {
          "rooftop": {
              "pt": "Telhado",
              "en": "Roof Top"
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta1": {
              "pt": "1. Verifique os pólos de montagem, se estão instalados correctamente",
              "en": "1. Check the mounting poles if properly installed"
          },

          "pergunta2": {
              "pt": "2. Verifique se os pólos não tem corrosão",
              "en": "2. Check the poles if no corrosions "
          },

          "pergunta3": {
              "pt": "3. Verifique se os pólos estão aterrados",
              "en": "3. Check the poles if earthed"
          },

          "pergunta4": {
              "pt": "4. Verifique se os armários (de TX e baterias) possuem qualquer dano ou corrosão",
              "en": "4. Check the cabinets ( of TX and baterries ) for any damage or corosion"
          },

          "pergunta5": {
              "pt": "5. Verifique a instalação de equipamentos de transmissão e rádio",
              "en": "5.Check transmission and radio equipment instalation"
          }
      },

      "site_general_form": {
          "sitegeral": {
              "pt": "Site Geral",
              "en": "Site General"
          },

          "comentarios": {
              "pt": "Comentários",
              "en": "Comments"
          },

          "imagem": {
              "pt": "Carregar imagem",
              "en": "Load picture"
          },

          "pergunta1": {
              "pt": "1. Verifique a cerca, portões, fechaduras e dobradiças.",
              "en": "1. Check the fence, gates, locks and hinges."
          },

          "pergunta2": {
              "pt": "2. Assegure-se de que toda a sinalização esteja em ordem.",
              "en": "2. Ensure all signage is in order."
          },

          "pergunta3": {
              "pt": "3. Verifique todos os danos causados pela água ao terreno.",
              "en": "3. Check all water damage to terrain."
          },

          "pergunta4": {
              "pt": "4. Verifique o nível de pedra esmagada dentro do site.",
              "en": "4.Level crushed stone inside site."
          },

          "pergunta5": {
              "pt": "5. Certifique-se de que a área do site esteja limpa.",
              "en": "5. Ensure the site area is clean."
          },

          "pergunta6": {
              "pt": "6. Verifique todas ervas daninhas e grama de cerca de 2.5m ao redor do local.",
              "en": "6. Check all weeds and grass 2.5m arount site fence."
          },

          "pergunta7": {
              "pt": "7. Verifique e relate qaisquer defeitos na estrada de acesso.",
              "en": "7. Check and report any defects on access road."
          },

          "pergunta8": {
              "pt": "8. Verifique se há lixo no fio da navalha.",
              "en": "8. Check for rubish from razor wire."
          }
      },
      "estatistica": {
          "inspanual": {
              "pt": "Inspecção Anual",
              "en": "Annual Inspection"
          },
          "inspmensal": {
              "pt": "Inspecção Mensal",
              "en": "Monthly Inspection"
          },
          "inspregional": {
              "pt": "Inspecção Regional",
              "en": "Regional Inspection"
          },
          "insptecnicos": {
              "pt": "Inspecção dos técnicos",
              "en": "Technician Inspection"
          }
      }
  }
};

(function () {
this.I18n = function (defaultLang) {
  // var lang = defaultLang || 'pt';
  var lang =$(".lang-picker").attr("value");
  this.language = lang;

  (function (i18n) {
    i18n.contents = demoJson;
    i18n.contents.prop = function (key) {
      var result = this;
      var keyArr = key.split('.');
      for (var index = 0; index < keyArr.length; index++) {
        var prop = keyArr[index];
        result = result[prop];
      }
      return result;
    };
    i18n.localize();
  })(this);
};

this.I18n.prototype.hasCachedContents = function () {
  return this.contents !== undefined;
};

this.I18n.prototype.lang = function (lang) {
  if (typeof lang === 'string') {
    this.language = lang;
  }
  this.localize();
  return this.language;
};

this.I18n.prototype.localize = function () {
  var contents = this.contents;
  if (!this.hasCachedContents()) {
    return;
  }
  var dfs = function (node, keys, results) {
    var isLeaf = function (node) {
      for (var prop in node) {
        if (node.hasOwnProperty(prop)) {
          if (typeof node[prop] === 'string') {
            return true;
          }
        }
      }
    }
    for (var prop in node) {
      if (node.hasOwnProperty(prop) && typeof node[prop] === 'object') {
        var myKey = keys.slice();
        myKey.push(prop);
        if (isLeaf(node[prop])) {
          //results.push(myKey.reduce((prev, current) => prev + '.' + current));	//not supported in older mobile broweser
          results.push(myKey.reduce( function (previousValue, currentValue, currentIndex, array) {
            return previousValue + '.' + currentValue;
          }));
        } else {
          dfs(node[prop], myKey, results);
        }
      }
    }
    return results;
  };
  var keys = dfs(contents, [], []);
  for (var index = 0; index < keys.length; index++) {
    var key = keys[index];
    if (contents.prop(key).hasOwnProperty(this.language)) {
      $('[data-i18n="'+key+'"]').text(contents.prop(key)[this.language]);
      $('[data-i18n-placeholder="'+key+'"]').attr('placeholder', contents.prop(key)[this.language]);
      $('[data-i18n-value="'+key+'"]').attr('value', contents.prop(key)[this.language]);
    } else {
      $('[data-i18n="'+key+'"]').text(contents.prop(key)['en']);
      $('[data-i18n-placeholder="'+key+'"]').attr('placeholder', contents.prop(key)['en']);
      $('[data-i18n-value="'+key+'"]').attr('value', contents.prop(key)['en']);
    }
  }
};

}).apply(window);

// **************************************************seccao de adicionar itens ******************************************************

document.addEventListener('keydown', function(event) {
if( event.keyCode == 17 ) //|| event.keyCode == 74 )
  event.preventDefault();
});

// $(window).load(function(){
//   $('#loading').fadeIn().delay(7000).fadeOut();
// })


// $('#lembrete').datepicker({
//         autoClose : true,
//         format : 'dd mmm yyyy',
//         yearRange : 1,
//         minDate : new Date(),
//       }); $('#loading').fadeIn().delay(7000).fadeOut();


function insercao_serialNumber(nome_item , numero){
$('#yes_no_title_modal_return_stock').html((($(".lang-picker").attr("value")=="pt")?'Numero de Serie':'Serial Number'))
$('#yes_no_content_modal_return_stock').html('<div class="input-field col s12"> <input id="SSnumber" type="text" autocomplete="off"><label for="stock_return">SN '+nome_item +' number '+(numero)+'</label></div>')
$('#yes_no_modal_return_stock').openModal({dismissible:false});
$('#yes_btn_modal_return_stock').click(function(e){
  e.stopPropagation();
  e.stopImmediatePropagation();
  return ($("#SSnumber").val());
})

}


// *********************************************************counter******************************************************************************


var module,
  countdown = (function (r) {
      function v(a, b) {
          var c = a.getTime();
          a.setUTCMonth(a.getUTCMonth() + b);
          return Math.round((a.getTime() - c) / 864e5);
      }
      function t(a) {
          var b = a.getTime(),
              c = new Date(b);
          c.setUTCMonth(a.getUTCMonth() + 1);
          return Math.round((c.getTime() - b) / 864e5);
      }
      function f(a, b) {
          return a + " " + (1 === a ? p[b] : q[b]);
      }
      function n() {}
      function l(a, b, c, g, x, d) {
          0 <= a[c] && ((b += a[c]), delete a[c]);
          b /= x;
          if (1 >= b + 1) return 0;
          if (0 <= a[g]) {
              a[g] = +(a[g] + b).toFixed(d);
              switch (g) {
                  case "seconds":
                      if (60 !== a.seconds || isNaN(a.minutes)) break;
                      a.minutes++;
                      a.seconds = 0;
                  case "minutes":
                      if (60 !== a.minutes || isNaN(a.hours)) break;
                      a.hours++;
                      a.minutes = 0;
                  case "hours":
                      if (24 !== a.hours || isNaN(a.days)) break;
                      a.days++;
                      a.hours = 0;
                  case "days":
                      if (7 !== a.days || isNaN(a.weeks)) break;
                      a.weeks++;
                      a.days = 0;
                  case "weeks":
                      if (a.weeks !== t(a.refMonth) / 7 || isNaN(a.months)) break;
                      a.months++;
                      a.weeks = 0;
                  case "months":
                      if (12 !== a.months || isNaN(a.years)) break;
                      a.years++;
                      a.months = 0;
                  case "years":
                      if (10 !== a.years || isNaN(a.decades)) break;
                      a.decades++;
                      a.years = 0;
                  case "decades":
                      if (10 !== a.decades || isNaN(a.centuries)) break;
                      a.centuries++;
                      a.decades = 0;
                  case "centuries":
                      if (10 !== a.centuries || isNaN(a.millennia)) break;
                      a.millennia++;
                      a.centuries = 0;
              }
              return 0;
          }
          return b;
      }
      function w(a, b, c, g, d, k) {
          a.start = b;
          a.end = c;
          a.units = g;
          a.value = c.getTime() - b.getTime();
          if (0 > a.value) {
              var f = c;
              c = b;
              b = f;
          }
          a.refMonth = new Date(b.getFullYear(), b.getMonth(), 15);
          try {
              a.millennia = 0;
              a.centuries = 0;
              a.decades = 0;
              a.years = c.getUTCFullYear() - b.getUTCFullYear();
              a.months = c.getUTCMonth() - b.getUTCMonth();
              a.weeks = 0;
              a.days = c.getUTCDate() - b.getUTCDate();
              a.hours = c.getUTCHours() - b.getUTCHours();
              a.minutes = c.getUTCMinutes() - b.getUTCMinutes();
              a.seconds = c.getUTCSeconds() - b.getUTCSeconds();
              a.milliseconds = c.getUTCMilliseconds() - b.getUTCMilliseconds();
              var h;
              0 > a.milliseconds ? ((h = s(-a.milliseconds / 1e3)), (a.seconds -= h), (a.milliseconds += 1e3 * h)) : 1e3 <= a.milliseconds && ((a.seconds += m(a.milliseconds / 1e3)), (a.milliseconds %= 1e3));
              0 > a.seconds ? ((h = s(-a.seconds / 60)), (a.minutes -= h), (a.seconds += 60 * h)) : 60 <= a.seconds && ((a.minutes += m(a.seconds / 60)), (a.seconds %= 60));
              0 > a.minutes ? ((h = s(-a.minutes / 60)), (a.hours -= h), (a.minutes += 60 * h)) : 60 <= a.minutes && ((a.hours += m(a.minutes / 60)), (a.minutes %= 60));
              0 > a.hours ? ((h = s(-a.hours / 24)), (a.days -= h), (a.hours += 24 * h)) : 24 <= a.hours && ((a.days += m(a.hours / 24)), (a.hours %= 24));
              for (; 0 > a.days; ) a.months--, (a.days += v(a.refMonth, 1));
              7 <= a.days && ((a.weeks += m(a.days / 7)), (a.days %= 7));
              0 > a.months ? ((h = s(-a.months / 12)), (a.years -= h), (a.months += 12 * h)) : 12 <= a.months && ((a.years += m(a.months / 12)), (a.months %= 12));
              10 <= a.years &&
                  ((a.decades += m(a.years / 10)), (a.years %= 10), 10 <= a.decades && ((a.centuries += m(a.decades / 10)), (a.decades %= 10), 10 <= a.centuries && ((a.millennia += m(a.centuries / 10)), (a.centuries %= 10))));
              b = 0;
              !(g & 1024) || b >= d ? ((a.centuries += 10 * a.millennia), delete a.millennia) : a.millennia && b++;
              !(g & 512) || b >= d ? ((a.decades += 10 * a.centuries), delete a.centuries) : a.centuries && b++;
              !(g & 256) || b >= d ? ((a.years += 10 * a.decades), delete a.decades) : a.decades && b++;
              !(g & 128) || b >= d ? ((a.months += 12 * a.years), delete a.years) : a.years && b++;
              !(g & 64) || b >= d ? (a.months && (a.days += v(a.refMonth, a.months)), delete a.months, 7 <= a.days && ((a.weeks += m(a.days / 7)), (a.days %= 7))) : a.months && b++;
              !(g & 32) || b >= d ? ((a.days += 7 * a.weeks), delete a.weeks) : a.weeks && b++;
              !(g & 16) || b >= d ? ((a.hours += 24 * a.days), delete a.days) : a.days && b++;
              !(g & 8) || b >= d ? ((a.minutes += 60 * a.hours), delete a.hours) : a.hours && b++;
              !(g & 4) || b >= d ? ((a.seconds += 60 * a.minutes), delete a.minutes) : a.minutes && b++;
              !(g & 2) || b >= d ? ((a.milliseconds += 1e3 * a.seconds), delete a.seconds) : a.seconds && b++;
              if (!(g & 1) || b >= d) {
                  var e = l(a, 0, "milliseconds", "seconds", 1e3, k);
                  if (
                      e &&
                      (e = l(a, e, "seconds", "minutes", 60, k)) &&
                      (e = l(a, e, "minutes", "hours", 60, k)) &&
                      (e = l(a, e, "hours", "days", 24, k)) &&
                      (e = l(a, e, "days", "weeks", 7, k)) &&
                      (e = l(a, e, "weeks", "months", t(a.refMonth) / 7, k))
                  ) {
                      g = e;
                      var n,
                          p = a.refMonth,
                          q = p.getTime(),
                          r = new Date(q);
                      r.setUTCFullYear(p.getUTCFullYear() + 1);
                      n = Math.round((r.getTime() - q) / 864e5);
                      if ((e = l(a, g, "months", "years", n / t(a.refMonth), k)))
                          if ((e = l(a, e, "years", "decades", 10, k))) if ((e = l(a, e, "decades", "centuries", 10, k))) if ((e = l(a, e, "centuries", "millennia", 10, k))) throw Error("Fractional unit overflow");
                  }
              }
          } finally {
              delete a.refMonth;
          }
          return a;
      }
      function d(a, b, c, d, f) {
          var k;
          c = +c || 222;
          d = 0 < d ? d : NaN;
          f = 0 < f ? (20 > f ? Math.round(f) : 20) : 0;
          "function" === typeof a ? ((k = a), (a = null)) : a instanceof Date || (a = null !== a && isFinite(a) ? new Date(a) : null);
          "function" === typeof b ? ((k = b), (b = null)) : b instanceof Date || (b = null !== b && isFinite(b) ? new Date(b) : null);
          if (!a && !b) return new n();
          if (!k) return w(new n(), a || new Date(), b || new Date(), c, d, f);
          var l = c & 1 ? 1e3 / 30 : c & 2 ? 1e3 : c & 4 ? 6e4 : c & 8 ? 36e5 : c & 16 ? 864e5 : 6048e5,
              h,
              e = function () {
                  k(w(new n(), a || new Date(), b || new Date(), c, d, f), h);
              };
          e();
          return (h = setInterval(e, l));
      }
      var s = Math.ceil,
          m = Math.floor,
          p,
          q,
          u;
      n.prototype.toString = function () {
          var a = u(this),
              b = a.length;
          if (!b) return "";
          1 < b && (a[b - 1] = "and " + a[b - 1]);
          return a.join(", ");
      };
      n.prototype.toHTML = function (a) {
          a = a || "span";
          var b = u(this),
              c = b.length;
          if (!c) return "";
          for (var d = 0; d < c; d++) b[d] = "\x3c" + a + "\x3e" + b[d] + "\x3c/" + a + "\x3e";
          --c && (b[c] = "and " + b[c]);
          return b.join(", ");
      };
      u = function (a) {
          var b = [],
              c = a.millennia;
          c && b.push(f(c, 10));
          (c = a.centuries) && b.push(f(c, 9));
          (c = a.decades) && b.push(f(c, 8));
          (c = a.years) && b.push(f(c, 7));
          (c = a.months) && b.push(f(c, 6));
          (c = a.weeks) && b.push(f(c, 5));
          (c = a.days) && b.push(f(c, 4));
          (c = a.hours) && b.push(f(c, 3));
          (c = a.minutes) && b.push(f(c, 2));
          (c = a.seconds) && b.push(f(c, 1));
          (c = a.milliseconds) && b.push(f(c, 0));
          return b;
      };
      d.MILLISECONDS = 1;
      d.SECONDS = 2;
      d.MINUTES = 4;
      d.HOURS = 8;
      d.DAYS = 16;
      d.WEEKS = 32;
      d.MONTHS = 64;
      d.YEARS = 128;
      d.DECADES = 256;
      d.CENTURIES = 512;
      d.MILLENNIA = 1024;
      d.DEFAULTS = 222;
      d.ALL = 2047;
      d.setLabels = function (a, b) {
          a = a || [];
          a.split && (a = a.split("|"));
          b = b || [];
          b.split && (b = b.split("|"));
          for (var c = 0; 10 >= c; c++) (p[c] = a[c] || p[c]), (q[c] = b[c] || q[c]);
      };
      (d.resetLabels = function () {
          p = "millisecond second minute hour day week month year decade century millennium".split(" ");
          q = "milliseconds seconds minutes hours days weeks months years decades centuries millennia".split(" ");
      })();
      r && r.exports
          ? (r.exports = d)
          : "function" === typeof window.define &&
            window.define.amd &&
            window.define("countdown", [], function () {
                return d;
            });
      return d;
  })(module);


setInterval(function() {
var insidente=$(".lang-picker").attr("incident");

var timespan = countdown(new Date(insidente), null, -2018);
var t = $('#time');
//   var theTime = document.getElementById('time');

t.html(function(){
  return "<img src='/img/Work_Safe.jpg',  class='center safetyy hide-on-small-only mkahapana'> <span style='font-size:2em !important; color:red; -webkit-text-stroke-color:red; -webkit-text-stroke-width: 1px;'><br>"+timespan.days + "</span> <span>"+($(".lang-picker").attr("value")=="pt"?'dias,':"days,")+ "</span> " + (timespan.hours<10? ("0"+timespan.hours):timespan.hours) + " <span>hrs, </span> " + (timespan.minutes<10? ("0"+timespan.minutes):timespan.minutes) + " <span>min, </span> " + (timespan.seconds<10? ("0"+timespan.seconds):timespan.seconds) + " <span>sec</span><br>"+ ($(".lang-picker").attr("value")=="pt"?' Sem Incidente!':" Without Incident!")+"<img src='/img/Work_Safe.jpg',  class='center safetyy hide-on-med-and-up mkahapana'>";
})

}, 1000);



      function getAPIdata1(entradda) {
          const proxyurl = "https://cors-anywhere.herokuapp.com/"; // Use a proxy to avoid CORS error
          const api_key = "yu5bx68acy932itf665y5fdnqdcj1n";
          const url ="https://api.barcodelookup.com/v2/products?barcode=42299837&formatted=y&key="+api_key;
          fetch(url,{ 
             
             mode: 'no-cors'
             })
                  .then(response => response.json())
                  .then((data) => {
                    console.log(data)
                    // alert("feito")
    //         document.getElementById("description_item").innerHTML = (data.products[0].barcode_number);
    // document.getElementById("ProductName").innerHTML = (data.products[0].product_name);
    // document.getElementById("EntireResponse").innerHTML = JSON.stringify(data, null,"<br/>");
                  })
                  .catch(err => { 
                      throw err 
                  });

// ***********************************************2 opcao************************************************* 
var request = new XMLHttpRequest();

request.open('GET', url);


// request.setRequestHeader('Content-Type', 'application/json'); //Obrigatorio API
// request.setRequestHeader('mode', 'no-cors'); //Obrigatorio API
request.setRequestHeader('Access-Control-Allow-Headers', '*');
request.setRequestHeader('Content-type', 'application/ecmascript');
request.setRequestHeader('Access-Control-Allow-Origin', '*');

request.onreadystatechange = function () {
  if (this.readyState === 4) {
      if(request.status === 200){
      console.log('Status:', this.status);
      console.log('Headers:', this.getAllResponseHeaders());
      console.log('Body:', this.responseText);

                          console.log(request);

      }else{
          console.log("Erro");
          console.log(request);
      }
  }
};

request.send(); 

// ******************************************************************3 opcao************************************

var newXHR = null, // Defined in the global scope. So we can abort XHR requests when it's necessary.
  breeds = {}, // Declare the breeds object in the global scope.
  subBreeds = {}; // Declare the subBreeds object in the global scope.

function sendXHR(type, url, data, callback) {
  newXHR = new XMLHttpRequest() || new window.ActiveXObject("Microsoft.XMLHTTP");
  newXHR.open(type, url, true);
  newXHR.send(data);
  newXHR.onreadystatechange = function() { // Use onreadystatechange instead onload.
    if (this.status === 200 && this.readyState === 4) {
      callback(this.response);
    }
  };
}
sendXHR("GET", url, null, function(response) {
  breeds = JSON.parse(response);
  sendXHR("GET", url, null, function(response) {
    subBreeds = JSON.parse(response);
    subBreeds.message.map(function(x) {
      breeds.message.terrier.push(x);
    });
    console.log(breeds.message);
  });
});
// ***************************************4opcao***************************************

  var req = new XMLHttpRequest();
        req.open('POST', url, true); // Open an async AJAX request.
        req.setRequestHeader('Content-Type', 'application/json'); // Send JSON due to the {test: "test"} in question
        req.responseType = 'blob'; // Define the expected data as blob
         // req.send(JSON.stringify({fitchero}));
        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            
            if (req.status === 200) { // When data is received successfully
              var data = req.response;
              console.log(data)
              var defaultFilename = 'ficheiro.pdf';
              // Or, you can get filename sent from backend through req.getResponseHeader('Content-Disposition')
              if (typeof window.navigator.msSaveBlob === 'function') {
                // If it is IE that support download blob directly.
                window.navigator.msSaveBlob(data, defaultFilename);
              } 
              else 
              {
                var blob = data;
                console.log(blob)
                // var link = document.createElement('a');
                // link.href = window.URL.createObjectURL(blob);
                // link.download = defaultFilename;
                // document.body.appendChild(link);

                // link.click(); // create an <a> element and simulate the click operation.
              }
            }
          }
        };



      }

